"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7881],{6114:function(e){var t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},n={"{":"\\{","}":"\\}","\\":"\\textbackslash{}","#":"\\#",$:"\\$","%":"\\%","&":"\\&","^":"\\textasciicircum{}",_:"\\_","~":"\\textasciitilde{}"},r={"–":"\\--","—":"\\---"," ":"~","	":"\\qquad{}","\r\n":"\\newline{}","\n":"\\newline{}"};e.exports=function(e){for(var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=a.preserveFormatting,s=a.escapeMapFn,o=String(e),l="",c=(void 0===s?function(e,n){return t({},e,n)}:s)(t({},n),void 0!==i&&i?t({},r):{}),u=Object.keys(c);o;)!function(){var e=!1;u.forEach(function(t,n){!e&&o.length>=t.length&&o.slice(0,t.length)===t&&(l+=c[u[n]],o=o.slice(t.length,o.length),e=!0)}),e||(l+=o.slice(0,1),o=o.slice(1,o.length))}();return l}},7881:function(e,t,n){n.d(t,{tS:function(){return tK}});var r=n(2110),a=n(1513),i=n(7694),s=new Set(["end"]),o=n(6992),l=n(5284),c=n(2187),u=(0,l.d5)("Node",["mathWithTransform"],e=>{var{mathWithTransform:t}=e;class n{get type(){return"Node"}get isNode(){return!0}evaluate(e){return this.compile().evaluate(e)}compile(){var e=this._compile(t,{}),n={};return{evaluate:function(t){var r=(0,c.df)(t);return!function(e){for(var t of[...s])if(e.has(t))throw Error('Scope contains an illegal symbol, "'+t+'" is a reserved keyword')}(r),e(r,n,null)}}}_compile(e,t){throw Error("Method _compile must be implemented by type "+this.type)}forEach(e){throw Error("Cannot run forEach on a Node interface")}map(e){throw Error("Cannot run map on a Node interface")}_ifNode(e){if(!(0,i.UG)(e))throw TypeError("Callback function must return a Node");return e}traverse(e){e(this,null,null),function e(t,n){t.forEach(function(t,r,a){n(t,r,a),e(t,n)})}(this,e)}transform(e){return function t(n,r,a){var i=e(n,r,a);return i!==n?i:n.map(t)}(this,null,null)}filter(e){var t=[];return this.traverse(function(n,r,a){e(n,r,a)&&t.push(n)}),t}clone(){throw Error("Cannot clone a Node interface")}cloneDeep(){return this.map(function(e){return e.cloneDeep()})}equals(e){return!!e&&this.type===e.type&&(0,o.J5)(this,e)}toString(e){var t=this._getCustomString(e);return void 0!==t?t:this._toString(e)}_toString(){throw Error("_toString not implemented for "+this.type)}toJSON(){throw Error("Cannot serialize object: toJSON not implemented by "+this.type)}toHTML(e){var t=this._getCustomString(e);return void 0!==t?t:this._toHTML(e)}_toHTML(){throw Error("_toHTML not implemented for "+this.type)}toTex(e){var t=this._getCustomString(e);return void 0!==t?t:this._toTex(e)}_toTex(e){throw Error("_toTex not implemented for "+this.type)}_getCustomString(e){if(e&&"object"==typeof e)switch(typeof e.handler){case"object":case"undefined":return;case"function":return e.handler(this,e);default:throw TypeError("Object or function expected as callback")}}getIdentifier(){return this.type}getContent(){return this}}return n},{isClass:!0,isNode:!0}),p=n(7632),m=n(6886),d=n(9790),h="ObjectNode",f=(0,l.d5)(h,["Node"],e=>{var{Node:t}=e;class n extends t{get type(){return h}get isObjectNode(){return!0}_compile(e,t){var n={};for(var r in this.properties)if((0,o.nr)(this.properties,r)){var a=JSON.parse((0,d.Pz)(r)),i=(0,m.YF)(this.properties,r);n[a]=i._compile(e,t)}return function(e,t,r){var a={};for(var i in n)(0,o.nr)(n,i)&&(a[i]=n[i](e,t,r));return a}}forEach(e){for(var t in this.properties)(0,o.nr)(this.properties,t)&&e(this.properties[t],"properties["+(0,d.Pz)(t)+"]",this)}map(e){var t={};for(var r in this.properties)(0,o.nr)(this.properties,r)&&(t[r]=this._ifNode(e(this.properties[r],"properties["+(0,d.Pz)(r)+"]",this)));return new n(t)}clone(){var e={};for(var t in this.properties)(0,o.nr)(this.properties,t)&&(e[t]=this.properties[t]);return new n(e)}_toString(e){var t=[];for(var n in this.properties)(0,o.nr)(this.properties,n)&&t.push((0,d.Pz)(n)+": "+this.properties[n].toString(e));return"{"+t.join(", ")+"}"}toJSON(){return{mathjs:h,properties:this.properties}}static fromJSON(e){return new n(e.properties)}_toHTML(e){var t=[];for(var n in this.properties)(0,o.nr)(this.properties,n)&&t.push('<span class="math-symbol math-property">'+(0,d.YU)(n)+'</span><span class="math-operator math-assignment-operator math-property-assignment-operator math-binary-operator">:</span>'+this.properties[n].toHTML(e));return'<span class="math-parenthesis math-curly-parenthesis">{</span>'+t.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-curly-parenthesis">}</span>'}_toTex(e){var t=[];for(var n in this.properties)(0,o.nr)(this.properties,n)&&t.push("\\mathbf{"+n+":} & "+this.properties[n].toTex(e)+"\\\\");return"\\left\\{\\begin{array}{ll}"+t.join("\n")+"\\end{array}\\right\\}"}constructor(e){if(super(),this.properties=e||{},e&&("object"!=typeof e||!Object.keys(e).every(function(t){return(0,i.UG)(e[t])})))throw TypeError("Object containing Nodes expected")}}return(0,p.Z)(n,"name",h),n},{isClass:!0,isNode:!0}),g=n(5836);function x(e,t){return new c.A3(e,new c.hB(t),new Set(Object.keys(t)))}var y=[{AssignmentNode:{},FunctionAssignmentNode:{}},{ConditionalNode:{latexLeftParens:!1,latexRightParens:!1,latexParens:!1}},{"OperatorNode:or":{op:"or",associativity:"left",associativeWith:[]}},{"OperatorNode:xor":{op:"xor",associativity:"left",associativeWith:[]}},{"OperatorNode:and":{op:"and",associativity:"left",associativeWith:[]}},{"OperatorNode:bitOr":{op:"|",associativity:"left",associativeWith:[]}},{"OperatorNode:bitXor":{op:"^|",associativity:"left",associativeWith:[]}},{"OperatorNode:bitAnd":{op:"&",associativity:"left",associativeWith:[]}},{"OperatorNode:equal":{op:"==",associativity:"left",associativeWith:[]},"OperatorNode:unequal":{op:"!=",associativity:"left",associativeWith:[]},"OperatorNode:smaller":{op:"<",associativity:"left",associativeWith:[]},"OperatorNode:larger":{op:">",associativity:"left",associativeWith:[]},"OperatorNode:smallerEq":{op:"<=",associativity:"left",associativeWith:[]},"OperatorNode:largerEq":{op:">=",associativity:"left",associativeWith:[]},RelationalNode:{associativity:"left",associativeWith:[]}},{"OperatorNode:leftShift":{op:"<<",associativity:"left",associativeWith:[]},"OperatorNode:rightArithShift":{op:">>",associativity:"left",associativeWith:[]},"OperatorNode:rightLogShift":{op:">>>",associativity:"left",associativeWith:[]}},{"OperatorNode:to":{op:"to",associativity:"left",associativeWith:[]}},{RangeNode:{}},{"OperatorNode:add":{op:"+",associativity:"left",associativeWith:["OperatorNode:add","OperatorNode:subtract"]},"OperatorNode:subtract":{op:"-",associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{op:"*",associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]},"OperatorNode:divide":{op:"/",associativity:"left",associativeWith:[],latexLeftParens:!1,latexRightParens:!1,latexParens:!1},"OperatorNode:dotMultiply":{op:".*",associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:doDivide"]},"OperatorNode:dotDivide":{op:"./",associativity:"left",associativeWith:[]},"OperatorNode:mod":{op:"mod",associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]}},{"OperatorNode:unaryPlus":{op:"+",associativity:"right"},"OperatorNode:unaryMinus":{op:"-",associativity:"right"},"OperatorNode:bitNot":{op:"~",associativity:"right"},"OperatorNode:not":{op:"not",associativity:"right"}},{"OperatorNode:pow":{op:"^",associativity:"right",associativeWith:[],latexRightParens:!1},"OperatorNode:dotPow":{op:".^",associativity:"right",associativeWith:[]}},{"OperatorNode:factorial":{op:"!",associativity:"left"}},{"OperatorNode:ctranspose":{op:"'",associativity:"left"}}];function v(e,t){if(!t||"auto"!==t)return e;for(var n=e;(0,i.Ig)(n);)n=n.content;return n}function b(e,t,n,r){var a=e;"keep"!==t&&(a=e.getContent());for(var s=a.getIdentifier(),o=null,l=0;l<y.length;l++)if(s in y[l]){o=l;break}if("OperatorNode:multiply"===s&&a.implicit&&"show"!==n){var c=v(a.args[0],t);(0,i.nu)(c)&&r&&"OperatorNode:divide"===r.getIdentifier()&&(0,i.ZX)(v(r.args[0],t))||"OperatorNode:divide"===c.getIdentifier()&&(0,i.ZX)(v(c.args[0],t))&&(0,i.nu)(v(c.args[1]))||(o+=1)}return o}function w(e,t){var n=e;"keep"!==t&&(n=e.getContent());var r=n.getIdentifier(),a=b(n,t);if(null===a)return null;var i=y[a][r];if((0,o.nr)(i,"associativity")){if("left"===i.associativity)return"left";if("right"===i.associativity)return"right";throw Error("'"+r+"' has the invalid associativity '"+i.associativity+"'.")}return null}function N(e,t,n){var r="keep"!==n?e.getContent():e,a="keep"!==n?e.getContent():t,i=r.getIdentifier(),s=a.getIdentifier(),l=b(r,n);if(null===l)return null;var c=y[l][i];if((0,o.nr)(c,"associativeWith")&&c.associativeWith instanceof Array){for(var u=0;u<c.associativeWith.length;u++)if(c.associativeWith[u]===s)return!0;return!1}return null}var k=n(6114),C={Alpha:"A",alpha:"\\alpha",Beta:"B",beta:"\\beta",Gamma:"\\Gamma",gamma:"\\gamma",Delta:"\\Delta",delta:"\\delta",Epsilon:"E",epsilon:"\\epsilon",varepsilon:"\\varepsilon",Zeta:"Z",zeta:"\\zeta",Eta:"H",eta:"\\eta",Theta:"\\Theta",theta:"\\theta",vartheta:"\\vartheta",Iota:"I",iota:"\\iota",Kappa:"K",kappa:"\\kappa",varkappa:"\\varkappa",Lambda:"\\Lambda",lambda:"\\lambda",Mu:"M",mu:"\\mu",Nu:"N",nu:"\\nu",Xi:"\\Xi",xi:"\\xi",Omicron:"O",omicron:"o",Pi:"\\Pi",pi:"\\pi",varpi:"\\varpi",Rho:"P",rho:"\\rho",varrho:"\\varrho",Sigma:"\\Sigma",sigma:"\\sigma",varsigma:"\\varsigma",Tau:"T",tau:"\\tau",Upsilon:"\\Upsilon",upsilon:"\\upsilon",Phi:"\\Phi",phi:"\\phi",varphi:"\\varphi",Chi:"X",chi:"\\chi",Psi:"\\Psi",psi:"\\psi",Omega:"\\Omega",omega:"\\omega",true:"\\mathrm{True}",false:"\\mathrm{False}",i:"i",inf:"\\infty",Inf:"\\infty",infinity:"\\infty",Infinity:"\\infty",oo:"\\infty",lim:"\\lim",undefined:"\\mathbf{?}"},S={transpose:"^\\top",ctranspose:"^H",factorial:"!",pow:"^",dotPow:".^\\wedge",unaryPlus:"+",unaryMinus:"-",bitNot:"\\~",not:"\\neg",multiply:"\\cdot",divide:"\\frac",dotMultiply:".\\cdot",dotDivide:".:",mod:"\\mod",add:"+",subtract:"-",to:"\\rightarrow",leftShift:"<<",rightArithShift:">>",rightLogShift:">>>",equal:"=",unequal:"\\neq",smaller:"<",larger:">",smallerEq:"\\leq",largerEq:"\\geq",bitAnd:"\\&",bitXor:"\\underline{|}",bitOr:"|",and:"\\wedge",xor:"\\veebar",or:"\\vee"},T={abs:{1:"\\left|${args[0]}\\right|"},add:{2:"\\left(${args[0]}".concat(S.add,"${args[1]}\\right)")},cbrt:{1:"\\sqrt[3]{${args[0]}}"},ceil:{1:"\\left\\lceil${args[0]}\\right\\rceil"},cube:{1:"\\left(${args[0]}\\right)^3"},divide:{2:"\\frac{${args[0]}}{${args[1]}}"},dotDivide:{2:"\\left(${args[0]}".concat(S.dotDivide,"${args[1]}\\right)")},dotMultiply:{2:"\\left(${args[0]}".concat(S.dotMultiply,"${args[1]}\\right)")},dotPow:{2:"\\left(${args[0]}".concat(S.dotPow,"${args[1]}\\right)")},exp:{1:"\\exp\\left(${args[0]}\\right)"},expm1:"\\left(e".concat(S.pow,"{${args[0]}}-1\\right)"),fix:{1:"\\mathrm{${name}}\\left(${args[0]}\\right)"},floor:{1:"\\left\\lfloor${args[0]}\\right\\rfloor"},gcd:"\\gcd\\left(${args}\\right)",hypot:"\\hypot\\left(${args}\\right)",log:{1:"\\ln\\left(${args[0]}\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}\\right)"},log10:{1:"\\log_{10}\\left(${args[0]}\\right)"},log1p:{1:"\\ln\\left(${args[0]}+1\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}+1\\right)"},log2:"\\log_{2}\\left(${args[0]}\\right)",mod:{2:"\\left(${args[0]}".concat(S.mod,"${args[1]}\\right)")},multiply:{2:"\\left(${args[0]}".concat(S.multiply,"${args[1]}\\right)")},norm:{1:"\\left\\|${args[0]}\\right\\|",2:void 0},nthRoot:{2:"\\sqrt[${args[1]}]{${args[0]}}"},nthRoots:{2:"\\{y : $y^{args[1]} = {${args[0]}}\\}"},pow:{2:"\\left(${args[0]}\\right)".concat(S.pow,"{${args[1]}}")},round:{1:"\\left\\lfloor${args[0]}\\right\\rceil",2:void 0},sign:{1:"\\mathrm{${name}}\\left(${args[0]}\\right)"},sqrt:{1:"\\sqrt{${args[0]}}"},square:{1:"\\left(${args[0]}\\right)^2"},subtract:{2:"\\left(${args[0]}".concat(S.subtract,"${args[1]}\\right)")},unaryMinus:{1:"".concat(S.unaryMinus,"\\left(${args[0]}\\right)")},unaryPlus:{1:"".concat(S.unaryPlus,"\\left(${args[0]}\\right)")},bitAnd:{2:"\\left(${args[0]}".concat(S.bitAnd,"${args[1]}\\right)")},bitNot:{1:S.bitNot+"\\left(${args[0]}\\right)"},bitOr:{2:"\\left(${args[0]}".concat(S.bitOr,"${args[1]}\\right)")},bitXor:{2:"\\left(${args[0]}".concat(S.bitXor,"${args[1]}\\right)")},leftShift:{2:"\\left(${args[0]}".concat(S.leftShift,"${args[1]}\\right)")},rightArithShift:{2:"\\left(${args[0]}".concat(S.rightArithShift,"${args[1]}\\right)")},rightLogShift:{2:"\\left(${args[0]}".concat(S.rightLogShift,"${args[1]}\\right)")},bellNumbers:{1:"\\mathrm{B}_{${args[0]}}"},catalan:{1:"\\mathrm{C}_{${args[0]}}"},stirlingS2:{2:"\\mathrm{S}\\left(${args}\\right)"},arg:{1:"\\arg\\left(${args[0]}\\right)"},conj:{1:"\\left(${args[0]}\\right)^*"},im:{1:"\\Im\\left\\lbrace${args[0]}\\right\\rbrace"},re:{1:"\\Re\\left\\lbrace${args[0]}\\right\\rbrace"},and:{2:"\\left(${args[0]}".concat(S.and,"${args[1]}\\right)")},not:{1:S.not+"\\left(${args[0]}\\right)"},or:{2:"\\left(${args[0]}".concat(S.or,"${args[1]}\\right)")},xor:{2:"\\left(${args[0]}".concat(S.xor,"${args[1]}\\right)")},cross:{2:"\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)"},ctranspose:{1:"\\left(${args[0]}\\right)".concat(S.ctranspose)},det:{1:"\\det\\left(${args[0]}\\right)"},dot:{2:"\\left(${args[0]}\\cdot${args[1]}\\right)"},expm:{1:"\\exp\\left(${args[0]}\\right)"},inv:{1:"\\left(${args[0]}\\right)^{-1}"},pinv:{1:"\\left(${args[0]}\\right)^{+}"},sqrtm:{1:"{${args[0]}}".concat(S.pow,"{\\frac{1}{2}}")},trace:{1:"\\mathrm{tr}\\left(${args[0]}\\right)"},transpose:{1:"\\left(${args[0]}\\right)".concat(S.transpose)},combinations:{2:"\\binom{${args[0]}}{${args[1]}}"},combinationsWithRep:{2:"\\left(\\!\\!{\\binom{${args[0]}}{${args[1]}}}\\!\\!\\right)"},factorial:{1:"\\left(${args[0]}\\right)".concat(S.factorial)},gamma:{1:"\\Gamma\\left(${args[0]}\\right)"},lgamma:{1:"\\ln\\Gamma\\left(${args[0]}\\right)"},equal:{2:"\\left(${args[0]}".concat(S.equal,"${args[1]}\\right)")},larger:{2:"\\left(${args[0]}".concat(S.larger,"${args[1]}\\right)")},largerEq:{2:"\\left(${args[0]}".concat(S.largerEq,"${args[1]}\\right)")},smaller:{2:"\\left(${args[0]}".concat(S.smaller,"${args[1]}\\right)")},smallerEq:{2:"\\left(${args[0]}".concat(S.smallerEq,"${args[1]}\\right)")},unequal:{2:"\\left(${args[0]}".concat(S.unequal,"${args[1]}\\right)")},erf:{1:"erf\\left(${args[0]}\\right)"},max:"\\max\\left(${args}\\right)",min:"\\min\\left(${args}\\right)",variance:"\\mathrm{Var}\\left(${args}\\right)",acos:{1:"\\cos^{-1}\\left(${args[0]}\\right)"},acosh:{1:"\\cosh^{-1}\\left(${args[0]}\\right)"},acot:{1:"\\cot^{-1}\\left(${args[0]}\\right)"},acoth:{1:"\\coth^{-1}\\left(${args[0]}\\right)"},acsc:{1:"\\csc^{-1}\\left(${args[0]}\\right)"},acsch:{1:"\\mathrm{csch}^{-1}\\left(${args[0]}\\right)"},asec:{1:"\\sec^{-1}\\left(${args[0]}\\right)"},asech:{1:"\\mathrm{sech}^{-1}\\left(${args[0]}\\right)"},asin:{1:"\\sin^{-1}\\left(${args[0]}\\right)"},asinh:{1:"\\sinh^{-1}\\left(${args[0]}\\right)"},atan:{1:"\\tan^{-1}\\left(${args[0]}\\right)"},atan2:{2:"\\mathrm{atan2}\\left(${args}\\right)"},atanh:{1:"\\tanh^{-1}\\left(${args[0]}\\right)"},cos:{1:"\\cos\\left(${args[0]}\\right)"},cosh:{1:"\\cosh\\left(${args[0]}\\right)"},cot:{1:"\\cot\\left(${args[0]}\\right)"},coth:{1:"\\coth\\left(${args[0]}\\right)"},csc:{1:"\\csc\\left(${args[0]}\\right)"},csch:{1:"\\mathrm{csch}\\left(${args[0]}\\right)"},sec:{1:"\\sec\\left(${args[0]}\\right)"},sech:{1:"\\mathrm{sech}\\left(${args[0]}\\right)"},sin:{1:"\\sin\\left(${args[0]}\\right)"},sinh:{1:"\\sinh\\left(${args[0]}\\right)"},tan:{1:"\\tan\\left(${args[0]}\\right)"},tanh:{1:"\\tanh\\left(${args[0]}\\right)"},to:{2:"\\left(${args[0]}".concat(S.to,"${args[1]}\\right)")},numeric:function(e,t){return e.args[0].toTex()},number:{0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},string:{0:'\\mathtt{""}',1:"\\mathrm{string}\\left(${args[0]}\\right)"},bignumber:{0:"0",1:"\\left(${args[0]}\\right)"},complex:{0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)+".concat(C.i,"\\cdot\\left(${args[1]}\\right)\\right)")},matrix:{0:"\\begin{bmatrix}\\end{bmatrix}",1:"\\left(${args[0]}\\right)",2:"\\left(${args[0]}\\right)"},sparse:{0:"\\begin{bsparse}\\end{bsparse}",1:"\\left(${args[0]}\\right)"},unit:{1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"}},O={deg:"^\\circ"};function A(e){return k(e,{preserveFormatting:!0})}function E(e,t){return(t=void 0!==t&&t)?(0,o.nr)(O,e)?O[e]:"\\mathrm{"+A(e)+"}":(0,o.nr)(C,e)?C[e]:A(e)}var q="OperatorNode",M=(0,l.d5)(q,["Node"],e=>{var{Node:t}=e;function n(e,t,n,r,a){var s=b(e,t,n),o=w(e,t);if("all"===t||r.length>2&&"OperatorNode:add"!==e.getIdentifier()&&"OperatorNode:multiply"!==e.getIdentifier())return r.map(function(e){switch(e.getContent().type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":return!1;default:return!0}});switch(r.length){case 0:l=[];break;case 1:var l,c,u,p=b(r[0],t,n,e);if(a&&null!==p&&("keep"===t?(c=r[0].getIdentifier(),u=e.getIdentifier()):(c=r[0].getContent().getIdentifier(),u=e.getContent().getIdentifier()),!1===y[s][u].latexLeftParens||!1===y[p][c].latexParens)||null===p){l=[!1];break}if(p<=s){l=[!0];break}l=[!1];break;case 2:var m,d,h,f,g,x=b(r[0],t,n,e),v=N(e,r[0],t);m=null!==x&&(x===s&&"right"===o&&!v||x<s);var k=b(r[1],t,n,e),C=N(e,r[1],t);d=null!==k&&(k===s&&"left"===o&&!C||k<s),a&&("keep"===t?(h=e.getIdentifier(),f=e.args[0].getIdentifier(),g=e.args[1].getIdentifier()):(h=e.getContent().getIdentifier(),f=e.args[0].getContent().getIdentifier(),g=e.args[1].getContent().getIdentifier()),null!==x&&(!1===y[s][h].latexLeftParens&&(m=!1),!1===y[x][f].latexParens&&(m=!1)),null!==k&&(!1===y[s][h].latexRightParens&&(d=!1),!1===y[k][g].latexParens&&(d=!1))),l=[m,d];break;default:("OperatorNode:add"===e.getIdentifier()||"OperatorNode:multiply"===e.getIdentifier())&&(l=r.map(function(r){var a=b(r,t,n,e),i=N(e,r,t),l=w(r,t);if(null===a);else if(s===a&&o===l&&!i)return!0;else if(a<s)return!0;return!1}))}if(r.length>=2&&"OperatorNode:multiply"===e.getIdentifier()&&e.implicit&&"all"!==t&&"hide"===n)for(var S=1;S<l.length;++S)!function e(t,n){var r=t;if("auto"===n)for(;(0,i.Ig)(r);)r=r.content;return!!(0,i.nu)(r)||!!(0,i.bV)(r)&&e(r.args[0],n)}(r[S],t)||l[S-1]||"keep"===t&&(0,i.Ig)(r[S-1])||(l[S]=!0);return l}class r extends t{get type(){return q}get isOperatorNode(){return!0}_compile(e,t){if("string"!=typeof this.fn||!(0,m.OJ)(e,this.fn)){if(e[this.fn])throw Error('No access to function "'+this.fn+'"');throw Error("Function "+this.fn+' missing in provided namespace "math"')}var n=(0,m.YF)(e,this.fn),r=(0,g.UI)(this.args,function(n){return n._compile(e,t)});if("function"==typeof n&&!0===n.rawArgs){var a=this.args;return function(t,r,i){return n(a,e,x(t,r))}}if(1===r.length){var i=r[0];return function(e,t,r){return n(i(e,t,r))}}if(2!==r.length)return function(e,t,a){return n.apply(null,(0,g.UI)(r,function(n){return n(e,t,a)}))};var s=r[0],o=r[1];return function(e,t,r){return n(s(e,t,r),o(e,t,r))}}forEach(e){for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)}map(e){for(var t=[],n=0;n<this.args.length;n++)t[n]=this._ifNode(e(this.args[n],"args["+n+"]",this));return new r(this.op,this.fn,t,this.implicit,this.isPercentage)}clone(){return new r(this.op,this.fn,this.args.slice(0),this.implicit,this.isPercentage)}isUnary(){return 1===this.args.length}isBinary(){return 2===this.args.length}_toString(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=e&&e.implicit?e.implicit:"hide",a=this.args,i=n(this,t,r,a,!1);if(1===a.length){var s=w(this,t),o=a[0].toString(e);i[0]&&(o="("+o+")");var l=/[a-zA-Z]+/.test(this.op);return"right"===s?this.op+(l?" ":"")+o:"left"===s?o+(l?" ":"")+this.op:o+this.op}if(2===a.length){var c=a[0].toString(e),u=a[1].toString(e);return(i[0]&&(c="("+c+")"),i[1]&&(u="("+u+")"),this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===r)?c+" "+u:c+" "+this.op+" "+u}if(!(a.length>2)||"OperatorNode:add"!==this.getIdentifier()&&"OperatorNode:multiply"!==this.getIdentifier())return this.fn+"("+this.args.join(", ")+")";var p=a.map(function(t,n){return t=t.toString(e),i[n]&&(t="("+t+")"),t});return this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===r?p.join(" "):p.join(" "+this.op+" ")}toJSON(){return{mathjs:q,op:this.op,fn:this.fn,args:this.args,implicit:this.implicit,isPercentage:this.isPercentage}}static fromJSON(e){return new r(e.op,e.fn,e.args,e.implicit,e.isPercentage)}_toHTML(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=e&&e.implicit?e.implicit:"hide",a=this.args,i=n(this,t,r,a,!1);if(1===a.length){var s=w(this,t),o=a[0].toHTML(e);return(i[0]&&(o='<span class="math-parenthesis math-round-parenthesis">(</span>'+o+'<span class="math-parenthesis math-round-parenthesis">)</span>'),"right"===s)?'<span class="math-operator math-unary-operator math-lefthand-unary-operator">'+(0,d.YU)(this.op)+"</span>"+o:o+'<span class="math-operator math-unary-operator math-righthand-unary-operator">'+(0,d.YU)(this.op)+"</span>"}if(2===a.length){var l=a[0].toHTML(e),c=a[1].toHTML(e);return(i[0]&&(l='<span class="math-parenthesis math-round-parenthesis">(</span>'+l+'<span class="math-parenthesis math-round-parenthesis">)</span>'),i[1]&&(c='<span class="math-parenthesis math-round-parenthesis">(</span>'+c+'<span class="math-parenthesis math-round-parenthesis">)</span>'),this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===r)?l+'<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'+c:l+'<span class="math-operator math-binary-operator math-explicit-binary-operator">'+(0,d.YU)(this.op)+"</span>"+c}var u=a.map(function(t,n){return t=t.toHTML(e),i[n]&&(t='<span class="math-parenthesis math-round-parenthesis">(</span>'+t+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t});return a.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())?this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===r?u.join('<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'):u.join('<span class="math-operator math-binary-operator math-explicit-binary-operator">'+(0,d.YU)(this.op)+"</span>"):'<span class="math-function">'+(0,d.YU)(this.fn)+'</span><span class="math-paranthesis math-round-parenthesis">(</span>'+u.join('<span class="math-separator">,</span>')+'<span class="math-paranthesis math-round-parenthesis">)</span>'}_toTex(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=e&&e.implicit?e.implicit:"hide",a=this.args,i=n(this,t,r,a,!0),s=S[this.fn];if(s=void 0===s?this.op:s,1===a.length){var o=w(this,t),l=a[0].toTex(e);return(i[0]&&(l="\\left(".concat(l,"\\right)")),"right"===o)?s+l:l+s}if(2===a.length){var c,u=a[0],p=u.toTex(e);i[0]&&(p="\\left(".concat(p,"\\right)"));var m=a[1].toTex(e);switch(i[1]&&(m="\\left(".concat(m,"\\right)")),c="keep"===t?u.getIdentifier():u.getContent().getIdentifier(),this.getIdentifier()){case"OperatorNode:divide":return s+"{"+p+"}{"+m+"}";case"OperatorNode:pow":switch(p="{"+p+"}",m="{"+m+"}",c){case"ConditionalNode":case"OperatorNode:divide":p="\\left(".concat(p,"\\right)")}break;case"OperatorNode:multiply":if(this.implicit&&"hide"===r)return p+"~"+m}return p+s+m}if(!(a.length>2)||"OperatorNode:add"!==this.getIdentifier()&&"OperatorNode:multiply"!==this.getIdentifier())return"\\mathrm{"+this.fn+"}\\left("+a.map(function(t){return t.toTex(e)}).join(",")+"\\right)";var d=a.map(function(t,n){return t=t.toTex(e),i[n]&&(t="\\left(".concat(t,"\\right)")),t});return"OperatorNode:multiply"===this.getIdentifier()&&this.implicit&&"hide"===r?d.join("~"):d.join(s)}getIdentifier(){return this.type+":"+this.fn}constructor(e,t,n,r,a){if(super(),"string"!=typeof e)throw TypeError('string expected for parameter "op"');if("string"!=typeof t)throw TypeError('string expected for parameter "fn"');if(!Array.isArray(n)||!n.every(i.UG))throw TypeError('Array containing Nodes expected for parameter "args"');this.implicit=!0===r,this.isPercentage=!0===a,this.op=e,this.fn=t,this.args=n||[]}}return(0,p.Z)(r,"name",q),r},{isClass:!0,isNode:!0}),z="ParenthesisNode",j=(0,l.d5)(z,["Node"],e=>{var{Node:t}=e;class n extends t{get type(){return z}get isParenthesisNode(){return!0}_compile(e,t){return this.content._compile(e,t)}getContent(){return this.content.getContent()}forEach(e){e(this.content,"content",this)}map(e){return new n(e(this.content,"content",this))}clone(){return new n(this.content)}_toString(e){return!e||e&&!e.parenthesis||e&&"keep"===e.parenthesis?"("+this.content.toString(e)+")":this.content.toString(e)}toJSON(){return{mathjs:z,content:this.content}}static fromJSON(e){return new n(e.content)}_toHTML(e){return!e||e&&!e.parenthesis||e&&"keep"===e.parenthesis?'<span class="math-parenthesis math-round-parenthesis">(</span>'+this.content.toHTML(e)+'<span class="math-parenthesis math-round-parenthesis">)</span>':this.content.toHTML(e)}_toTex(e){return!e||e&&!e.parenthesis||e&&"keep"===e.parenthesis?"\\left(".concat(this.content.toTex(e),"\\right)"):this.content.toTex(e)}constructor(e){if(super(),!(0,i.UG)(e))throw TypeError('Node expected for parameter "content"');this.content=e}}return(0,p.Z)(n,"name",z),n},{isClass:!0,isNode:!0}),I="RelationalNode",F=(0,l.d5)(I,["Node"],e=>{var{Node:t}=e,n={equal:"==",unequal:"!=",smaller:"<",larger:">",smallerEq:"<=",largerEq:">="};class r extends t{get type(){return I}get isRelationalNode(){return!0}_compile(e,t){var n=this,r=this.params.map(n=>n._compile(e,t));return function(t,a,i){for(var s,o=r[0](t,a,i),l=0;l<n.conditionals.length;l++)if(s=o,o=r[l+1](t,a,i),!(0,m.YF)(e,n.conditionals[l])(s,o))return!1;return!0}}forEach(e){this.params.forEach((t,n)=>e(t,"params["+n+"]",this),this)}map(e){return new r(this.conditionals.slice(),this.params.map((t,n)=>this._ifNode(e(t,"params["+n+"]",this)),this))}clone(){return new r(this.conditionals,this.params)}_toString(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",r=b(this,t,e&&e.implicit),a=this.params.map(function(n,a){var i=b(n,t,e&&e.implicit);return"all"===t||null!==i&&i<=r?"("+n.toString(e)+")":n.toString(e)}),i=a[0],s=0;s<this.conditionals.length;s++)i+=" "+n[this.conditionals[s]]+" "+a[s+1];return i}toJSON(){return{mathjs:I,conditionals:this.conditionals,params:this.params}}static fromJSON(e){return new r(e.conditionals,e.params)}_toHTML(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",r=b(this,t,e&&e.implicit),a=this.params.map(function(n,a){var i=b(n,t,e&&e.implicit);return"all"===t||null!==i&&i<=r?'<span class="math-parenthesis math-round-parenthesis">(</span>'+n.toHTML(e)+'<span class="math-parenthesis math-round-parenthesis">)</span>':n.toHTML(e)}),i=a[0],s=0;s<this.conditionals.length;s++)i+='<span class="math-operator math-binary-operator math-explicit-binary-operator">'+(0,d.YU)(n[this.conditionals[s]])+"</span>"+a[s+1];return i}_toTex(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",n=b(this,t,e&&e.implicit),r=this.params.map(function(r,a){var i=b(r,t,e&&e.implicit);return"all"===t||null!==i&&i<=n?"\\left("+r.toTex(e)+"\right)":r.toTex(e)}),a=r[0],i=0;i<this.conditionals.length;i++)a+=S[this.conditionals[i]]+r[i+1];return a}constructor(e,t){if(super(),!Array.isArray(e))throw TypeError("Parameter conditionals must be an array");if(!Array.isArray(t))throw TypeError("Parameter params must be an array");if(e.length!==t.length-1)throw TypeError("Parameter params must contain exactly one more element than parameter conditionals");this.conditionals=e,this.params=t}}return(0,p.Z)(r,"name",I),r},{isClass:!0,isNode:!0}),P="ArrayNode",R=(0,l.d5)(P,["Node"],e=>{var{Node:t}=e;class n extends t{get type(){return P}get isArrayNode(){return!0}_compile(e,t){var n=(0,g.UI)(this.items,function(n){return n._compile(e,t)});if(!("Array"!==e.config.matrix))return function(e,t,r){return(0,g.UI)(n,function(n){return n(e,t,r)})};var r=e.matrix;return function(e,t,a){return r((0,g.UI)(n,function(n){return n(e,t,a)}))}}forEach(e){for(var t=0;t<this.items.length;t++)e(this.items[t],"items["+t+"]",this)}map(e){for(var t=[],r=0;r<this.items.length;r++)t[r]=this._ifNode(e(this.items[r],"items["+r+"]",this));return new n(t)}clone(){return new n(this.items.slice(0))}_toString(e){return"["+this.items.map(function(t){return t.toString(e)}).join(", ")+"]"}toJSON(){return{mathjs:P,items:this.items}}static fromJSON(e){return new n(e.items)}_toHTML(e){return'<span class="math-parenthesis math-square-parenthesis">[</span>'+this.items.map(function(t){return t.toHTML(e)}).join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-square-parenthesis">]</span>'}_toTex(e){return function t(n,r){var a=n.some(i.j0)&&!n.every(i.j0),s=r||a,o=n.map(function(n){return n.items?t(n.items,!r):n.toTex(e)}).join(s?"&":"\\\\");return a||!s||s&&!r?"\\begin{bmatrix}"+o+"\\end{bmatrix}":o}(this.items,!1)}constructor(e){if(super(),this.items=e||[],!Array.isArray(this.items)||!this.items.every(i.UG))throw TypeError("Array containing Nodes expected")}}return(0,p.Z)(n,"name",P),n},{isClass:!0,isNode:!0}),D="BlockNode",$=(0,l.d5)(D,["ResultSet","Node"],e=>{var{ResultSet:t,Node:n}=e;class r extends n{get type(){return D}get isBlockNode(){return!0}_compile(e,n){var r=(0,g.UI)(this.blocks,function(t){return{evaluate:t.node._compile(e,n),visible:t.visible}});return function(e,n,a){var i=[];return(0,g.Ed)(r,function(t){var r=t.evaluate(e,n,a);t.visible&&i.push(r)}),new t(i)}}forEach(e){for(var t=0;t<this.blocks.length;t++)e(this.blocks[t].node,"blocks["+t+"].node",this)}map(e){for(var t=[],n=0;n<this.blocks.length;n++){var a=this.blocks[n],i=this._ifNode(e(a.node,"blocks["+n+"].node",this));t[n]={node:i,visible:a.visible}}return new r(t)}clone(){return new r(this.blocks.map(function(e){return{node:e.node,visible:e.visible}}))}_toString(e){return this.blocks.map(function(t){return t.node.toString(e)+(t.visible?"":";")}).join("\n")}toJSON(){return{mathjs:D,blocks:this.blocks}}static fromJSON(e){return new r(e.blocks)}_toHTML(e){return this.blocks.map(function(t){return t.node.toHTML(e)+(t.visible?"":'<span class="math-separator">;</span>')}).join('<span class="math-separator"><br /></span>')}_toTex(e){return this.blocks.map(function(t){return t.node.toTex(e)+(t.visible?"":";")}).join("\\;\\;\n")}constructor(e){if(super(),!Array.isArray(e))throw Error("Array expected");this.blocks=e.map(function(e){var t=e&&e.node,n=!e||void 0===e.visible||e.visible;if(!(0,i.UG)(t))throw TypeError('Property "node" must be a Node');if("boolean"!=typeof n)throw TypeError('Property "visible" must be a boolean');return{node:t,visible:n}})}}return(0,p.Z)(r,"name",D),r},{isClass:!0,isNode:!0}),L="ConditionalNode",U=(0,l.d5)(L,["Node"],e=>{var{Node:t}=e;class n extends t{get type(){return L}get isConditionalNode(){return!0}_compile(e,t){var n=this.condition._compile(e,t),r=this.trueExpr._compile(e,t),a=this.falseExpr._compile(e,t);return function(e,t,s){return!function(e){if("number"==typeof e||"boolean"==typeof e||"string"==typeof e)return!!e;if(e){if((0,i.l9)(e))return!e.isZero();if((0,i.Mc)(e))return!!(e.re||e.im);if((0,i.wr)(e))return!!e.value}if(null==e)return!1;throw TypeError('Unsupported type of condition "'+(0,i.kM)(e)+'"')}(n(e,t,s))?a(e,t,s):r(e,t,s)}}forEach(e){e(this.condition,"condition",this),e(this.trueExpr,"trueExpr",this),e(this.falseExpr,"falseExpr",this)}map(e){return new n(this._ifNode(e(this.condition,"condition",this)),this._ifNode(e(this.trueExpr,"trueExpr",this)),this._ifNode(e(this.falseExpr,"falseExpr",this)))}clone(){return new n(this.condition,this.trueExpr,this.falseExpr)}_toString(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=b(this,t,e&&e.implicit),r=this.condition.toString(e),a=b(this.condition,t,e&&e.implicit);("all"===t||"OperatorNode"===this.condition.type||null!==a&&a<=n)&&(r="("+r+")");var i=this.trueExpr.toString(e),s=b(this.trueExpr,t,e&&e.implicit);("all"===t||"OperatorNode"===this.trueExpr.type||null!==s&&s<=n)&&(i="("+i+")");var o=this.falseExpr.toString(e),l=b(this.falseExpr,t,e&&e.implicit);return("all"===t||"OperatorNode"===this.falseExpr.type||null!==l&&l<=n)&&(o="("+o+")"),r+" ? "+i+" : "+o}toJSON(){return{mathjs:L,condition:this.condition,trueExpr:this.trueExpr,falseExpr:this.falseExpr}}static fromJSON(e){return new n(e.condition,e.trueExpr,e.falseExpr)}_toHTML(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=b(this,t,e&&e.implicit),r=this.condition.toHTML(e),a=b(this.condition,t,e&&e.implicit);("all"===t||"OperatorNode"===this.condition.type||null!==a&&a<=n)&&(r='<span class="math-parenthesis math-round-parenthesis">(</span>'+r+'<span class="math-parenthesis math-round-parenthesis">)</span>');var i=this.trueExpr.toHTML(e),s=b(this.trueExpr,t,e&&e.implicit);("all"===t||"OperatorNode"===this.trueExpr.type||null!==s&&s<=n)&&(i='<span class="math-parenthesis math-round-parenthesis">(</span>'+i+'<span class="math-parenthesis math-round-parenthesis">)</span>');var o=this.falseExpr.toHTML(e),l=b(this.falseExpr,t,e&&e.implicit);return("all"===t||"OperatorNode"===this.falseExpr.type||null!==l&&l<=n)&&(o='<span class="math-parenthesis math-round-parenthesis">(</span>'+o+'<span class="math-parenthesis math-round-parenthesis">)</span>'),r+'<span class="math-operator math-conditional-operator">?</span>'+i+'<span class="math-operator math-conditional-operator">:</span>'+o}_toTex(e){return"\\begin{cases} {"+this.trueExpr.toTex(e)+"}, &\\quad{\\text{if }\\;"+this.condition.toTex(e)+"}\\\\{"+this.falseExpr.toTex(e)+"}, &\\quad{\\text{otherwise}}\\end{cases}"}constructor(e,t,n){if(super(),!(0,i.UG)(e))throw TypeError("Parameter condition must be a Node");if(!(0,i.UG)(t))throw TypeError("Parameter trueExpr must be a Node");if(!(0,i.UG)(n))throw TypeError("Parameter falseExpr must be a Node");this.condition=e,this.trueExpr=t,this.falseExpr=n}}return(0,p.Z)(n,"name",L),n},{isClass:!0,isNode:!0}),_="ConstantNode",G=(0,l.d5)(_,["Node"],e=>{var{Node:t}=e;class n extends t{get type(){return _}get isConstantNode(){return!0}_compile(e,t){var n=this.value;return function(){return n}}forEach(e){}map(e){return this.clone()}clone(){return new n(this.value)}_toString(e){return(0,d.WU)(this.value,e)}_toHTML(e){var t=this._toString(e);switch((0,i.kM)(this.value)){case"number":case"BigNumber":case"Fraction":return'<span class="math-number">'+t+"</span>";case"string":return'<span class="math-string">'+t+"</span>";case"boolean":return'<span class="math-boolean">'+t+"</span>";case"null":return'<span class="math-null-symbol">'+t+"</span>";case"undefined":return'<span class="math-undefined">'+t+"</span>";default:return'<span class="math-symbol">'+t+"</span>"}}toJSON(){return{mathjs:_,value:this.value}}static fromJSON(e){return new n(e.value)}_toTex(e){var t=this._toString(e);switch((0,i.kM)(this.value)){case"string":return"\\mathtt{"+A(t)+"}";case"number":case"BigNumber":if(!isFinite(this.value))return 0>this.value.valueOf()?"-\\infty":"\\infty";var n=t.toLowerCase().indexOf("e");if(-1!==n)return t.substring(0,n)+"\\cdot10^{"+t.substring(n+1)+"}";return t;case"Fraction":return this.value.toLatex();default:return t}}constructor(e){super(),this.value=e}}return(0,p.Z)(n,"name",_),n},{isClass:!0,isNode:!0}),B="RangeNode",H=(0,l.d5)(B,["Node"],e=>{var{Node:t}=e;function n(e,t,n){var r=b(e,t,n),a={},i=b(e.start,t,n);if(a.start=null!==i&&i<=r||"all"===t,e.step){var s=b(e.step,t,n);a.step=null!==s&&s<=r||"all"===t}var o=b(e.end,t,n);return a.end=null!==o&&o<=r||"all"===t,a}class r extends t{get type(){return B}get isRangeNode(){return!0}needsEnd(){return this.filter(function(e){return(0,i.FG)(e)&&"end"===e.name}).length>0}_compile(e,t){var n=e.range,r=this.start._compile(e,t),a=this.end._compile(e,t);if(!this.step)return function(e,t,i){return n(r(e,t,i),a(e,t,i))};var i=this.step._compile(e,t);return function(e,t,s){return n(r(e,t,s),a(e,t,s),i(e,t,s))}}forEach(e){e(this.start,"start",this),e(this.end,"end",this),this.step&&e(this.step,"step",this)}map(e){return new r(this._ifNode(e(this.start,"start",this)),this._ifNode(e(this.end,"end",this)),this.step&&this._ifNode(e(this.step,"step",this)))}clone(){return new r(this.start,this.end,this.step&&this.step)}_toString(e){var t,r=n(this,e&&e.parenthesis?e.parenthesis:"keep",e&&e.implicit),a=this.start.toString(e);if(r.start&&(a="("+a+")"),t=a,this.step){var i=this.step.toString(e);r.step&&(i="("+i+")"),t+=":"+i}var s=this.end.toString(e);return r.end&&(s="("+s+")"),t+=":"+s}toJSON(){return{mathjs:B,start:this.start,end:this.end,step:this.step}}static fromJSON(e){return new r(e.start,e.end,e.step)}_toHTML(e){var t,r=n(this,e&&e.parenthesis?e.parenthesis:"keep",e&&e.implicit),a=this.start.toHTML(e);if(r.start&&(a='<span class="math-parenthesis math-round-parenthesis">(</span>'+a+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t=a,this.step){var i=this.step.toHTML(e);r.step&&(i='<span class="math-parenthesis math-round-parenthesis">(</span>'+i+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t+='<span class="math-operator math-range-operator">:</span>'+i}var s=this.end.toHTML(e);return r.end&&(s='<span class="math-parenthesis math-round-parenthesis">(</span>'+s+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t+='<span class="math-operator math-range-operator">:</span>'+s}_toTex(e){var t=n(this,e&&e.parenthesis?e.parenthesis:"keep",e&&e.implicit),r=this.start.toTex(e);if(t.start&&(r="\\left(".concat(r,"\\right)")),this.step){var a=this.step.toTex(e);t.step&&(a="\\left(".concat(a,"\\right)")),r+=":"+a}var i=this.end.toTex(e);return t.end&&(i="\\left(".concat(i,"\\right)")),r+=":"+i}constructor(e,t,n){if(super(),!(0,i.UG)(e)||!(0,i.UG)(t)||n&&!(0,i.UG)(n))throw TypeError("Node expected");if(arguments.length>3)throw Error("Too many arguments");this.start=e,this.end=t,this.step=n||null}}return(0,p.Z)(r,"name",B),r},{isClass:!0,isNode:!0}),W=(0,l.d5)("reviver",["classes"],e=>{var{classes:t}=e;return function(e,n){var r=t[n&&n.mathjs];return r&&"function"==typeof r.fromJSON?r.fromJSON(n):n}}),J=(0,l.d5)("Chain",["?on","math","typed"],e=>{var{on:t,math:n,typed:r}=e;function a(e){if(!(this instanceof a))throw SyntaxError("Constructor must be called with the new operator");(0,i.qg)(e)?this.value=e.value:this.value=e}function s(e,t){(0,o.Vo)(a.prototype,e,function(){var e=t();if("function"==typeof e)return l(e)})}function l(e){return function(){if(0==arguments.length)return new a(e(this.value));for(var t=[this.value],n=0;n<arguments.length;n++)t[n+1]=arguments[n];if(r.isTypedFunction(e)){var i=r.resolve(e,t);if(1===i.params.length)throw Error("chain function "+e.name+" cannot match rest parameter between chain value and additional arguments.");return new a(i.implementation.apply(e,t))}return new a(e.apply(e,t))}}a.prototype.type="Chain",a.prototype.isChain=!0,a.prototype.done=function(){return this.value},a.prototype.valueOf=function(){return this.value},a.prototype.toString=function(){return(0,d.WU)(this.value)},a.prototype.toJSON=function(){return{mathjs:"Chain",value:this.value}},a.fromJSON=function(e){return new a(e.value)},a.createProxy=function(e,t){if("string"==typeof e)"function"==typeof t&&(a.prototype[e]=l(t));else{var n=function(t){(0,o.nr)(e,t)&&void 0===c[t]&&s(t,()=>e[t])};for(var r in e)n(r)}};var c={expression:!0,docs:!0,type:!0,classes:!0,json:!0,error:!0,isChain:!0};return a.createProxy(n),t&&t("import",function(e,t,n){n||s(e,t)}),a},{isClass:!0}),Z="FunctionAssignmentNode",V=(0,l.d5)(Z,["typed","Node"],e=>{var{typed:t,Node:n}=e;function r(e,t,n){var r=b(e,t,n),a=b(e.expr,t,n);return"all"===t||null!==a&&a<=r}class a extends n{get type(){return Z}get isFunctionAssignmentNode(){return!0}_compile(e,n){var r=Object.create(n);(0,g.Ed)(this.params,function(e){r[e]=!0});var a=this.expr._compile(e,r),i=this.name,s=this.params,o=(0,g.v_)(this.types,","),l=i+"("+(0,g.v_)(this.params,", ")+")";return function(e,n,r){var c={};c[o]=function(){for(var t=Object.create(n),i=0;i<s.length;i++)t[s[i]]=arguments[i];return a(e,t,r)};var u=t(i,c);return u.syntax=l,e.set(i,u),u}}forEach(e){e(this.expr,"expr",this)}map(e){var t=this._ifNode(e(this.expr,"expr",this));return new a(this.name,this.params.slice(0),t)}clone(){return new a(this.name,this.params.slice(0),this.expr)}_toString(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=this.expr.toString(e);return r(this,t,e&&e.implicit)&&(n="("+n+")"),this.name+"("+this.params.join(", ")+") = "+n}toJSON(){var e=this.types;return{mathjs:Z,name:this.name,params:this.params.map(function(t,n){return{name:t,type:e[n]}}),expr:this.expr}}static fromJSON(e){return new a(e.name,e.params,e.expr)}_toHTML(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",n=[],a=0;a<this.params.length;a++)n.push('<span class="math-symbol math-parameter">'+(0,d.YU)(this.params[a])+"</span>");var i=this.expr.toHTML(e);return r(this,t,e&&e.implicit)&&(i='<span class="math-parenthesis math-round-parenthesis">(</span>'+i+'<span class="math-parenthesis math-round-parenthesis">)</span>'),'<span class="math-function">'+(0,d.YU)(this.name)+'</span><span class="math-parenthesis math-round-parenthesis">(</span>'+n.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-round-parenthesis">)</span><span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>'+i}_toTex(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=this.expr.toTex(e);return r(this,t,e&&e.implicit)&&(n="\\left(".concat(n,"\\right)")),"\\mathrm{"+this.name+"}\\left("+this.params.map(E).join(",")+"\\right)="+n}constructor(e,t,n){if(super(),"string"!=typeof e)throw TypeError('String expected for parameter "name"');if(!Array.isArray(t))throw TypeError('Array containing strings or objects expected for parameter "params"');if(!(0,i.UG)(n))throw TypeError('Node expected for parameter "expr"');if(s.has(e))throw Error('Illegal function name, "'+e+'" is a reserved keyword');var r=new Set;for(var a of t){var o="string"==typeof a?a:a.name;if(r.has(o))throw Error('Duplicate parameter name "'.concat(o,'"'));r.add(o)}this.name=e,this.params=t.map(function(e){return e&&e.name||e}),this.types=t.map(function(e){return e&&e.type||"any"}),this.expr=n}}return(0,p.Z)(a,"name",Z),a},{isClass:!0,isNode:!0}),Q="chain",X=(0,l.d5)(Q,["typed","Chain"],e=>{var{typed:t,Chain:n}=e;return t(Q,{"":function(){return new n},any:function(e){return new n(e)}})}),Y="IndexNode",K=(0,l.d5)(Y,["Node","size"],e=>{var{Node:t,size:n}=e;class r extends t{get type(){return Y}get isIndexNode(){return!0}_compile(e,t){var r=(0,g.UI)(this.dimensions,function(r,a){if(!(r.filter(e=>e.isSymbolNode&&"end"===e.name).length>0))return r._compile(e,t);var s=Object.create(t);s.end=!0;var o=r._compile(e,s);return function(e,t,r){if(!(0,i.SW)(r)&&!(0,i.kJ)(r)&&!(0,i.HD)(r))throw TypeError('Cannot resolve "end": context must be a Matrix, Array, or string but is '+(0,i.kM)(r));var s=n(r).valueOf(),l=Object.create(t);return l.end=s[a],o(e,l,r)}}),a=(0,m.YF)(e,"index");return function(e,t,n){return a(...(0,g.UI)(r,function(r){return r(e,t,n)}))}}forEach(e){for(var t=0;t<this.dimensions.length;t++)e(this.dimensions[t],"dimensions["+t+"]",this)}map(e){for(var t=[],n=0;n<this.dimensions.length;n++)t[n]=this._ifNode(e(this.dimensions[n],"dimensions["+n+"]",this));return new r(t,this.dotNotation)}clone(){return new r(this.dimensions.slice(0),this.dotNotation)}isObjectProperty(){return 1===this.dimensions.length&&(0,i.nu)(this.dimensions[0])&&"string"==typeof this.dimensions[0].value}getObjectProperty(){return this.isObjectProperty()?this.dimensions[0].value:null}_toString(e){return this.dotNotation?"."+this.getObjectProperty():"["+this.dimensions.join(", ")+"]"}toJSON(){return{mathjs:Y,dimensions:this.dimensions,dotNotation:this.dotNotation}}static fromJSON(e){return new r(e.dimensions,e.dotNotation)}_toHTML(e){for(var t=[],n=0;n<this.dimensions.length;n++)t[n]=this.dimensions[n].toHTML();return this.dotNotation?'<span class="math-operator math-accessor-operator">.</span><span class="math-symbol math-property">'+(0,d.YU)(this.getObjectProperty())+"</span>":'<span class="math-parenthesis math-square-parenthesis">[</span>'+t.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-square-parenthesis">]</span>'}_toTex(e){var t=this.dimensions.map(function(t){return t.toTex(e)});return this.dotNotation?"."+this.getObjectProperty():"_{"+t.join(",")+"}"}constructor(e,t){if(super(),this.dimensions=e,this.dotNotation=t||!1,!Array.isArray(e)||!e.every(i.UG))throw TypeError('Array containing Nodes expected for parameter "dimensions"');if(this.dotNotation&&!this.isObjectProperty())throw Error("dotNotation only applicable for object properties")}}return(0,p.Z)(r,"name",Y),r},{isClass:!0,isNode:!0}),ee=n(6896);function et(e){return e&&e.isIndexError?new ee.c(e.index+1,e.min+1,void 0!==e.max?e.max+1:void 0):e}function en(e){var{subset:t}=e;return function(e,n){try{if(Array.isArray(e))return t(e,n);if(e&&"function"==typeof e.subset)return e.subset(n);if("string"==typeof e)return t(e,n);if("object"==typeof e){if(!n.isObjectProperty())throw TypeError("Cannot apply a numeric index as object property");return(0,m.YF)(e,n.getObjectProperty())}else throw TypeError("Cannot apply index: unsupported type of object")}catch(e){throw et(e)}}}var er="AccessorNode",ea=(0,l.d5)(er,["subset","Node"],e=>{var{subset:t,Node:n}=e,r=en({subset:t});function a(e){return!((0,i.Yz)(e)||(0,i.j0)(e)||(0,i.nu)(e)||(0,i.VO)(e)||(0,i.Lr)(e)||(0,i.Ig)(e)||(0,i.FG)(e))}class s extends n{get name(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():"":this.object.name||""}get type(){return er}get isAccessorNode(){return!0}_compile(e,t){var n=this.object._compile(e,t),a=this.index._compile(e,t);if(!this.index.isObjectProperty())return function(e,t,i){var s=n(e,t,i),o=a(e,t,s);return r(s,o)};var i=this.index.getObjectProperty();return function(e,t,r){return(0,m.YF)(n(e,t,r),i)}}forEach(e){e(this.object,"object",this),e(this.index,"index",this)}map(e){return new s(this._ifNode(e(this.object,"object",this)),this._ifNode(e(this.index,"index",this)))}clone(){return new s(this.object,this.index)}_toString(e){var t=this.object.toString(e);return a(this.object)&&(t="("+t+")"),t+this.index.toString(e)}_toHTML(e){var t=this.object.toHTML(e);return a(this.object)&&(t='<span class="math-parenthesis math-round-parenthesis">(</span>'+t+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t+this.index.toHTML(e)}_toTex(e){var t=this.object.toTex(e);return a(this.object)&&(t="\\left(' + object + '\\right)"),t+this.index.toTex(e)}toJSON(){return{mathjs:er,object:this.object,index:this.index}}static fromJSON(e){return new s(e.object,e.index)}constructor(e,t){if(super(),!(0,i.UG)(e))throw TypeError('Node expected for parameter "object"');if(!(0,i.Cl)(t))throw TypeError('IndexNode expected for parameter "index"');this.object=e,this.index=t}}return(0,p.Z)(s,"name",er),s},{isClass:!0,isNode:!0}),ei="AssignmentNode",es=(0,l.d5)(ei,["subset","?matrix","Node"],e=>{var{subset:t,matrix:n,Node:r}=e,a=en({subset:t}),s=function(e){var{subset:t,matrix:n}=e;return function(e,r,a){try{if(Array.isArray(e))return n(e).subset(r,a).valueOf().forEach((t,n)=>{e[n]=t}),e;if(e&&"function"==typeof e.subset)return e.subset(r,a);if("string"==typeof e)return t(e,r,a);if("object"==typeof e){if(!r.isObjectProperty())throw TypeError("Cannot apply a numeric index as object property");return(0,m.nI)(e,r.getObjectProperty(),a),e}else throw TypeError("Cannot apply index: unsupported type of object")}catch(e){throw et(e)}}}({subset:t,matrix:n});function o(e,t,n){t||(t="keep");var r=b(e,t,n),a=b(e.value,t,n);return"all"===t||null!==a&&a<=r}class l extends r{get name(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():"":this.object.name||""}get type(){return ei}get isAssignmentNode(){return!0}_compile(e,t){var n=this.object._compile(e,t),r=this.index?this.index._compile(e,t):null,o=this.value._compile(e,t),l=this.object.name;if(this.index){if(this.index.isObjectProperty()){var c=this.index.getObjectProperty();return function(e,t,r){var a=n(e,t,r),i=o(e,t,r);return(0,m.nI)(a,c,i),i}}if((0,i.FG)(this.object))return function(e,t,a){var i=n(e,t,a),c=o(e,t,a),u=r(e,t,i);return e.set(l,s(i,u,c)),c};var u=this.object.object._compile(e,t);if(this.object.index.isObjectProperty()){var p=this.object.index.getObjectProperty();return function(e,t,n){var a=u(e,t,n),i=(0,m.YF)(a,p),l=r(e,t,i),c=o(e,t,n);return(0,m.nI)(a,p,s(i,l,c)),c}}var d=this.object.index._compile(e,t);return function(e,t,n){var i=u(e,t,n),l=d(e,t,i),c=a(i,l),p=r(e,t,c),m=o(e,t,n);return s(i,l,s(c,p,m)),m}}if(!(0,i.FG)(this.object))throw TypeError("SymbolNode expected as object");return function(e,t,n){var r=o(e,t,n);return e.set(l,r),r}}forEach(e){e(this.object,"object",this),this.index&&e(this.index,"index",this),e(this.value,"value",this)}map(e){return new l(this._ifNode(e(this.object,"object",this)),this.index?this._ifNode(e(this.index,"index",this)):null,this._ifNode(e(this.value,"value",this)))}clone(){return new l(this.object,this.index,this.value)}_toString(e){var t=this.object.toString(e),n=this.index?this.index.toString(e):"",r=this.value.toString(e);return o(this,e&&e.parenthesis,e&&e.implicit)&&(r="("+r+")"),t+n+" = "+r}toJSON(){return{mathjs:ei,object:this.object,index:this.index,value:this.value}}static fromJSON(e){return new l(e.object,e.index,e.value)}_toHTML(e){var t=this.object.toHTML(e),n=this.index?this.index.toHTML(e):"",r=this.value.toHTML(e);return o(this,e&&e.parenthesis,e&&e.implicit)&&(r='<span class="math-paranthesis math-round-parenthesis">(</span>'+r+'<span class="math-paranthesis math-round-parenthesis">)</span>'),t+n+'<span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>'+r}_toTex(e){var t=this.object.toTex(e),n=this.index?this.index.toTex(e):"",r=this.value.toTex(e);return o(this,e&&e.parenthesis,e&&e.implicit)&&(r="\\left(".concat(r,"\\right)")),t+n+"="+r}constructor(e,t,n){if(super(),this.object=e,this.index=n?t:null,this.value=n||t,!(0,i.FG)(e)&&!(0,i.Yz)(e))throw TypeError('SymbolNode or AccessorNode expected as "object"');if((0,i.FG)(e)&&"end"===e.name)throw Error('Cannot assign to symbol "end"');if(this.index&&!(0,i.Cl)(this.index))throw TypeError('IndexNode expected as "index"');if(!(0,i.UG)(this.value))throw TypeError('Node expected as "value"')}}return(0,p.Z)(l,"name",ei),l},{isClass:!0,isNode:!0}),eo=(0,l.d5)("SymbolNode",["math","?Unit","Node"],e=>{var{math:t,Unit:n,Node:r}=e;function a(e){return!!n&&n.isValuelessUnit(e)}class i extends r{get type(){return"SymbolNode"}get isSymbolNode(){return!0}_compile(e,t){var r=this.name;if(!0===t[r])return function(e,t,n){return(0,m.YF)(t,r)};if(r in e)return function(t,n,a){return t.has(r)?t.get(r):(0,m.YF)(e,r)};var s=a(r);return function(e,t,a){return e.has(r)?e.get(r):s?new n(null,r):i.onUndefinedSymbol(r)}}forEach(e){}map(e){return this.clone()}static onUndefinedSymbol(e){throw Error("Undefined symbol "+e)}clone(){return new i(this.name)}_toString(e){return this.name}_toHTML(e){var t=(0,d.YU)(this.name);return"true"===t||"false"===t?'<span class="math-symbol math-boolean">'+t+"</span>":"i"===t?'<span class="math-symbol math-imaginary-symbol">'+t+"</span>":"Infinity"===t?'<span class="math-symbol math-infinity-symbol">'+t+"</span>":"NaN"===t?'<span class="math-symbol math-nan-symbol">'+t+"</span>":"null"===t?'<span class="math-symbol math-null-symbol">'+t+"</span>":"undefined"===t?'<span class="math-symbol math-undefined-symbol">'+t+"</span>":'<span class="math-symbol">'+t+"</span>"}toJSON(){return{mathjs:"SymbolNode",name:this.name}}static fromJSON(e){return new i(e.name)}_toTex(e){var n=!1;void 0===t[this.name]&&a(this.name)&&(n=!0);var r=E(this.name,n);return"\\"===r[0]?r:" "+r}constructor(e){if(super(),"string"!=typeof e)throw TypeError('String expected for parameter "name"');this.name=e}}return i},{isClass:!0,isNode:!0}),el="FunctionNode",ec=(0,l.d5)(el,["math","Node","SymbolNode"],e=>{var{math:t,Node:n,SymbolNode:r}=e,a=e=>(0,d.WU)(e,{truncate:78});function s(e,t,n){for(var r,a="",s=/\$(?:\{([a-z_][a-z_0-9]*)(?:\[([0-9]+)\])?\}|\$)/gi,o=0;null!==(r=s.exec(e));)if(a+=e.substring(o,r.index),o=r.index,"$$"===r[0])a+="$",o++;else{o+=r[0].length;var l=t[r[1]];if(!l)throw ReferenceError("Template: Property "+r[1]+" does not exist.");if(void 0===r[2])switch(typeof l){case"string":a+=l;break;case"object":if((0,i.UG)(l))a+=l.toTex(n);else if(Array.isArray(l))a+=l.map(function(e,t){if((0,i.UG)(e))return e.toTex(n);throw TypeError("Template: "+r[1]+"["+t+"] is not a Node.")}).join(",");else throw TypeError("Template: "+r[1]+" has to be a Node, String or array of Nodes");break;default:throw TypeError("Template: "+r[1]+" has to be a Node, String or array of Nodes")}else if((0,i.UG)(l[r[2]]&&l[r[2]]))a+=l[r[2]].toTex(n);else throw TypeError("Template: "+r[1]+"["+r[2]+"] is not a Node.")}return a+e.slice(o)}class l extends n{get name(){return this.fn.name||""}get type(){return el}get isFunctionNode(){return!0}_compile(e,t){var n=this.args.map(n=>n._compile(e,t));if((0,i.FG)(this.fn)){var r=this.fn.name;if(t[r]){var s=this.args;return function(t,i,o){var l=(0,m.YF)(i,r);if("function"!=typeof l)throw TypeError("Argument '".concat(r,"' was not a function; received: ").concat(a(l)));if(l.rawArgs)return l(s,e,x(t,i));var c=n.map(e=>e(t,i,o));return l.apply(l,c)}}var o=r in e?(0,m.YF)(e,r):void 0,c="function"==typeof o&&!0===o.rawArgs,u=t=>{var n;if(t.has(r))n=t.get(r);else{if(!(r in e))return l.onUndefinedFunction(r);n=(0,m.YF)(e,r)}if("function"==typeof n)return n;throw TypeError("'".concat(r,"' is not a function; its value is:\n  ").concat(a(n)))};if(c){var p=this.args;return function(t,n,r){return u(t)(p,e,x(t,n))}}switch(n.length){case 0:return function(e,t,n){return u(e)()};case 1:return function(e,t,r){return u(e)((0,n[0])(e,t,r))};case 2:return function(e,t,r){var a=u(e),i=n[0],s=n[1];return a(i(e,t,r),s(e,t,r))};default:return function(e,t,r){return u(e)(...n.map(n=>n(e,t,r)))}}}else if((0,i.Yz)(this.fn)&&(0,i.Cl)(this.fn.index)&&this.fn.index.isObjectProperty()){var d=this.fn.object._compile(e,t),h=this.fn.index.getObjectProperty(),f=this.args;return function(t,r,a){var i=d(t,r,a),s=(0,m.rG)(i,h);if(null!=s&&s.rawArgs)return s(f,e,x(t,r));var o=n.map(e=>e(t,r,a));return s.apply(i,o)}}else{var g=this.fn.toString(),y=this.fn._compile(e,t),v=this.args;return function(t,r,i){var s=y(t,r,i);if("function"!=typeof s)throw TypeError("Expression '".concat(g,"' did not evaluate to a function; value is:")+"\n  ".concat(a(s)));if(s.rawArgs)return s(v,e,x(t,r));var o=n.map(e=>e(t,r,i));return s.apply(s,o)}}}forEach(e){e(this.fn,"fn",this);for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)}map(e){for(var t=this._ifNode(e(this.fn,"fn",this)),n=[],r=0;r<this.args.length;r++)n[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new l(t,n)}clone(){return new l(this.fn,this.args.slice(0))}toString(e){var t,n=this.fn.toString(e);return(e&&"object"==typeof e.handler&&(0,o.nr)(e.handler,n)&&(t=e.handler[n](this,e)),void 0!==t)?t:super.toString(e)}_toString(e){var t=this.args.map(function(t){return t.toString(e)});return((0,i.l7)(this.fn)?"("+this.fn.toString(e)+")":this.fn.toString(e))+"("+t.join(", ")+")"}toJSON(){return{mathjs:el,fn:this.fn,args:this.args}}_toHTML(e){var t=this.args.map(function(t){return t.toHTML(e)});return'<span class="math-function">'+(0,d.YU)(this.fn)+'</span><span class="math-paranthesis math-round-parenthesis">(</span>'+t.join('<span class="math-separator">,</span>')+'<span class="math-paranthesis math-round-parenthesis">)</span>'}toTex(e){var t;return(e&&"object"==typeof e.handler&&(0,o.nr)(e.handler,this.name)&&(t=e.handler[this.name](this,e)),void 0!==t)?t:super.toTex(e)}_toTex(e){var n,r,a=this.args.map(function(t){return t.toTex(e)});switch(T[this.name]&&(n=T[this.name]),t[this.name]&&("function"==typeof t[this.name].toTex||"object"==typeof t[this.name].toTex||"string"==typeof t[this.name].toTex)&&(n=t[this.name].toTex),typeof n){case"function":r=n(this,e);break;case"string":r=s(n,this,e);break;case"object":switch(typeof n[a.length]){case"function":r=n[a.length](this,e);break;case"string":r=s(n[a.length],this,e)}}return void 0!==r?r:s("\\mathrm{${name}}\\left(${args}\\right)",this,e)}getIdentifier(){return this.type+":"+this.name}constructor(e,t){if(super(),"string"==typeof e&&(e=new r(e)),!(0,i.UG)(e))throw TypeError('Node expected as parameter "fn"');if(!Array.isArray(t)||!t.every(i.UG))throw TypeError('Array containing Nodes expected for parameter "args"');this.fn=e,this.args=t||[]}}return(0,p.Z)(l,"name",el),(0,p.Z)(l,"onUndefinedFunction",function(e){throw Error("Undefined function "+e)}),(0,p.Z)(l,"fromJSON",function(e){return new l(e.fn,e.args)}),l},{isClass:!0,isNode:!0}),eu=n(2248),ep="parse",em=(0,l.d5)(ep,["typed","numeric","config","AccessorNode","ArrayNode","AssignmentNode","BlockNode","ConditionalNode","ConstantNode","FunctionAssignmentNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","ParenthesisNode","RangeNode","RelationalNode","SymbolNode"],e=>{var{typed:t,numeric:n,config:a,AccessorNode:s,ArrayNode:l,AssignmentNode:c,BlockNode:u,ConditionalNode:p,ConstantNode:m,FunctionAssignmentNode:d,FunctionNode:h,IndexNode:f,ObjectNode:g,OperatorNode:x,ParenthesisNode:y,RangeNode:v,RelationalNode:b,SymbolNode:w}=e,N=t(ep,{string:function(e){return $(e,{})},"Array | Matrix":function(e){return k(e,{})},"string, Object":function(e,t){return $(e,void 0!==t.nodes?t.nodes:{})},"Array | Matrix, Object":k});function k(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=void 0!==t.nodes?t.nodes:{};return(0,eu.Fh)(e,function(e){if("string"!=typeof e)throw TypeError("String expected");return $(e,n)})}var C={NULL:0,DELIMITER:1,NUMBER:2,SYMBOL:3,UNKNOWN:4},S={",":!0,"(":!0,")":!0,"[":!0,"]":!0,"{":!0,"}":!0,'"':!0,"'":!0,";":!0,"+":!0,"-":!0,"*":!0,".*":!0,"/":!0,"./":!0,"%":!0,"^":!0,".^":!0,"~":!0,"!":!0,"&":!0,"|":!0,"^|":!0,"=":!0,":":!0,"?":!0,"==":!0,"!=":!0,"<":!0,">":!0,"<=":!0,">=":!0,"<<":!0,">>":!0,">>>":!0},T={mod:!0,to:!0,in:!0,and:!0,xor:!0,or:!0,not:!0},O={true:!0,false:!1,null:null,undefined},A=["NaN","Infinity"],E={'"':'"',"'":"'","\\":"\\","/":"/",b:"\b",f:"\f",n:"\n",r:"\r",t:"	"};function q(e,t){return e.expression.substr(e.index,t)}function M(e){return q(e,1)}function z(e){e.index++}function j(e){return e.expression.charAt(e.index-1)}function I(e){return e.expression.charAt(e.index+1)}function F(e){for(e.tokenType=C.NULL,e.token="",e.comment="";;){if("#"===M(e))for(;"\n"!==M(e)&&""!==M(e);)e.comment+=M(e),z(e);if(N.isWhitespace(M(e),e.nestingLevel))z(e);else break}if(""===M(e)){e.tokenType=C.DELIMITER;return}if("\n"===M(e)&&!e.nestingLevel){e.tokenType=C.DELIMITER,e.token=M(e),z(e);return}var t=M(e),n=q(e,2),r=q(e,3);if(3===r.length&&S[r]){e.tokenType=C.DELIMITER,e.token=r,z(e),z(e),z(e);return}if(2===n.length&&S[n]){e.tokenType=C.DELIMITER,e.token=n,z(e),z(e);return}if(S[t]){e.tokenType=C.DELIMITER,e.token=t,z(e);return}if(N.isDigitDot(t)){e.tokenType=C.NUMBER;var a=q(e,2);if("0b"===a||"0o"===a||"0x"===a){for(e.token+=M(e),z(e),e.token+=M(e),z(e);N.isHexDigit(M(e));)e.token+=M(e),z(e);if("."===M(e))for(e.token+=".",z(e);N.isHexDigit(M(e));)e.token+=M(e),z(e);else if("i"===M(e))for(e.token+="i",z(e);N.isDigit(M(e));)e.token+=M(e),z(e);return}if("."===M(e)){if(e.token+=M(e),z(e),!N.isDigit(M(e))){e.tokenType=C.DELIMITER;return}}else{for(;N.isDigit(M(e));)e.token+=M(e),z(e);N.isDecimalMark(M(e),I(e))&&(e.token+=M(e),z(e))}for(;N.isDigit(M(e));)e.token+=M(e),z(e);if("E"===M(e)||"e"===M(e)){if(N.isDigit(I(e))||"-"===I(e)||"+"===I(e)){if(e.token+=M(e),z(e),("+"===M(e)||"-"===M(e))&&(e.token+=M(e),z(e)),!N.isDigit(M(e)))throw es(e,'Digit expected, got "'+M(e)+'"');for(;N.isDigit(M(e));)e.token+=M(e),z(e);if(N.isDecimalMark(M(e),I(e)))throw es(e,'Digit expected, got "'+M(e)+'"')}else if("."===I(e))throw z(e),es(e,'Digit expected, got "'+M(e)+'"')}return}if(N.isAlpha(M(e),j(e),I(e))){for(;N.isAlpha(M(e),j(e),I(e))||N.isDigit(M(e));)e.token+=M(e),z(e);(0,o.nr)(T,e.token)?e.tokenType=C.DELIMITER:e.tokenType=C.SYMBOL;return}for(e.tokenType=C.UNKNOWN;""!==M(e);)e.token+=M(e),z(e);throw es(e,'Syntax error in part "'+e.token+'"')}function P(e){do F(e);while("\n"===e.token)}function R(e){e.nestingLevel++}function D(e){e.nestingLevel--}function $(e,t){var n={extraNodes:{},expression:"",comment:"",index:0,token:"",tokenType:C.NULL,nestingLevel:0,conditionalLevel:null};(0,r.Z)(n,{expression:e,extraNodes:t}),F(n);var a=function(e){var t,n,r=[];for(""!==e.token&&"\n"!==e.token&&";"!==e.token&&(t=L(e),e.comment&&(t.comment=e.comment));"\n"===e.token||";"===e.token;)0===r.length&&t&&(n=";"!==e.token,r.push({node:t,visible:n})),F(e),"\n"!==e.token&&";"!==e.token&&""!==e.token&&(t=L(e),e.comment&&(t.comment=e.comment),n=";"!==e.token,r.push({node:t,visible:n}));return r.length>0?new u(r):(!t&&(t=new m(void 0),e.comment&&(t.comment=e.comment)),t)}(n);if(""!==n.token){if(n.tokenType===C.DELIMITER)throw eo(n,"Unexpected operator "+n.token);throw es(n,'Unexpected part "'+n.token+'"')}return a}function L(e){var t,n,r,a,s=function(e){for(var t=function(e){for(var t=U(e);"or"===e.token;)P(e),t=new x("or","or",[t,U(e)]);return t}(e);"?"===e.token;){var n=e.conditionalLevel;e.conditionalLevel=e.nestingLevel,P(e);var r=t,a=L(e);if(":"!==e.token)throw es(e,"False part of conditional expression expected");e.conditionalLevel=null,P(e),t=new p(r,a,L(e)),e.conditionalLevel=n}return t}(e);if("="===e.token){if((0,i.FG)(s))return t=s.name,P(e),r=L(e),new c(new w(t),r);if((0,i.Yz)(s))return P(e),r=L(e),new c(s.object,s.index,r);if((0,i.VO)(s)&&(0,i.FG)(s.fn)&&(a=!0,n=[],t=s.name,s.args.forEach(function(e,t){(0,i.FG)(e)?n[t]=e.name:a=!1}),a))return P(e),new d(t,n,r=L(e));throw es(e,"Invalid left hand side of assignment operator =")}return s}function U(e){for(var t=_(e);"xor"===e.token;)P(e),t=new x("xor","xor",[t,_(e)]);return t}function _(e){for(var t=G(e);"and"===e.token;)P(e),t=new x("and","and",[t,G(e)]);return t}function G(e){for(var t=B(e);"|"===e.token;)P(e),t=new x("|","bitOr",[t,B(e)]);return t}function B(e){for(var t=H(e);"^|"===e.token;)P(e),t=new x("^|","bitXor",[t,H(e)]);return t}function H(e){for(var t=W(e);"&"===e.token;)P(e),t=new x("&","bitAnd",[t,W(e)]);return t}function W(e){for(var t=[J(e)],n=[],r={"==":"equal","!=":"unequal","<":"smaller",">":"larger","<=":"smallerEq",">=":"largerEq"};(0,o.nr)(r,e.token);){var a={name:e.token,fn:r[e.token]};n.push(a),P(e),t.push(J(e))}return 1===t.length?t[0]:2===t.length?new x(n[0].name,n[0].fn,t):new b(n.map(e=>e.fn),t)}function J(e){t=Z(e);for(var t,n,r,a={"<<":"leftShift",">>":"rightArithShift",">>>":"rightLogShift"};(0,o.nr)(a,e.token);)r=a[n=e.token],P(e),t=new x(n,r,[t,Z(e)]);return t}function Z(e){t=V(e);for(var t,n,r,a={to:"to",in:"to"};(0,o.nr)(a,e.token);)r=a[n=e.token],P(e),t="in"===n&&""===e.token?new x("*","multiply",[t,new w("in")],!0):new x(n,r,[t,V(e)]);return t}function V(e){var t,n=[];if(t=":"===e.token?new m(1):Q(e),":"===e.token&&e.conditionalLevel!==e.nestingLevel){for(n.push(t);":"===e.token&&n.length<3;)P(e),")"===e.token||"]"===e.token||","===e.token||""===e.token?n.push(new w("end")):n.push(Q(e));t=3===n.length?new v(n[0],n[2],n[1]):new v(n[0],n[1])}return t}function Q(e){t=X(e);for(var t,n,r,a,i={"+":"add","-":"subtract"};(0,o.nr)(i,e.token);){r=i[n=e.token],P(e);var s=X(e);a=s.isPercentage?[t,new x("*","multiply",[t,s])]:[t,s],t=new x(n,r,a)}return t}function X(e){t=Y(e);for(var t,n,r,a={"*":"multiply",".*":"dotMultiply","/":"divide","./":"dotDivide"};;)if((0,o.nr)(a,e.token))r=a[n=e.token],P(e),t=new x(n,r,[t,Y(e)]);else break;return t}function Y(e){var t,n;for(n=t=K(e);;)if(e.tokenType===C.SYMBOL||"in"===e.token&&(0,i.nu)(t)||e.tokenType===C.NUMBER&&!(0,i.nu)(n)&&(!(0,i.bV)(n)||"!"===n.op)||"("===e.token)t=new x("*","multiply",[t,n=K(e)],!0);else break;return t}function K(e){for(var t=ee(e),n=t,a=[];;)if("/"===e.token&&(0,i.ZX)(n)){if(a.push((0,r.Z)({},e)),P(e),e.tokenType===C.NUMBER){if(a.push((0,r.Z)({},e)),P(e),e.tokenType===C.SYMBOL||"("===e.token)(0,r.Z)(e,a.pop()),a.pop(),t=new x("/","divide",[t,n=ee(e)]);else{a.pop(),(0,r.Z)(e,a.pop());break}}else{(0,r.Z)(e,a.pop());break}}else break;return t}function ee(e){t=et(e);for(var t,n,r,a={"%":"mod",mod:"mod"};(0,o.nr)(a,e.token);)r=a[n=e.token],P(e),t="%"===n&&e.tokenType===C.DELIMITER&&"("!==e.token?new x("/","divide",[t,new m(100)],!1,!0):new x(n,r,[t,et(e)]);return t}function et(e){var t,r,i,s,c={"-":"unaryMinus","+":"unaryPlus","~":"bitNot",not:"not"};return(0,o.nr)(c,e.token)?(s=c[e.token],i=e.token,P(e),new x(i,s,[et(e)])):(t=function(e){t=function(e){var t,r,i=[];if(e.tokenType===C.SYMBOL&&(0,o.nr)(e.extraNodes,e.token)){var s=e.extraNodes[e.token];if(F(e),"("===e.token){if(i=[],R(e),F(e),")"!==e.token)for(i.push(L(e));","===e.token;)F(e),i.push(L(e));if(")"!==e.token)throw es(e,"Parenthesis ) expected");D(e),F(e)}return new s(i)}return e.tokenType===C.SYMBOL||e.tokenType===C.DELIMITER&&e.token in T?(t=e.token,F(e),en(e,(0,o.nr)(O,t)?new m(O[t]):-1!==A.indexOf(t)?new m(n(t,"number")):new w(t))):'"'===e.token||"'"===e.token?(r=new m(er(e,e.token)),r=en(e,r)):function(e){var t,r,i,s;if("["===e.token){if(R(e),F(e),"]"!==e.token){var o=ea(e);if(";"===e.token){for(i=1,r=[o];";"===e.token;)F(e),r[i]=ea(e),i++;if("]"!==e.token)throw es(e,"End of matrix ] expected");D(e),F(e),s=r[0].items.length;for(var c=1;c<i;c++)if(r[c].items.length!==s)throw eo(e,"Column dimensions mismatch ("+r[c].items.length+" !== "+s+")");t=new l(r)}else{if("]"!==e.token)throw es(e,"End of matrix ] expected");D(e),F(e),t=o}}else D(e),F(e),t=new l([]);return en(e,t)}return function(e){if("{"===e.token){R(e);var t,r,i={};do if(F(e),"}"!==e.token){if('"'===e.token||"'"===e.token)r=er(e,e.token);else if(e.tokenType===C.SYMBOL||e.tokenType===C.DELIMITER&&e.token in T)r=e.token,F(e);else throw es(e,"Symbol or string expected as object key");if(":"!==e.token)throw es(e,"Colon : expected after object key");F(e),i[r]=L(e)}while(","===e.token);if("}"!==e.token)throw es(e,"Comma , or bracket } expected after object value");return D(e),F(e),en(e,new g(i))}return e.tokenType===C.NUMBER?(t=e.token,F(e),new m(n(t,a.number))):function(e){var t;if("("===e.token){if(R(e),F(e),t=L(e),")"!==e.token)throw es(e,"Parenthesis ) expected");return D(e),F(e),t=en(e,t=new y(t))}return function(e){if(""===e.token)throw es(e,"Unexpected end of expression");throw es(e,"Value expected")}(e)}(e)}(e)}(e)}(e);for(var t,r,i,s={"!":"factorial","'":"ctranspose"};(0,o.nr)(s,e.token);)i=s[r=e.token],F(e),t=en(e,t=new x(r,i,[t]));return t}(e),("^"===e.token||".^"===e.token)&&(r=e.token,P(e),t=new x(r,"^"===r?"pow":"dotPow",[t,et(e)])),t)}function en(e,t,n){for(var r;("("===e.token||"["===e.token||"."===e.token)&&(!n||-1!==n.indexOf(e.token));)if(r=[],"("===e.token){if((0,i.FG)(t)||(0,i.Yz)(t)){if(R(e),F(e),")"!==e.token)for(r.push(L(e));","===e.token;)F(e),r.push(L(e));if(")"!==e.token)throw es(e,"Parenthesis ) expected");D(e),F(e),t=new h(t,r)}else break}else if("["===e.token){if(R(e),F(e),"]"!==e.token)for(r.push(L(e));","===e.token;)F(e),r.push(L(e));if("]"!==e.token)throw es(e,"Parenthesis ] expected");D(e),F(e),t=new s(t,new f(r))}else{if(F(e),!(e.tokenType===C.SYMBOL||e.tokenType===C.DELIMITER&&e.token in T))throw es(e,"Property name expected after dot");r.push(new m(e.token)),F(e),t=new s(t,new f(r,!0))}return t}function er(e,t){for(var n="";""!==M(e)&&M(e)!==t;)if("\\"===M(e)){z(e);var r=M(e),a=E[r];if(void 0!==a)n+=a,e.index+=1;else if("u"===r){var i=e.expression.slice(e.index+1,e.index+5);if(/^[0-9A-Fa-f]{4}$/.test(i))n+=String.fromCharCode(parseInt(i,16)),e.index+=5;else throw es(e,"Invalid unicode character \\u".concat(i))}else throw es(e,"Bad escape character \\".concat(r))}else n+=M(e),z(e);if(F(e),e.token!==t)throw es(e,"End of string ".concat(t," expected"));return F(e),n}function ea(e){for(var t=[L(e)],n=1;","===e.token;)F(e),t[n]=L(e),n++;return new l(t)}function ei(e){return e.index-e.token.length+1}function es(e,t){var n=ei(e),r=SyntaxError(t+" (char "+n+")");return r.char=n,r}function eo(e,t){var n=ei(e),r=SyntaxError(t+" (char "+n+")");return r.char=n,r}return N.isAlpha=function(e,t,n){return N.isValidLatinOrGreek(e)||N.isValidMathSymbol(e,n)||N.isValidMathSymbol(t,e)},N.isValidLatinOrGreek=function(e){return/^[a-zA-Z_$\u00C0-\u02AF\u0370-\u03FF\u2100-\u214F]$/.test(e)},N.isValidMathSymbol=function(e,t){return/^[\uD835]$/.test(e)&&/^[\uDC00-\uDFFF]$/.test(t)&&/^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(t)},N.isWhitespace=function(e,t){return" "===e||"	"===e||"\n"===e&&t>0},N.isDecimalMark=function(e,t){return"."===e&&"/"!==t&&"*"!==t&&"^"!==t},N.isDigitDot=function(e){return e>="0"&&e<="9"||"."===e},N.isDigit=function(e){return e>="0"&&e<="9"},N.isHexDigit=function(e){return e>="0"&&e<="9"||e>="a"&&e<="f"||e>="A"&&e<="F"},t.addConversion({from:"string",to:"Node",convert:N}),N}),ed=(0,l.d5)("resolve",["typed","parse","ConstantNode","FunctionNode","OperatorNode","ParenthesisNode"],e=>{var{typed:t,parse:n,ConstantNode:r,FunctionNode:a,OperatorNode:s,ParenthesisNode:o}=e;function l(e,t){var c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;if(!t)return e;if((0,i.FG)(e)){if(c.has(e.name)){var u=Array.from(c).join(", ");throw ReferenceError("recursive loop of variable definitions among {".concat(u,"}"))}var p=t.get(e.name);if((0,i.UG)(p)){var m=new Set(c);return m.add(e.name),l(p,t,m)}return"number"==typeof p?n(String(p)):void 0!==p?new r(p):e}if((0,i.bV)(e)){var d=e.args.map(function(e){return l(e,t,c)});return new s(e.op,e.fn,d,e.implicit)}if((0,i.Ig)(e))return new o(l(e.content,t,c));if((0,i.VO)(e)){var h=e.args.map(function(e){return l(e,t,c)});return new a(e.name,h)}return e.map(e=>l(e,t,c))}return t("resolve",{Node:l,"Node, Map | null | undefined":l,"Node, Object":(e,t)=>l(e,(0,c.df)(t)),"Array | Matrix":t.referToSelf(e=>t=>t.map(t=>e(t))),"Array | Matrix, null | undefined":t.referToSelf(e=>t=>t.map(t=>e(t))),"Array, Object":t.referTo("Array,Map",e=>(t,n)=>e(t,(0,c.df)(n))),"Matrix, Object":t.referTo("Matrix,Map",e=>(t,n)=>e(t,(0,c.df)(n))),"Array | Matrix, Map":t.referToSelf(e=>(t,n)=>t.map(t=>e(t,n)))})});function eh(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function ef(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?eh(Object(n),!0).forEach(function(t){(0,p.Z)(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):eh(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}var eg=(0,l.d5)("simplifyUtil",["FunctionNode","OperatorNode","SymbolNode"],e=>{var{FunctionNode:t,OperatorNode:n,SymbolNode:r}=e,a="defaultF",s={add:{trivial:!0,total:!0,commutative:!0,associative:!0},unaryPlus:{trivial:!0,total:!0,commutative:!0,associative:!0},subtract:{trivial:!1,total:!0,commutative:!1,associative:!1},multiply:{trivial:!0,total:!0,commutative:!0,associative:!0},divide:{trivial:!1,total:!0,commutative:!1,associative:!1},paren:{trivial:!0,total:!0,commutative:!0,associative:!1},defaultF:{trivial:!1,total:!0,commutative:!1,associative:!1}};function l(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:s,r=a;if("string"==typeof e?r=e:(0,i.bV)(e)?r=e.fn.toString():(0,i.VO)(e)?r=e.name:(0,i.Ig)(e)&&(r="paren"),(0,o.nr)(n,r)){var l=n[r];if((0,o.nr)(l,t))return l[t];if((0,o.nr)(s,r))return s[r][t]}if((0,o.nr)(n,a)){var c=n[a];return(0,o.nr)(c,t)?c[t]:s[a][t]}if((0,o.nr)(s,r)){var u=s[r];if((0,o.nr)(u,t))return u[t]}return s[a][t]}function c(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s;return l(e,"associative",t)}function u(e,t){var n,r=[];return c(e,t)?(n=e.op,!function e(t){for(var a=0;a<t.args.length;a++){var s=t.args[a];(0,i.bV)(s)&&n===s.op?e(s):r.push(s)}}(e),r):e.args}function p(e){return(0,i.bV)(e)?function(t){try{return new n(e.op,e.fn,t,e.implicit)}catch(e){return console.error(e),[]}}:function(n){return new t(new r(e.name),n)}}return{createMakeNodeFunction:p,hasProperty:l,isCommutative:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s;return l(e,"commutative",t)},isAssociative:c,mergeContext:function(e,t){var n=ef({},e);for(var r in t)(0,o.nr)(e,r)?n[r]=ef(ef({},t[r]),e[r]):n[r]=t[r];return n},flatten:function e(t,n){if(!t.args||0===t.args.length)return t;t.args=u(t,n);for(var r=0;r<t.args.length;r++)e(t.args[r],n)},allChildren:u,unflattenr:function e(t,n){if(t.args&&0!==t.args.length){for(var r=p(t),a=t.args.length,i=0;i<a;i++)e(t.args[i],n);if(a>2&&c(t,n)){for(var s=t.args.pop();t.args.length>0;)s=r([t.args.pop(),s]);t.args=s.args}}},unflattenl:function e(t,n){if(t.args&&0!==t.args.length){for(var r=p(t),a=t.args.length,i=0;i<a;i++)e(t.args[i],n);if(a>2&&c(t,n)){for(var s=t.args.shift();t.args.length>0;)s=r([s,t.args.shift()]);t.args=s.args}}},defaultContext:s,realContext:{divide:{total:!1},log:{total:!1}},positiveContext:{subtract:{total:!1},abs:{trivial:!0},log:{total:!0}}}}),ex=n(4986),ey=(0,l.d5)("simplifyConstant",["typed","config","mathWithTransform","matrix","?fraction","?bignumber","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","SymbolNode"],e=>{var{typed:t,config:n,mathWithTransform:r,matrix:a,fraction:s,bignumber:o,AccessorNode:l,ArrayNode:c,ConstantNode:u,FunctionNode:p,IndexNode:m,ObjectNode:d,OperatorNode:h,SymbolNode:f}=e,{isCommutative:g,isAssociative:x,allChildren:y,createMakeNodeFunction:v}=eg({FunctionNode:p,OperatorNode:h,SymbolNode:f}),b=t("simplifyConstant",{Node:e=>k(A(e,{})),"Node, Object":function(e,t){return k(A(e,t))}});function w(e,t,n){try{return r[e].apply(null,t)}catch(s){return t=t.map(function e(t){return(0,i.yQ)(t)?t.valueOf():t instanceof Array?t.map(e):(0,i.SW)(t)?a(e(t.valueOf())):t}),S(r[e].apply(null,t),n)}}var N=t({Fraction:function(e){var t,n=e.s*e.n;return(t=n<0?new h("-","unaryMinus",[new u(-n)]):new u(n),1===e.d)?t:new h("/","divide",[t,new u(e.d)])},number:function(e){return e<0?T(new u(-e)):new u(e)},BigNumber:function(e){return e<0?T(new u(-e)):new u(e)},Complex:function(e){throw Error("Cannot convert Complex number to Node")},string:function(e){return new u(e)},Matrix:function(e){return new c(e.valueOf().map(e=>N(e)))}});function k(e){return(0,i.UG)(e)?e:N(e)}function C(e,t){if(t&&!1!==t.exactFractions&&isFinite(e)&&s){var n=s(e),r=t&&"number"==typeof t.fractionsLimit?t.fractionsLimit:1/0;if(n.valueOf()===e&&n.n<r&&n.d<r)return n}return e}var S=t({"string, Object":function(e,t){return"BigNumber"===n.number?(void 0===o&&(0,ex.R3)(),o(e)):"Fraction"===n.number?(void 0===s&&(0,ex.nG)(),s(e)):C(parseFloat(e),t)},"Fraction, Object":function(e,t){return e},"BigNumber, Object":function(e,t){return e},"number, Object":function(e,t){return C(e,t)},"Complex, Object":function(e,t){return 0!==e.im?e:C(e.re,t)},"Matrix, Object":function(e,t){return a(C(e.valueOf()))},"Array, Object":function(e,t){return e.map(C)}});function T(e){return new h("-","unaryMinus",[e])}function O(e,t,n,r){var a=t.shift(),s=t.reduce((t,a)=>{if(!(0,i.UG)(a)){var s=t.pop();if((0,i.UG)(s))return[s,a];try{return t.push(w(e,[s,a],r)),t}catch(e){t.push(s)}}t.push(k(t.pop()));var o=1===t.length?t[0]:n(t);return[n([o,k(a)])]},[a]);return 1===s.length?s[0]:n([s[0],N(s[1])])}function A(e,t){switch(e.type){case"SymbolNode":return e;case"ConstantNode":switch(typeof e.value){case"number":return S(e.value,t);case"string":return e.value;default:if(!isNaN(e.value))return S(e.value,t)}return e;case"FunctionNode":if(r[e.name]&&r[e.name].rawArgs)return e;if(-1===["add","multiply"].indexOf(e.name)){var n=e.args.map(e=>A(e,t));if(!n.some(i.UG))try{return w(e.name,n,t)}catch(e){}if("size"===e.name&&1===n.length&&(0,i.j0)(n[0])){for(var s=[],o=n[0];(0,i.j0)(o);)s.push(o.items.length),o=o.items[0];return a(s)}return new p(e.name,n.map(k))}case"OperatorNode":var h,f,N=e.fn.toString(),C=v(e);if((0,i.bV)(e)&&e.isUnary())h=[A(e.args[0],t)],f=(0,i.UG)(h[0])?C(h):w(N,h,t);else if(x(e,t.context)){if(h=(h=y(e,t.context)).map(e=>A(e,t)),g(N,t.context)){for(var T=[],E=[],q=0;q<h.length;q++)(0,i.UG)(h[q])?E.push(h[q]):T.push(h[q]);T.length>1?(f=O(N,T,C,t),E.unshift(f),f=O(N,E,C,t)):f=O(N,h,C,t)}else f=O(N,h,C,t)}else f=O(N,h=e.args.map(e=>A(e,t)),C,t);return f;case"ParenthesisNode":return A(e.content,t);case"AccessorNode":return function(e,t,n){if(!(0,i.Cl)(t))return new l(k(e),k(t));if((0,i.j0)(e)||(0,i.SW)(e)){for(var r=Array.from(t.dimensions);r.length>0;)if((0,i.nu)(r[0])&&"string"!=typeof r[0].value){var s=S(r.shift().value,n);(0,i.j0)(e)?e=e.items[s-1]:(e=e.valueOf()[s-1])instanceof Array&&(e=a(e))}else if(r.length>1&&(0,i.nu)(r[1])&&"string"!=typeof r[1].value){var o=S(r[1].value,n),p=[],d=(0,i.j0)(e)?e.items:e.valueOf();for(var h of d)if((0,i.j0)(h))p.push(h.items[o-1]);else if((0,i.SW)(e))p.push(h[o-1]);else break;if(p.length===d.length)e=(0,i.j0)(e)?new c(p):a(p),r.splice(1,1);else break}else break;return r.length===t.dimensions.length?new l(k(e),t):r.length>0?(t=new m(r),new l(k(e),t)):e}if((0,i.Lr)(e)&&1===t.dimensions.length&&(0,i.nu)(t.dimensions[0])){var f=t.dimensions[0].value;return f in e.properties?e.properties[f]:new u}return new l(k(e),t)}(A(e.object,t),A(e.index,t),t);case"ArrayNode":var M=e.items.map(e=>A(e,t));if(M.some(i.UG))return new c(M.map(k));return a(M);case"IndexNode":return new m(e.dimensions.map(e=>b(e,t)));case"ObjectNode":var z={};for(var j in e.properties)z[j]=b(e.properties[j],t);return new d(z);default:throw Error("Unimplemented node type in simplifyConstant: ".concat(e.type))}}return b}),ev="compile",eb=(0,l.d5)(ev,["typed","parse"],e=>{var{typed:t,parse:n}=e;return t(ev,{string:function(e){return n(e).compile()},"Array | Matrix":function(e){return(0,eu.Fh)(e,function(e){return n(e).compile()})}})}),ew="simplifyCore",eN=(0,l.d5)(ew,["typed","parse","equal","isZero","add","subtract","multiply","divide","pow","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","ParenthesisNode","SymbolNode"],e=>{var{typed:t,parse:n,equal:r,isZero:a,add:s,subtract:o,multiply:l,divide:c,pow:u,AccessorNode:p,ArrayNode:m,ConstantNode:d,FunctionNode:h,IndexNode:f,ObjectNode:g,OperatorNode:x,ParenthesisNode:v,SymbolNode:b}=e,w=new d(0),N=new d(1),k=new d(!0),C=new d(!1);function S(e){return(0,i.bV)(e)&&["and","not","or"].includes(e.op)}var{hasProperty:T,isCommutative:O}=eg({FunctionNode:h,OperatorNode:x,SymbolNode:b});function A(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t?t.context:void 0;if(T(e,"trivial",n)){if((0,i.VO)(e)&&1===e.args.length)return A(e.args[0],t);var s=!1,o=0;if(e.forEach(e=>{1==++o&&(s=A(e,t))}),1===o)return s}var l=e;if((0,i.VO)(l)){var c=function(e){var t="OperatorNode:"+e;for(var n of y)if(t in n)return n[t].op;return null}(l.name);if(!c)return new h(A(l.fn),l.args.map(e=>A(e,t)));if(l.args.length>2&&T(l,"associative",n))for(;l.args.length>2;){var u=l.args.pop(),d=l.args.pop();l.args.push(new x(c,l.name,[u,d]))}l=new x(c,l.name,l.args)}if((0,i.bV)(l)&&l.isUnary()){var v=A(l.args[0],t);if("~"===l.op&&(0,i.bV)(v)&&v.isUnary()&&"~"===v.op||"not"===l.op&&(0,i.bV)(v)&&v.isUnary()&&"not"===v.op&&S(v.args[0]))return v.args[0];var b=!0;if("-"===l.op&&(0,i.bV)(v)&&(v.isBinary()&&"subtract"===v.fn&&(l=new x("-","subtract",[v.args[1],v.args[0]]),b=!1),v.isUnary()&&"-"===v.op))return v.args[0];if(b)return new x(l.op,l.fn,[v])}if((0,i.bV)(l)&&l.isBinary()){var E=A(l.args[0],t),q=A(l.args[1],t);if("+"===l.op){if((0,i.nu)(E)&&a(E.value))return q;if((0,i.nu)(q)&&a(q.value))return E;(0,i.bV)(q)&&q.isUnary()&&"-"===q.op&&(l=new x("-","subtract",[E,q=q.args[0]]))}if("-"===l.op)return(0,i.bV)(q)&&q.isUnary()&&"-"===q.op?A(new x("+","add",[E,q.args[0]]),t):(0,i.nu)(E)&&a(E.value)?A(new x("-","unaryMinus",[q])):(0,i.nu)(q)&&a(q.value)?E:new x(l.op,l.fn,[E,q]);if("*"===l.op){if((0,i.nu)(E)){if(a(E.value))return w;if(r(E.value,1))return q}if((0,i.nu)(q)){if(a(q.value))return w;if(r(q.value,1))return E;if(O(l,n))return new x(l.op,l.fn,[q,E],l.implicit)}return new x(l.op,l.fn,[E,q],l.implicit)}if("/"===l.op)return(0,i.nu)(E)&&a(E.value)?w:(0,i.nu)(q)&&r(q.value,1)?E:new x(l.op,l.fn,[E,q]);if("^"===l.op&&(0,i.nu)(q)){if(a(q.value))return N;if(r(q.value,1))return E}if("and"===l.op){if((0,i.nu)(E)){if(!E.value)return C;if(S(q))return q}if((0,i.nu)(q)){if(!q.value)return C;if(S(E))return E}}if("or"===l.op){if((0,i.nu)(E)){if(E.value)return k;if(S(q))return q}if((0,i.nu)(q)){if(q.value)return k;if(S(E))return E}}return new x(l.op,l.fn,[E,q])}if((0,i.bV)(l))return new x(l.op,l.fn,l.args.map(e=>A(e,t)));if((0,i.j0)(l))return new m(l.items.map(e=>A(e,t)));if((0,i.Yz)(l))return new p(A(l.object,t),A(l.index,t));if((0,i.Cl)(l))return new f(l.dimensions.map(e=>A(e,t)));if((0,i.Lr)(l)){var M={};for(var z in l.properties)M[z]=A(l.properties[z],t);return new g(M)}return l}return t(ew,{Node:A,"Node,Object":A})}),ek="evaluate",eC=(0,l.d5)(ek,["typed","parse"],e=>{var{typed:t,parse:n}=e;return t(ek,{string:function(e){var t=(0,c.dg)();return n(e).compile().evaluate(t)},"string, Map | Object":function(e,t){return n(e).compile().evaluate(t)},"Array | Matrix":function(e){var t=(0,c.dg)();return(0,eu.Fh)(e,function(e){return n(e).compile().evaluate(t)})},"Array | Matrix, Map | Object":function(e,t){return(0,eu.Fh)(e,function(e){return n(e).compile().evaluate(t)})}})}),eS=(0,l.d5)("Help",["evaluate"],e=>{var{evaluate:t}=e;function n(e){if(!(this instanceof n))throw SyntaxError("Constructor must be called with the new operator");if(!e)throw Error('Argument "doc" missing');this.doc=e}return n.prototype.type="Help",n.prototype.isHelp=!0,n.prototype.toString=function(){var e=this.doc||{},n="\n";if(e.name&&(n+="Name: "+e.name+"\n\n"),e.category&&(n+="Category: "+e.category+"\n\n"),e.description&&(n+="Description:\n    "+e.description+"\n\n"),e.syntax&&(n+="Syntax:\n    "+e.syntax.join("\n    ")+"\n\n"),e.examples){n+="Examples:\n";for(var r=!1,a=t("config()"),s={config:e=>(r=!0,t("config(newConfig)",{newConfig:e}))},o=0;o<e.examples.length;o++){var l=e.examples[o];n+="    "+l+"\n";var c=void 0;try{c=t(l,s)}catch(e){c=e}void 0===c||(0,i.x1)(c)||(n+="        "+(0,d.WU)(c,{precision:14})+"\n")}n+="\n",r&&t("config(originalConfig)",{originalConfig:a})}return e.mayThrow&&e.mayThrow.length&&(n+="Throws: "+e.mayThrow.join(", ")+"\n\n"),e.seealso&&e.seealso.length&&(n+="See also: "+e.seealso.join(", ")+"\n"),n},n.prototype.toJSON=function(){var e=(0,o.d9)(this.doc);return e.mathjs="Help",e},n.fromJSON=function(e){var t={};return Object.keys(e).filter(e=>"mathjs"!==e).forEach(n=>{t[n]=e[n]}),new n(t)},n.prototype.valueOf=n.prototype.toString,n},{isClass:!0}),eT=(0,l.d5)("Parser",["evaluate"],e=>{var{evaluate:t}=e;function n(){if(!(this instanceof n))throw SyntaxError("Constructor must be called with the new operator");Object.defineProperty(this,"scope",{value:(0,c.dg)(),writable:!1})}return n.prototype.type="Parser",n.prototype.isParser=!0,n.prototype.evaluate=function(e){return t(e,this.scope)},n.prototype.get=function(e){if(this.scope.has(e))return this.scope.get(e)},n.prototype.getAll=function(){return(0,c.ru)(this.scope)},n.prototype.getAllAsMap=function(){return this.scope},n.prototype.set=function(e,t){return this.scope.set(e,t),t},n.prototype.remove=function(e){this.scope.delete(e)},n.prototype.clear=function(){this.scope.clear()},n},{isClass:!0});function eO(e){return(0,i.nu)(e)||(0,i.bV)(e)&&e.isUnary()&&(0,i.nu)(e.args[0])}function eA(e){return!!((0,i.nu)(e)||((0,i.VO)(e)||(0,i.bV)(e))&&e.args.every(eA)||(0,i.Ig)(e)&&eA(e.content))}var eE=(0,l.d5)("simplify",["config","typed","parse","add","subtract","multiply","divide","pow","isZero","equal","resolve","simplifyConstant","simplifyCore","?fraction","?bignumber","mathWithTransform","matrix","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","ParenthesisNode","SymbolNode"],e=>{var{config:t,typed:n,parse:r,add:a,subtract:s,multiply:l,divide:u,pow:p,isZero:m,equal:d,resolve:h,simplifyConstant:f,simplifyCore:g,fraction:x,bignumber:y,mathWithTransform:v,matrix:b,AccessorNode:w,ArrayNode:N,ConstantNode:k,FunctionNode:C,IndexNode:S,ObjectNode:T,OperatorNode:O,ParenthesisNode:A,SymbolNode:E}=e,{hasProperty:q,isCommutative:M,isAssociative:z,mergeContext:j,flatten:I,unflattenr:F,unflattenl:P,createMakeNodeFunction:R,defaultContext:D,realContext:$,positiveContext:L}=eg({FunctionNode:C,OperatorNode:O,SymbolNode:E});n.addConversion({from:"Object",to:"Map",convert:c.df});var U=n("simplify",{Node:W,"Node, Map":(e,t)=>W(e,!1,t),"Node, Map, Object":(e,t,n)=>W(e,!1,t,n),"Node, Array":W,"Node, Array, Map":W,"Node, Array, Map, Object":W});function _(e){return e.transform(function(e,t,n){return(0,i.Ig)(e)?_(e.content):e})}n.removeConversion({from:"Object",to:"Map",convert:c.df}),U.defaultContext=D,U.realContext=$,U.positiveContext=L;var G={true:!0,false:!0,e:!0,i:!0,Infinity:!0,LN2:!0,LN10:!0,LOG2E:!0,LOG10E:!0,NaN:!0,phi:!0,pi:!0,SQRT1_2:!0,SQRT2:!0,tau:!0};U.rules=[g,{l:"log(e)",r:"1"},{s:"n-n1 -> n+-n1",assuming:{subtract:{total:!0}}},{s:"n-n -> 0",assuming:{subtract:{total:!1}}},{s:"-(cl*v) -> v * (-cl)",assuming:{multiply:{commutative:!0},subtract:{total:!0}}},{s:"-(cl*v) -> (-cl) * v",assuming:{multiply:{commutative:!1},subtract:{total:!0}}},{s:"-(v*cl) -> v * (-cl)",assuming:{multiply:{commutative:!1},subtract:{total:!0}}},{l:"-(n1/n2)",r:"-n1/n2"},{l:"-v",r:"v * (-1)"},{l:"(n1 + n2)*(-1)",r:"n1*(-1) + n2*(-1)",repeat:!0},{l:"n/n1^n2",r:"n*n1^-n2"},{l:"n/n1",r:"n*n1^-1"},{s:"(n1*n2)^n3 -> n1^n3 * n2^n3",assuming:{multiply:{commutative:!0}}},{s:"(n1*n2)^(-1) -> n2^(-1) * n1^(-1)",assuming:{multiply:{commutative:!1}}},{s:"(n ^ n1) ^ n2 -> n ^ (n1 * n2)",assuming:{divide:{total:!0}}},{l:" vd   * ( vd   * n1 + n2)",r:"vd^2       * n1 +  vd   * n2"},{s:" vd   * (vd^n4 * n1 + n2)   ->  vd^(1+n4)  * n1 +  vd   * n2",assuming:{divide:{total:!0}}},{s:"vd^n3 * ( vd   * n1 + n2)   ->  vd^(n3+1)  * n1 + vd^n3 * n2",assuming:{divide:{total:!0}}},{s:"vd^n3 * (vd^n4 * n1 + n2)   ->  vd^(n3+n4) * n1 + vd^n3 * n2",assuming:{divide:{total:!0}}},{l:"n*n",r:"n^2"},{s:"n * n^n1 -> n^(n1+1)",assuming:{divide:{total:!0}}},{s:"n^n1 * n^n2 -> n^(n1+n2)",assuming:{divide:{total:!0}}},f,{s:"n+n -> 2*n",assuming:{add:{total:!0}}},{l:"n+-n",r:"0"},{l:"vd*n + vd",r:"vd*(n+1)"},{l:"n3*n1 + n3*n2",r:"n3*(n1+n2)"},{l:"n3^(-n4)*n1 +   n3  * n2",r:"n3^(-n4)*(n1 + n3^(n4+1) *n2)"},{l:"n3^(-n4)*n1 + n3^n5 * n2",r:"n3^(-n4)*(n1 + n3^(n4+n5)*n2)"},{s:"n*vd + vd -> (n+1)*vd",assuming:{multiply:{commutative:!1}}},{s:"vd + n*vd -> (1+n)*vd",assuming:{multiply:{commutative:!1}}},{s:"n1*n3 + n2*n3 -> (n1+n2)*n3",assuming:{multiply:{commutative:!1}}},{s:"n^n1 * n -> n^(n1+1)",assuming:{divide:{total:!0},multiply:{commutative:!1}}},{s:"n1*n3^(-n4) + n2 * n3    -> (n1 + n2*n3^(n4 +  1))*n3^(-n4)",assuming:{multiply:{commutative:!1}}},{s:"n1*n3^(-n4) + n2 * n3^n5 -> (n1 + n2*n3^(n4 + n5))*n3^(-n4)",assuming:{multiply:{commutative:!1}}},{l:"n*cd + cd",r:"(n+1)*cd"},{s:"cd*n + cd -> cd*(n+1)",assuming:{multiply:{commutative:!1}}},{s:"cd + cd*n -> cd*(1+n)",assuming:{multiply:{commutative:!1}}},f,{s:"(-n)*n1 -> -(n*n1)",assuming:{subtract:{total:!0}}},{s:"n1*(-n) -> -(n1*n)",assuming:{subtract:{total:!0},multiply:{commutative:!1}}},{s:"ce+ve -> ve+ce",assuming:{add:{commutative:!0}},imposeContext:{add:{commutative:!1}}},{s:"vd*cd -> cd*vd",assuming:{multiply:{commutative:!0}},imposeContext:{multiply:{commutative:!1}}},{l:"n+-n1",r:"n-n1"},{l:"n+-(n1)",r:"n-(n1)"},{s:"n*(n1^-1) -> n/n1",assuming:{multiply:{commutative:!0}}},{s:"n*n1^-n2 -> n/n1^n2",assuming:{multiply:{commutative:!0}}},{s:"n^-1 -> 1/n",assuming:{multiply:{commutative:!0}}},{l:"n^1",r:"n"},{s:"n*(n1/n2) -> (n*n1)/n2",assuming:{multiply:{associative:!0}}},{s:"n-(n1+n2) -> n-n1-n2",assuming:{addition:{associative:!0,commutative:!0}}},{l:"1*n",r:"n",imposeContext:{multiply:{commutative:!0}}},{s:"n1/(n2/n3) -> (n1*n3)/n2",assuming:{multiply:{associative:!0}}},{l:"n1/(-n2)",r:"-n1/n2"}];var B=0;function H(){return new E("_p"+B++)}function W(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,c.dg)(),a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=a.consoleDebug;t=function(e,t){for(var n=[],a=0;a<e.length;a++){var i=e[a],s=void 0,o=typeof i;switch(o){case"string":i={s:i};case"object":s=function(e,t){var n={};if(e.s){var a=e.s.split("->");if(2===a.length)n.l=a[0],n.r=a[1];else throw SyntaxError("Could not parse rule: "+e.s)}else n.l=e.l,n.r=e.r;for(var i of(n.l=_(r(n.l)),n.r=_(r(n.r)),["imposeContext","repeat","assuming"]))i in e&&(n[i]=e[i]);if(e.evaluate&&(n.evaluate=r(e.evaluate)),z(n.l,t)){var s,o=!M(n.l,t);o&&(s=H());var l=R(n.l),c=H();n.expanded={},n.expanded.l=l([n.l,c]),I(n.expanded.l,t),F(n.expanded.l,t),n.expanded.r=l([n.r,c]),o&&(n.expandedNC1={},n.expandedNC1.l=l([s,n.l]),n.expandedNC1.r=l([s,n.r]),n.expandedNC2={},n.expandedNC2.l=l([s,n.expanded.l]),n.expandedNC2.r=l([s,n.expanded.r]))}return n}(i,t);break;case"function":s=i;break;default:throw TypeError("Unsupported type of rule: "+o)}n.push(s)}return n}(t||U.rules,a.context);var s=h(e,n);s=_(s);for(var o={},l=s.toString({parenthesis:"all"});!o[l];){o[l]=!0,B=0;var u=l;i&&console.log("Working on: ",l);for(var p=0;p<t.length;p++){var m="";if("function"==typeof t[p]?(s=t[p](s,a),i&&(m=t[p].name)):(I(s,a.context),s=Z(s,t[p],a.context),i&&(m="".concat(t[p].l.toString()," -> ").concat(t[p].r.toString()))),i){var d=s.toString({parenthesis:"all"});d!==u&&(console.log("Applying",m,"produced",d),u=d)}P(s,a.context)}l=s.toString({parenthesis:"all"})}return s}function J(e,t,n){var r=e;if(e)for(var a=0;a<e.length;++a){var i=Z(e[a],t,n);i!==e[a]&&(r===e&&(r=e.slice()),r[a]=i)}return r}function Z(e,t,n){if(t.assuming){for(var r in t.assuming)for(var a in t.assuming[r])if(q(r,a,n)!==t.assuming[r][a])return e}var i=j(t.imposeContext,n),s=e;if(s instanceof O||s instanceof C){var l=J(s.args,t,n);l!==s.args&&((s=s.clone()).args=l)}else if(s instanceof A){if(s.content){var c=Z(s.content,t,n);c!==s.content&&(s=new A(c))}}else if(s instanceof N){var u=J(s.items,t,n);u!==s.items&&(s=new N(u))}else if(s instanceof w){var p=s.object;s.object&&(p=Z(s.object,t,n));var m=s.index;s.index&&(m=Z(s.index,t,n)),(p!==s.object||m!==s.index)&&(s=new w(p,m))}else if(s instanceof S){var d=J(s.dimensions,t,n);d!==s.dimensions&&(s=new S(d))}else if(s instanceof T){var h=!1,f={};for(var g in s.properties)f[g]=Z(s.properties[g],t,n),f[g]!==s.properties[g]&&(h=!0);h&&(s=new T(f))}var x=t.r,y=Q(t.l,s,i)[0];if(!y&&t.expanded&&(x=t.expanded.r,y=Q(t.expanded.l,s,i)[0]),y||!t.expandedNC1||(x=t.expandedNC1.r,(y=Q(t.expandedNC1.l,s,i)[0])||(x=t.expandedNC2.r,y=Q(t.expandedNC2.l,s,i)[0])),y){var v=s.implicit;s=x.clone(),v&&"implicit"in x&&(s.implicit=!0),s=s.transform(function(e){return e.isSymbolNode&&(0,o.nr)(y.placeholders,e.name)?y.placeholders[e.name].clone():e})}return t.repeat&&s!==e&&(s=Z(s,t,n)),s}function V(e,t){var n,r=[];if(0===e.length||0===t.length)return r;for(var a=0;a<e.length;a++)for(var i=0;i<t.length;i++)(n=function(e,t){var n={placeholders:{}};if(!e.placeholders&&!t.placeholders)return n;if(!e.placeholders)return t;if(!t.placeholders)return e;for(var r in e.placeholders)if((0,o.nr)(e.placeholders,r)&&(n.placeholders[r]=e.placeholders[r],(0,o.nr)(t.placeholders,r)&&!function e(t,n){if(t instanceof k&&n instanceof k){if(!d(t.value,n.value))return!1}else if(t instanceof E&&n instanceof E){if(t.name!==n.name)return!1}else{if((!(t instanceof O)||!(n instanceof O))&&(!(t instanceof C)||!(n instanceof C)))return!1;if(t instanceof O){if(t.op!==n.op||t.fn!==n.fn)return!1}else if(t instanceof C&&t.name!==n.name)return!1;if(t.args.length!==n.args.length)return!1;for(var r=0;r<t.args.length;r++)if(!e(t.args[r],n.args[r]))return!1}return!0}(e.placeholders[r],t.placeholders[r])))return null;for(var a in t.placeholders)(0,o.nr)(t.placeholders,a)&&(n.placeholders[a]=t.placeholders[a]);return n}(e[a],t[i]))&&r.push(n);return r}function Q(e,t,n,r){var a=[{placeholders:{}}];if(e instanceof O&&t instanceof O||e instanceof C&&t instanceof C){if(e instanceof O){if(e.op!==t.op||e.fn!==t.fn)return[]}else if(e instanceof C&&e.name!==t.name)return[];if(1===t.args.length&&1===e.args.length||!z(t,n)&&t.args.length===e.args.length||r){for(var s=[],o=0;o<e.args.length;o++){var l=Q(e.args[o],t.args[o],n);if(0===l.length)break;s.push(l)}if(s.length!==e.args.length){if(!M(t,n)||1===e.args.length)return[];if(e.args.length>2)throw Error("permuting >2 commutative non-associative rule arguments not yet implemented");var c=Q(e.args[0],t.args[1],n);if(0===c.length)return[];var u=Q(e.args[1],t.args[0],n);if(0===u.length)return[];s=[c,u]}a=function(e){if(0===e.length)return e;for(var t=e.reduce(V),n=[],r={},a=0;a<t.length;a++){var i=JSON.stringify(t[a]);r[i]||(r[i]=!0,n.push(t[a]))}return n}(s)}else if(t.args.length>=2&&2===e.args.length){for(var p=function(e,t){var n,r,a=[],i=R(e);if(M(e,t))for(var s=0;s<e.args.length;s++)(r=e.args.slice(0)).splice(s,1),n=1===r.length?r[0]:i(r),a.push(i([e.args[s],n]));else for(var o=1;o<e.args.length;o++){var l=e.args[0];o>1&&(l=i(e.args.slice(0,o))),n=1===(r=e.args.slice(o)).length?r[0]:i(r),a.push(i([l,n]))}return a}(t,n),m=[],h=0;h<p.length;h++){var f=Q(e,p[h],n,!0);m=m.concat(f)}return m}else if(!(e.args.length>2))return[];else throw Error("Unexpected non-binary associative function: "+e.toString())}else if(e instanceof E){if(0===e.name.length)throw Error("Symbol in rule has 0 length...!?");if(G[e.name]){if(e.name!==t.name)return[]}else switch(e.name[1]>="a"&&e.name[1]<="z"?e.name.substring(0,2):e.name[0]){case"n":case"_p":a[0].placeholders[e.name]=t;break;case"c":case"cl":if(!(0,i.nu)(t))return[];a[0].placeholders[e.name]=t;break;case"v":if((0,i.nu)(t))return[];a[0].placeholders[e.name]=t;break;case"vl":if(!(0,i.FG)(t))return[];a[0].placeholders[e.name]=t;break;case"cd":if(!eO(t))return[];a[0].placeholders[e.name]=t;break;case"vd":if(eO(t))return[];a[0].placeholders[e.name]=t;break;case"ce":if(!eA(t))return[];a[0].placeholders[e.name]=t;break;case"ve":if(eA(t))return[];a[0].placeholders[e.name]=t;break;default:throw Error("Invalid symbol in rule: "+e.name)}}else if(!(e instanceof k))return[];else if(!d(e.value,t.value))return[];return a}return U}),eq="symbolicEqual",eM=(0,l.d5)(eq,["parse","simplify","typed","OperatorNode"],e=>{var{parse:t,simplify:n,typed:r,OperatorNode:a}=e;function s(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},s=n(new a("-","subtract",[e,t]),{},r);return(0,i.nu)(s)&&!s.value}return r(eq,{"Node, Node":s,"Node, Node, Object":s})}),ez="leafCount",ej=(0,l.d5)(ez,["parse","typed"],e=>{var{parse:t,typed:n}=e;return n(ez,{Node:function(e){return function e(t){var n=0;return t.forEach(t=>{n+=e(t)}),n||1}(e)}})}),eI="parser",eF=(0,l.d5)(eI,["typed","Parser"],e=>{var{typed:t,Parser:n}=e;return t(eI,{"":function(){return new n}})}),eP=n(9737),eR="rationalize",eD=(0,l.d5)(eR,["config","typed","equal","isZero","add","subtract","multiply","divide","pow","parse","simplifyConstant","simplifyCore","simplify","?bignumber","?fraction","mathWithTransform","matrix","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","SymbolNode","ParenthesisNode"],e=>{var{config:t,typed:n,equal:r,isZero:a,add:i,subtract:s,multiply:o,divide:l,pow:c,parse:u,simplifyConstant:p,simplifyCore:m,simplify:d,fraction:h,bignumber:f,mathWithTransform:g,matrix:x,AccessorNode:y,ArrayNode:v,ConstantNode:b,FunctionNode:w,IndexNode:N,ObjectNode:k,OperatorNode:C,SymbolNode:S,ParenthesisNode:T}=e;function O(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=(l=[m,{l:"n+n",r:"2*n"},{l:"n+-n",r:"0"},p,{l:"n*(n1^-1)",r:"n/n1"},{l:"n*n1^-n2",r:"n/n1^n2"},{l:"n1^-1",r:"1/n1"},{l:"n*(n1/n2)",r:"(n*n1)/n2"},{l:"1*n",r:"n"}],c=[{l:"(-n1)/(-n2)",r:"n1/n2"},{l:"(-n1)*(-n2)",r:"n1*n2"},{l:"n1--n2",r:"n1+n2"},{l:"n1-n2",r:"n1+(-n2)"},{l:"(n1+n2)*n3",r:"(n1*n3 + n2*n3)"},{l:"n1*(n2+n3)",r:"(n1*n2+n1*n3)"},{l:"c1*n + c2*n",r:"(c1+c2)*n"},{l:"c1*n + n",r:"(c1+1)*n"},{l:"c1*n - c2*n",r:"(c1-c2)*n"},{l:"c1*n - n",r:"(c1-1)*n"},{l:"v/c",r:"(1/c)*v"},{l:"v/-c",r:"-(1/c)*v"},{l:"-v*-c",r:"c*v"},{l:"-v*c",r:"-c*v"},{l:"v*-c",r:"-c*v"},{l:"v*c",r:"c*v"},{l:"-(-n1*n2)",r:"(n1*n2)"},{l:"-(n1*n2)",r:"(-n1*n2)"},{l:"-(-n1+n2)",r:"(n1-n2)"},{l:"-(n1+n2)",r:"(-n1-n2)"},{l:"(n1^n2)^n3",r:"(n1^(n2*n3))"},{l:"-(-n1/n2)",r:"(n1/n2)"},{l:"-(n1/n2)",r:"(-n1/n2)"}],u=[{l:"(n1/(n2/n3))",r:"((n1*n3)/n2)"},{l:"(n1/n2/n3)",r:"(n1/(n2*n3))"}],(h={}).firstRules=l.concat(c,u),h.distrDivRules=[{l:"(n1/n2 + n3/n4)",r:"((n1*n4 + n3*n2)/(n2*n4))"},{l:"(n1/n2 + n3)",r:"((n1 + n3*n2)/n2)"},{l:"(n1 + n2/n3)",r:"((n1*n3 + n2)/n3)"}],h.sucDivRules=u,h.firstRulesAgain=l.concat(c),h.finalRules=[m,{l:"n*-n",r:"-n^2"},{l:"n*n",r:"n^2"},p,{l:"n*-n^n1",r:"-n^(n1+1)"},{l:"n*n^n1",r:"n^(n1+1)"},{l:"n^n1*-n^n2",r:"-n^(n1+n2)"},{l:"n^n1*n^n2",r:"n^(n1+n2)"},{l:"n^n1*-n",r:"-n^(n1+1)"},{l:"n^n1*n",r:"n^(n1+1)"},{l:"n^n1/-n",r:"-n^(n1-1)"},{l:"n^n1/n",r:"n^(n1-1)"},{l:"n/-n^n1",r:"-n^(1-n1)"},{l:"n/n^n1",r:"n^(1-n1)"},{l:"n^n1/-n^n2",r:"n^(n1-n2)"},{l:"n^n1/n^n2",r:"n^(n1-n2)"},{l:"n1+(-n2*n3)",r:"n1-n2*n3"},{l:"v*(-c)",r:"-c*v"},{l:"n1+-n2",r:"n1-n2"},{l:"v*c",r:"c*v"},{l:"(n1^n2)^n3",r:"(n1^(n2*n3))"}],h),a=(f=e,g=!0,x=r.firstRules,y=[],v=d(f,x,t,{exactFractions:!1}),w="+-*"+((g=!!g)?"/":""),!function e(t){var n=t.type;if("FunctionNode"===n)throw Error("There is an unsolved function call");if("OperatorNode"===n){if("^"===t.op){if("ConstantNode"===t.args[1].type&&(0,eP.U)(parseFloat(t.args[1].value)))e(t.args[0]);else throw Error("There is a non-integer exponent")}else{if(-1===w.indexOf(t.op))throw Error("Operator "+t.op+" invalid in polynomial expression");for(var r=0;r<t.args.length;r++)e(t.args[r])}}else if("SymbolNode"===n){var a=t.name;-1===y.indexOf(a)&&y.push(a)}else if("ParenthesisNode"===n)e(t.content);else if("ConstantNode"!==n)throw Error("type "+n+" is not allowed in polynomial expression")}(v),(N={}).expression=v,N.variables=y,N),i=a.variables.length,s={exactFractions:!1},o={exactFractions:!0};if(e=a.expression,i>=1){e=function e(t,n,r){var a=t.type,i=arguments.length>1;if("OperatorNode"===a&&t.isBinary()){var s,o=!1;if("^"===t.op&&("ParenthesisNode"===t.args[0].type||"OperatorNode"===t.args[0].type)&&"ConstantNode"===t.args[1].type&&(o=(s=parseFloat(t.args[1].value))>=2&&(0,eP.U)(s)),o){if(s>2){var l=t.args[0],c=new C("^","pow",[t.args[0].cloneDeep(),new b(s-1)]);t=new C("*","multiply",[l,c])}else t=new C("*","multiply",[t.args[0],t.args[0].cloneDeep()]);i&&("content"===r?n.content=t:n.args[r]=t)}}if("ParenthesisNode"===a)e(t.content,t,"content");else if("ConstantNode"!==a&&"SymbolNode"!==a)for(var u=0;u<t.args.length;u++)e(t.args[u],t,u);if(!i)return t}(e);var l,c,u,h,f,g,x,y,v,w,N,k,S,T=!0,O=!1;for(e=d(e,r.firstRules,{},s);e=d(e,T?r.distrDivRules:r.sucDivRules,{},o),T=!T,(S=e.toString())!==k;)O=!0,k=S;O&&(e=d(e,r.firstRulesAgain,{},s)),e=d(e,r.finalRules,{},s)}var E=[],q={};return("OperatorNode"===e.type&&e.isBinary()&&"/"===e.op?(1===i&&(e.args[0]=A(e.args[0],E),e.args[1]=A(e.args[1])),n&&(q.numerator=e.args[0],q.denominator=e.args[1])):(1===i&&(e=A(e,E)),n&&(q.numerator=e,q.denominator=null)),n)?(q.coefficients=E,q.variables=a.variables,q.expression=e,q):e}return n(eR,{Node:O,"Node, boolean":(e,t)=>O(e,{},t),"Node, Object":O,"Node, Object, boolean":O});function A(e,t){void 0===t&&(t=[]),t[0]=0;var n,r={};r.cte=1,r.oper="+",r.fire="";var a=0,i="";(function e(n,r,s){var o=n.type;if("FunctionNode"===o)throw Error("There is an unsolved function call");if("OperatorNode"===o){if(-1==="+-*^".indexOf(n.op))throw Error("Operator "+n.op+" invalid");if(null!==r&&(("unaryMinus"===n.fn||"pow"===n.fn)&&"add"!==r.fn&&"subtract"!==r.fn&&"multiply"!==r.fn||("subtract"===n.fn||"add"===n.fn||"multiply"===n.fn)&&"add"!==r.fn&&"subtract"!==r.fn||("subtract"===n.fn||"add"===n.fn||"unaryMinus"===n.fn)&&0!==s.noFil))throw Error("Invalid "+n.op+" placing");("^"===n.op||"*"===n.op)&&(s.fire=n.op);for(var l=0;l<n.args.length;l++)"unaryMinus"===n.fn&&(s.oper="-"),("+"===n.op||"subtract"===n.fn)&&(s.fire="",s.cte=1,s.oper=0===l?"+":n.op),s.noFil=l,e(n.args[l],n,s)}else if("SymbolNode"===o){if(n.name!==i&&""!==i)throw Error("There is more than one variable");if(i=n.name,null===r){t[1]=1;return}if("^"===r.op&&0!==s.noFil)throw Error("In power the variable should be the first parameter");if("*"===r.op&&1!==s.noFil)throw Error("In multiply the variable should be the second parameter");(""===s.fire||"*"===s.fire)&&(a<1&&(t[1]=0),t[1]+=s.cte*("+"===s.oper?1:-1),a=Math.max(1,a))}else if("ConstantNode"===o){var c=parseFloat(n.value);if(null===r){t[0]=c;return}if("^"===r.op){if(1!==s.noFil)throw Error("Constant cannot be powered");if(!(0,eP.U)(c)||c<=0)throw Error("Non-integer exponent is not allowed");for(var u=a+1;u<c;u++)t[u]=0;c>a&&(t[c]=0),t[c]+=s.cte*("+"===s.oper?1:-1),a=Math.max(c,a);return}s.cte=c,""===s.fire&&(t[0]+=s.cte*("+"===s.oper?1:-1))}else throw Error("Type "+o+" is not allowed")})(e,null,r),a=t.length-1;for(var s=!0,o=a;o>=0;o--)if(0!==t[o]){var l=new b(s?t[o]:Math.abs(t[o])),c=t[o]<0?"-":"+";if(o>0){var u=new S(i);o>1&&(u=new C("^","pow",[u,new b(o)])),l=-1===t[o]&&s?new C("-","unaryMinus",[u]):1===Math.abs(t[o])?u:new C("*","multiply",[l,u])}n=s?l:"+"===c?new C("+","add",[n,l]):new C("-","subtract",[n,l]),s=!1}return s?new b(0):n}}),e$="derivative",eL=(0,l.d5)(e$,["typed","config","parse","simplify","equal","isZero","numeric","ConstantNode","FunctionNode","OperatorNode","ParenthesisNode","SymbolNode"],e=>{var{typed:t,config:n,parse:r,simplify:a,equal:s,isZero:o,numeric:l,ConstantNode:c,FunctionNode:u,OperatorNode:p,ParenthesisNode:m,SymbolNode:d}=e;function h(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{simplify:!0},r={};x(r,e,t.name);var i=y(e,r);return n.simplify?a(i):i}t.addConversion({from:"identifier",to:"SymbolNode",convert:r});var f=t(e$,{"Node, SymbolNode":h,"Node, SymbolNode, Object":h});t.removeConversion({from:"identifier",to:"SymbolNode",convert:r}),f._simplify=!0,f.toTex=function(e){return g.apply(null,e.args)};var g=t("_derivTex",{"Node, SymbolNode":function(e,t){return(0,i.nu)(e)&&"string"===(0,i.kM)(e.value)?g(r(e.value).toString(),t.toString(),1):g(e.toTex(),t.toString(),1)},"Node, ConstantNode":function(e,t){if("string"===(0,i.kM)(t.value))return g(e,r(t.value));throw Error("The second parameter to 'derivative' is a non-string constant")},"Node, SymbolNode, ConstantNode":function(e,t,n){return g(e.toString(),t.name,n.value)},"string, string, number":function(e,t,n){return(1===n?"{d\\over d"+t+"}":"{d^{"+n+"}\\over d"+t+"^{"+n+"}}")+"\\left[".concat(e,"\\right]")}}),x=t("constTag",{"Object, ConstantNode, string":function(e,t){return e[t]=!0,!0},"Object, SymbolNode, string":function(e,t,n){return t.name!==n&&(e[t]=!0,!0)},"Object, ParenthesisNode, string":function(e,t,n){return x(e,t.content,n)},"Object, FunctionAssignmentNode, string":function(e,t,n){return -1===t.params.indexOf(n)?(e[t]=!0,!0):x(e,t.expr,n)},"Object, FunctionNode | OperatorNode, string":function(e,t,n){if(t.args.length>0){for(var r=x(e,t.args[0],n),a=1;a<t.args.length;++a)r=x(e,t.args[a],n)&&r;if(r)return e[t]=!0,!0}return!1}}),y=t("_derivative",{"ConstantNode, Object":function(e){return v(0)},"SymbolNode, Object":function(e,t){return void 0!==t[e]?v(0):v(1)},"ParenthesisNode, Object":function(e,t){return new m(y(e.content,t))},"FunctionAssignmentNode, Object":function(e,t){return void 0!==t[e]?v(0):y(e.expr,t)},"FunctionNode, Object":function(e,t){if(void 0!==t[e])return v(0);var n,r,a,i,s=e.args[0],o=!1,l=!1;switch(e.name){case"cbrt":o=!0,r=new p("*","multiply",[v(3),new p("^","pow",[s,new p("/","divide",[v(2),v(3)])])]);break;case"sqrt":case"nthRoot":if(1===e.args.length)o=!0,r=new p("*","multiply",[v(2),new u("sqrt",[s])]);else if(2===e.args.length)return t[n=new p("/","divide",[v(1),e.args[1]])]=t[e.args[1]],y(new p("^","pow",[s,n]),t);break;case"log10":n=v(10);case"log":if(n||1!==e.args.length){if(1===e.args.length&&n||2===e.args.length&&void 0!==t[e.args[1]])r=new p("*","multiply",[s.clone(),new u("log",[n||e.args[1]])]),o=!0;else if(2===e.args.length)return y(new p("/","divide",[new u("log",[s]),new u("log",[e.args[1]])]),t)}else r=s.clone(),o=!0;break;case"pow":if(2===e.args.length)return t[n]=t[e.args[1]],y(new p("^","pow",[s,e.args[1]]),t);break;case"exp":r=new u("exp",[s.clone()]);break;case"sin":r=new u("cos",[s.clone()]);break;case"cos":r=new p("-","unaryMinus",[new u("sin",[s.clone()])]);break;case"tan":r=new p("^","pow",[new u("sec",[s.clone()]),v(2)]);break;case"sec":r=new p("*","multiply",[e,new u("tan",[s.clone()])]);break;case"csc":l=!0,r=new p("*","multiply",[e,new u("cot",[s.clone()])]);break;case"cot":l=!0,r=new p("^","pow",[new u("csc",[s.clone()]),v(2)]);break;case"asin":o=!0,r=new u("sqrt",[new p("-","subtract",[v(1),new p("^","pow",[s.clone(),v(2)])])]);break;case"acos":o=!0,l=!0,r=new u("sqrt",[new p("-","subtract",[v(1),new p("^","pow",[s.clone(),v(2)])])]);break;case"atan":o=!0,r=new p("+","add",[new p("^","pow",[s.clone(),v(2)]),v(1)]);break;case"asec":o=!0,r=new p("*","multiply",[new u("abs",[s.clone()]),new u("sqrt",[new p("-","subtract",[new p("^","pow",[s.clone(),v(2)]),v(1)])])]);break;case"acsc":o=!0,l=!0,r=new p("*","multiply",[new u("abs",[s.clone()]),new u("sqrt",[new p("-","subtract",[new p("^","pow",[s.clone(),v(2)]),v(1)])])]);break;case"acot":o=!0,l=!0,r=new p("+","add",[new p("^","pow",[s.clone(),v(2)]),v(1)]);break;case"sinh":r=new u("cosh",[s.clone()]);break;case"cosh":r=new u("sinh",[s.clone()]);break;case"tanh":r=new p("^","pow",[new u("sech",[s.clone()]),v(2)]);break;case"sech":l=!0,r=new p("*","multiply",[e,new u("tanh",[s.clone()])]);break;case"csch":l=!0,r=new p("*","multiply",[e,new u("coth",[s.clone()])]);break;case"coth":l=!0,r=new p("^","pow",[new u("csch",[s.clone()]),v(2)]);break;case"asinh":o=!0,r=new u("sqrt",[new p("+","add",[new p("^","pow",[s.clone(),v(2)]),v(1)])]);break;case"acosh":o=!0,r=new u("sqrt",[new p("-","subtract",[new p("^","pow",[s.clone(),v(2)]),v(1)])]);break;case"atanh":o=!0,r=new p("-","subtract",[v(1),new p("^","pow",[s.clone(),v(2)])]);break;case"asech":o=!0,l=!0,r=new p("*","multiply",[s.clone(),new u("sqrt",[new p("-","subtract",[v(1),new p("^","pow",[s.clone(),v(2)])])])]);break;case"acsch":o=!0,l=!0,r=new p("*","multiply",[new u("abs",[s.clone()]),new u("sqrt",[new p("+","add",[new p("^","pow",[s.clone(),v(2)]),v(1)])])]);break;case"acoth":o=!0,l=!0,r=new p("-","subtract",[v(1),new p("^","pow",[s.clone(),v(2)])]);break;case"abs":r=new p("/","divide",[new u(new d("abs"),[s.clone()]),s.clone()]);break;default:throw Error('Cannot process function "'+e.name+'" in derivative: the function is not supported, undefined, or the number of arguments passed to it are not supported')}o?(a="/",i="divide"):(a="*",i="multiply");var c=y(s,t);return l&&(c=new p("-","unaryMinus",[c])),new p(a,i,[c,r])},"OperatorNode, Object":function(e,t){if(void 0!==t[e])return v(0);if("+"===e.op)return new p(e.op,e.fn,e.args.map(function(e){return y(e,t)}));if("-"===e.op){if(e.isUnary())return new p(e.op,e.fn,[y(e.args[0],t)]);if(e.isBinary())return new p(e.op,e.fn,[y(e.args[0],t),y(e.args[1],t)])}if("*"===e.op){var n=e.args.filter(function(e){return void 0!==t[e]});if(n.length>0){var r=e.args.filter(function(e){return void 0===t[e]}),a=1===r.length?r[0]:new p("*","multiply",r);return new p("*","multiply",n.concat(y(a,t)))}return new p("+","add",e.args.map(function(n){return new p("*","multiply",e.args.map(function(e){return e===n?y(e,t):e.clone()}))}))}if("/"===e.op&&e.isBinary()){var l=e.args[0],c=e.args[1];return void 0!==t[c]?new p("/","divide",[y(l,t),c]):void 0!==t[l]?new p("*","multiply",[new p("-","unaryMinus",[l]),new p("/","divide",[y(c,t),new p("^","pow",[c.clone(),v(2)])])]):new p("/","divide",[new p("-","subtract",[new p("*","multiply",[y(l,t),c.clone()]),new p("*","multiply",[l.clone(),y(c,t)])]),new p("^","pow",[c.clone(),v(2)])])}if("^"===e.op&&e.isBinary()){var m=e.args[0],d=e.args[1];if(void 0!==t[m])return(0,i.nu)(m)&&(o(m.value)||s(m.value,1))?v(0):new p("*","multiply",[e,new p("*","multiply",[new u("log",[m.clone()]),y(d.clone(),t)])]);if(void 0!==t[d]){if((0,i.nu)(d)){if(o(d.value))return v(0);if(s(d.value,1))return y(m,t)}var h=new p("^","pow",[m.clone(),new p("-","subtract",[d,v(1)])]);return new p("*","multiply",[d.clone(),new p("*","multiply",[y(m,t),h])])}return new p("*","multiply",[new p("^","pow",[m.clone(),d.clone()]),new p("+","add",[new p("*","multiply",[y(m,t),new p("/","divide",[d.clone(),m.clone()])]),new p("*","multiply",[y(d,t),new u("log",[m.clone()])])])])}throw Error('Cannot process operator "'+e.op+'" in derivative: the operator is not supported, undefined, or the number of arguments passed to it are not supported')}});function v(e,t){return new c(l(e,t||n.number))}return f}),eU={name:"e",category:"Constants",syntax:["e"],description:"Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",examples:["e","e ^ 2","exp(2)","log(e)"],seealso:["exp"]},e_={name:"pi",category:"Constants",syntax:["pi"],description:"The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",examples:["pi","sin(pi/2)"],seealso:["tau"]},eG={bignumber:{name:"bignumber",category:"Construction",syntax:["bignumber(x)"],description:"Create a big number from a number or string.",examples:["0.1 + 0.2","bignumber(0.1) + bignumber(0.2)",'bignumber("7.2")','bignumber("7.2e500")',"bignumber([0.1, 0.2, 0.3])"],seealso:["boolean","complex","fraction","index","matrix","string","unit"]},boolean:{name:"boolean",category:"Construction",syntax:["x","boolean(x)"],description:"Convert a string or number into a boolean.",examples:["boolean(0)","boolean(1)","boolean(3)",'boolean("true")','boolean("false")',"boolean([1, 0, 1, 1])"],seealso:["bignumber","complex","index","matrix","number","string","unit"]},complex:{name:"complex",category:"Construction",syntax:["complex()","complex(re, im)","complex(string)"],description:"Create a complex number.",examples:["complex()","complex(2, 3)",'complex("7 - 2i")'],seealso:["bignumber","boolean","index","matrix","number","string","unit"]},createUnit:{name:"createUnit",category:"Construction",syntax:["createUnit(definitions)","createUnit(name, definition)"],description:"Create a user-defined unit and register it with the Unit type.",examples:['createUnit("foo")','createUnit("knot", {definition: "0.514444444 m/s", aliases: ["knots", "kt", "kts"]})','createUnit("mph", "1 mile/hour")'],seealso:["unit","splitUnit"]},fraction:{name:"fraction",category:"Construction",syntax:["fraction(num)","fraction(matrix)","fraction(num,den)","fraction({n: num, d: den})"],description:"Create a fraction from a number or from integer numerator and denominator.",examples:["fraction(0.125)","fraction(1, 3) + fraction(2, 5)","fraction({n: 333, d: 53})","fraction([sqrt(9), sqrt(10), sqrt(11)])"],seealso:["bignumber","boolean","complex","index","matrix","string","unit"]},index:{name:"index",category:"Construction",syntax:["[start]","[start:end]","[start:step:end]","[start1, start 2, ...]","[start1:end1, start2:end2, ...]","[start1:step1:end1, start2:step2:end2, ...]"],description:"Create an index to get or replace a subset of a matrix",examples:["A = [1, 2, 3; 4, 5, 6]","A[1, :]","A[1, 2] = 50","A[1:2, 1:2] = 1","B = [1, 2, 3]","B[B>1 and B<3]"],seealso:["bignumber","boolean","complex","matrix,","number","range","string","unit"]},matrix:{name:"matrix",category:"Construction",syntax:["[]","[a1, b1, ...; a2, b2, ...]","matrix()",'matrix("dense")',"matrix([...])"],description:"Create a matrix.",examples:["[]","[1, 2, 3]","[1, 2, 3; 4, 5, 6]","matrix()","matrix([3, 4])",'matrix([3, 4; 5, 6], "sparse")','matrix([3, 4; 5, 6], "sparse", "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","sparse"]},number:{name:"number",category:"Construction",syntax:["x","number(x)","number(unit, valuelessUnit)"],description:"Create a number or convert a string or boolean into a number.",examples:["2","2e3","4.05","number(2)",'number("7.2")',"number(true)","number([true, false, true, true])",'number(unit("52cm"), "m")'],seealso:["bignumber","boolean","complex","fraction","index","matrix","string","unit"]},sparse:{name:"sparse",category:"Construction",syntax:["sparse()","sparse([a1, b1, ...; a1, b2, ...])",'sparse([a1, b1, ...; a1, b2, ...], "number")'],description:"Create a sparse matrix.",examples:["sparse()","sparse([3, 4; 5, 6])",'sparse([3, 0; 5, 0], "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","matrix"]},splitUnit:{name:"splitUnit",category:"Construction",syntax:["splitUnit(unit: Unit, parts: Unit[])"],description:"Split a unit in an array of units whose sum is equal to the original unit.",examples:['splitUnit(1 m, ["feet", "inch"])'],seealso:["unit","createUnit"]},string:{name:"string",category:"Construction",syntax:['"text"',"string(x)"],description:"Create a string or convert a value to a string",examples:['"Hello World!"',"string(4.2)","string(3 + 2i)"],seealso:["bignumber","boolean","complex","index","matrix","number","unit"]},unit:{name:"unit",category:"Construction",syntax:["value unit","unit(value, unit)","unit(string)"],description:"Create a unit.",examples:["5.5 mm","3 inch",'unit(7.1, "kilogram")','unit("23 deg")'],seealso:["bignumber","boolean","complex","index","matrix","number","string"]},e:eU,E:eU,false:{name:"false",category:"Constants",syntax:["false"],description:"Boolean value false",examples:["false"],seealso:["true"]},i:{name:"i",category:"Constants",syntax:["i"],description:"Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",examples:["i","i * i","sqrt(-1)"],seealso:[]},Infinity:{name:"Infinity",category:"Constants",syntax:["Infinity"],description:"Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",examples:["Infinity","1 / 0"],seealso:[]},LN2:{name:"LN2",category:"Constants",syntax:["LN2"],description:"Returns the natural logarithm of 2, approximately equal to 0.693",examples:["LN2","log(2)"],seealso:[]},LN10:{name:"LN10",category:"Constants",syntax:["LN10"],description:"Returns the natural logarithm of 10, approximately equal to 2.302",examples:["LN10","log(10)"],seealso:[]},LOG2E:{name:"LOG2E",category:"Constants",syntax:["LOG2E"],description:"Returns the base-2 logarithm of E, approximately equal to 1.442",examples:["LOG2E","log(e, 2)"],seealso:[]},LOG10E:{name:"LOG10E",category:"Constants",syntax:["LOG10E"],description:"Returns the base-10 logarithm of E, approximately equal to 0.434",examples:["LOG10E","log(e, 10)"],seealso:[]},NaN:{name:"NaN",category:"Constants",syntax:["NaN"],description:"Not a number",examples:["NaN","0 / 0"],seealso:[]},null:{name:"null",category:"Constants",syntax:["null"],description:"Value null",examples:["null"],seealso:["true","false"]},pi:e_,PI:e_,phi:{name:"phi",category:"Constants",syntax:["phi"],description:"Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",examples:["phi"],seealso:[]},SQRT1_2:{name:"SQRT1_2",category:"Constants",syntax:["SQRT1_2"],description:"Returns the square root of 1/2, approximately equal to 0.707",examples:["SQRT1_2","sqrt(1/2)"],seealso:[]},SQRT2:{name:"SQRT2",category:"Constants",syntax:["SQRT2"],description:"Returns the square root of 2, approximately equal to 1.414",examples:["SQRT2","sqrt(2)"],seealso:[]},tau:{name:"tau",category:"Constants",syntax:["tau"],description:"Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",examples:["tau","2 * pi"],seealso:["pi"]},true:{name:"true",category:"Constants",syntax:["true"],description:"Boolean value true",examples:["true"],seealso:["false"]},version:{name:"version",category:"Constants",syntax:["version"],description:"A string with the version number of math.js",examples:["version"],seealso:[]},speedOfLight:{description:"Speed of light in vacuum",examples:["speedOfLight"]},gravitationConstant:{description:"Newtonian constant of gravitation",examples:["gravitationConstant"]},planckConstant:{description:"Planck constant",examples:["planckConstant"]},reducedPlanckConstant:{description:"Reduced Planck constant",examples:["reducedPlanckConstant"]},magneticConstant:{description:"Magnetic constant (vacuum permeability)",examples:["magneticConstant"]},electricConstant:{description:"Electric constant (vacuum permeability)",examples:["electricConstant"]},vacuumImpedance:{description:"Characteristic impedance of vacuum",examples:["vacuumImpedance"]},coulomb:{description:"Coulomb's constant",examples:["coulomb"]},elementaryCharge:{description:"Elementary charge",examples:["elementaryCharge"]},bohrMagneton:{description:"Borh magneton",examples:["bohrMagneton"]},conductanceQuantum:{description:"Conductance quantum",examples:["conductanceQuantum"]},inverseConductanceQuantum:{description:"Inverse conductance quantum",examples:["inverseConductanceQuantum"]},magneticFluxQuantum:{description:"Magnetic flux quantum",examples:["magneticFluxQuantum"]},nuclearMagneton:{description:"Nuclear magneton",examples:["nuclearMagneton"]},klitzing:{description:"Von Klitzing constant",examples:["klitzing"]},bohrRadius:{description:"Borh radius",examples:["bohrRadius"]},classicalElectronRadius:{description:"Classical electron radius",examples:["classicalElectronRadius"]},electronMass:{description:"Electron mass",examples:["electronMass"]},fermiCoupling:{description:"Fermi coupling constant",examples:["fermiCoupling"]},fineStructure:{description:"Fine-structure constant",examples:["fineStructure"]},hartreeEnergy:{description:"Hartree energy",examples:["hartreeEnergy"]},protonMass:{description:"Proton mass",examples:["protonMass"]},deuteronMass:{description:"Deuteron Mass",examples:["deuteronMass"]},neutronMass:{description:"Neutron mass",examples:["neutronMass"]},quantumOfCirculation:{description:"Quantum of circulation",examples:["quantumOfCirculation"]},rydberg:{description:"Rydberg constant",examples:["rydberg"]},thomsonCrossSection:{description:"Thomson cross section",examples:["thomsonCrossSection"]},weakMixingAngle:{description:"Weak mixing angle",examples:["weakMixingAngle"]},efimovFactor:{description:"Efimov factor",examples:["efimovFactor"]},atomicMass:{description:"Atomic mass constant",examples:["atomicMass"]},avogadro:{description:"Avogadro's number",examples:["avogadro"]},boltzmann:{description:"Boltzmann constant",examples:["boltzmann"]},faraday:{description:"Faraday constant",examples:["faraday"]},firstRadiation:{description:"First radiation constant",examples:["firstRadiation"]},loschmidt:{description:"Loschmidt constant at T=273.15 K and p=101.325 kPa",examples:["loschmidt"]},gasConstant:{description:"Gas constant",examples:["gasConstant"]},molarPlanckConstant:{description:"Molar Planck constant",examples:["molarPlanckConstant"]},molarVolume:{description:"Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",examples:["molarVolume"]},sackurTetrode:{description:"Sackur-Tetrode constant at T=1 K and p=101.325 kPa",examples:["sackurTetrode"]},secondRadiation:{description:"Second radiation constant",examples:["secondRadiation"]},stefanBoltzmann:{description:"Stefan-Boltzmann constant",examples:["stefanBoltzmann"]},wienDisplacement:{description:"Wien displacement law constant",examples:["wienDisplacement"]},molarMass:{description:"Molar mass constant",examples:["molarMass"]},molarMassC12:{description:"Molar mass constant of carbon-12",examples:["molarMassC12"]},gravity:{description:"Standard acceleration of gravity (standard acceleration of free-fall on Earth)",examples:["gravity"]},planckLength:{description:"Planck length",examples:["planckLength"]},planckMass:{description:"Planck mass",examples:["planckMass"]},planckTime:{description:"Planck time",examples:["planckTime"]},planckCharge:{description:"Planck charge",examples:["planckCharge"]},planckTemperature:{description:"Planck temperature",examples:["planckTemperature"]},derivative:{name:"derivative",category:"Algebra",syntax:["derivative(expr, variable)","derivative(expr, variable, {simplify: boolean})"],description:"Takes the derivative of an expression expressed in parser Nodes. The derivative will be taken over the supplied variable in the second parameter. If there are multiple variables in the expression, it will return a partial derivative.",examples:['derivative("2x^3", "x")','derivative("2x^3", "x", {simplify: false})','derivative("2x^2 + 3x + 4", "x")','derivative("sin(2x)", "x")','f = parse("x^2 + x")','x = parse("x")',"df = derivative(f, x)","df.evaluate({x: 3})"],seealso:["simplify","parse","evaluate"]},lsolve:{name:"lsolve",category:"Algebra",syntax:["x=lsolve(L, b)"],description:"Finds one solution of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lsolveAll","lup","lusolve","usolve","matrix","sparse"]},lsolveAll:{name:"lsolveAll",category:"Algebra",syntax:["x=lsolveAll(L, b)"],description:"Finds all solutions of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lsolve","lup","lusolve","usolve","matrix","sparse"]},lup:{name:"lup",category:"Algebra",syntax:["lup(m)"],description:"Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",examples:["lup([[2, 1], [1, 4]])","lup(matrix([[2, 1], [1, 4]]))","lup(sparse([[2, 1], [1, 4]]))"],seealso:["lusolve","lsolve","usolve","matrix","sparse","slu","qr"]},lusolve:{name:"lusolve",category:"Algebra",syntax:["x=lusolve(A, b)","x=lusolve(lu, b)"],description:"Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lusolve(a, b)"],seealso:["lup","slu","lsolve","usolve","matrix","sparse"]},leafCount:{name:"leafCount",category:"Algebra",syntax:["leafCount(expr)"],description:"Computes the number of leaves in the parse tree of the given expression",examples:['leafCount("e^(i*pi)-1")','leafCount(parse("{a: 22/7, b: 10^(1/2)}"))'],seealso:["simplify"]},polynomialRoot:{name:"polynomialRoot",category:"Algebra",syntax:["x=polynomialRoot(-6, 3)","x=polynomialRoot(4, -4, 1)","x=polynomialRoot(-8, 12, -6, 1)"],description:"Finds the roots of a univariate polynomial given by its coefficients starting from constant, linear, and so on, increasing in degree.",examples:["a = polynomialRoot(-6, 11, -6, 1)"],seealso:["cbrt","sqrt"]},resolve:{name:"resolve",category:"Algebra",syntax:["resolve(node, scope)"],description:"Recursively substitute variables in an expression tree.",examples:['resolve(parse("1 + x"), { x: 7 })','resolve(parse("size(text)"), { text: "Hello World" })','resolve(parse("x + y"), { x: parse("3z") })','resolve(parse("3x"), { x: parse("y+z"), z: parse("w^y") })'],seealso:["simplify","evaluate"],mayThrow:["ReferenceError"]},simplify:{name:"simplify",category:"Algebra",syntax:["simplify(expr)","simplify(expr, rules)"],description:"Simplify an expression tree.",examples:['simplify("3 + 2 / 4")','simplify("2x + x")','f = parse("x * (x + 2 + x)")',"simplified = simplify(f)","simplified.evaluate({x: 2})"],seealso:["simplifyCore","derivative","evaluate","parse","rationalize","resolve"]},simplifyConstant:{name:"simplifyConstant",category:"Algebra",syntax:["simplifyConstant(expr)","simplifyConstant(expr, options)"],description:"Replace constant subexpressions of node with their values.",examples:['simplifyConstant("(3-3)*x")','simplifyConstant(parse("z-cos(tau/8)"))'],seealso:["simplify","simplifyCore","evaluate"]},simplifyCore:{name:"simplifyCore",category:"Algebra",syntax:["simplifyCore(node)"],description:"Perform simple one-pass simplifications on an expression tree.",examples:['simplifyCore(parse("0*x"))','simplifyCore(parse("(x+0)*2"))'],seealso:["simplify","simplifyConstant","evaluate"]},symbolicEqual:{name:"symbolicEqual",category:"Algebra",syntax:["symbolicEqual(expr1, expr2)","symbolicEqual(expr1, expr2, options)"],description:"Returns true if the difference of the expressions simplifies to 0",examples:['symbolicEqual("x*y","y*x")','symbolicEqual("abs(x^2)", "x^2")','symbolicEqual("abs(x)", "x", {context: {abs: {trivial: true}}})'],seealso:["simplify","evaluate"]},rationalize:{name:"rationalize",category:"Algebra",syntax:["rationalize(expr)","rationalize(expr, scope)","rationalize(expr, scope, detailed)"],description:"Transform a rationalizable expression in a rational fraction. If rational fraction is one variable polynomial then converts the numerator and denominator in canonical form, with decreasing exponents, returning the coefficients of numerator.",examples:['rationalize("2x/y - y/(x+1)")','rationalize("2x/y - y/(x+1)", true)'],seealso:["simplify"]},slu:{name:"slu",category:"Algebra",syntax:["slu(A, order, threshold)"],description:"Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",examples:["slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)"],seealso:["lusolve","lsolve","usolve","matrix","sparse","lup","qr"]},usolve:{name:"usolve",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Finds one solution of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["usolveAll","lup","lusolve","lsolve","matrix","sparse"]},usolveAll:{name:"usolveAll",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Finds all solutions of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["usolve","lup","lusolve","lsolve","matrix","sparse"]},qr:{name:"qr",category:"Algebra",syntax:["qr(A)"],description:"Calculates the Matrix QR decomposition. Matrix `A` is decomposed in two matrices (`Q`, `R`) where `Q` is an orthogonal matrix and `R` is an upper triangular matrix.",examples:["qr([[1, -1,  4], [1,  4, -2], [1,  4,  2], [1,  -1, 0]])"],seealso:["lup","slu","matrix"]},abs:{name:"abs",category:"Arithmetic",syntax:["abs(x)"],description:"Compute the absolute value.",examples:["abs(3.5)","abs(-4.2)"],seealso:["sign"]},add:{name:"add",category:"Operators",syntax:["x + y","add(x, y)"],description:"Add two values.",examples:["a = 2.1 + 3.6","a - 3.6","3 + 2i","3 cm + 2 inch",'"2.3" + "4"'],seealso:["subtract"]},cbrt:{name:"cbrt",category:"Arithmetic",syntax:["cbrt(x)","cbrt(x, allRoots)"],description:"Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",examples:["cbrt(64)","cube(4)","cbrt(-8)","cbrt(2 + 3i)","cbrt(8i)","cbrt(8i, true)","cbrt(27 m^3)"],seealso:["square","sqrt","cube","multiply"]},ceil:{name:"ceil",category:"Arithmetic",syntax:["ceil(x)"],description:"Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",examples:["ceil(3.2)","ceil(3.8)","ceil(-4.2)"],seealso:["floor","fix","round"]},cube:{name:"cube",category:"Arithmetic",syntax:["cube(x)"],description:"Compute the cube of a value. The cube of x is x * x * x.",examples:["cube(2)","2^3","2 * 2 * 2"],seealso:["multiply","square","pow"]},divide:{name:"divide",category:"Operators",syntax:["x / y","divide(x, y)"],description:"Divide two values.",examples:["a = 2 / 3","a * 3","4.5 / 2","3 + 4 / 2","(3 + 4) / 2","18 km / 4.5"],seealso:["multiply"]},dotDivide:{name:"dotDivide",category:"Operators",syntax:["x ./ y","dotDivide(x, y)"],description:"Divide two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a ./ b"],seealso:["multiply","dotMultiply","divide"]},dotMultiply:{name:"dotMultiply",category:"Operators",syntax:["x .* y","dotMultiply(x, y)"],description:"Multiply two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a .* b"],seealso:["multiply","divide","dotDivide"]},dotPow:{name:"dotPow",category:"Operators",syntax:["x .^ y","dotPow(x, y)"],description:"Calculates the power of x to y element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","a .^ 2"],seealso:["pow"]},exp:{name:"exp",category:"Arithmetic",syntax:["exp(x)"],description:"Calculate the exponent of a value.",examples:["exp(1.3)","e ^ 1.3","log(exp(1.3))","x = 2.4","(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula"],seealso:["expm","expm1","pow","log"]},expm:{name:"expm",category:"Arithmetic",syntax:["exp(x)"],description:"Compute the matrix exponential, expm(A) = e^A. The matrix must be square. Not to be confused with exp(a), which performs element-wise exponentiation.",examples:["expm([[0,2],[0,0]])"],seealso:["exp"]},expm1:{name:"expm1",category:"Arithmetic",syntax:["expm1(x)"],description:"Calculate the value of subtracting 1 from the exponential value.",examples:["expm1(2)","pow(e, 2) - 1","log(expm1(2) + 1)"],seealso:["exp","pow","log"]},fix:{name:"fix",category:"Arithmetic",syntax:["fix(x)"],description:"Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",examples:["fix(3.2)","fix(3.8)","fix(-4.2)","fix(-4.8)"],seealso:["ceil","floor","round"]},floor:{name:"floor",category:"Arithmetic",syntax:["floor(x)"],description:"Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",examples:["floor(3.2)","floor(3.8)","floor(-4.2)"],seealso:["ceil","fix","round"]},gcd:{name:"gcd",category:"Arithmetic",syntax:["gcd(a, b)","gcd(a, b, c, ...)"],description:"Compute the greatest common divisor.",examples:["gcd(8, 12)","gcd(-4, 6)","gcd(25, 15, -10)"],seealso:["lcm","xgcd"]},hypot:{name:"hypot",category:"Arithmetic",syntax:["hypot(a, b, c, ...)","hypot([a, b, c, ...])"],description:"Calculate the hypotenusa of a list with values. ",examples:["hypot(3, 4)","sqrt(3^2 + 4^2)","hypot(-2)","hypot([3, 4, 5])"],seealso:["abs","norm"]},lcm:{name:"lcm",category:"Arithmetic",syntax:["lcm(x, y)"],description:"Compute the least common multiple.",examples:["lcm(4, 6)","lcm(6, 21)","lcm(6, 21, 5)"],seealso:["gcd"]},log:{name:"log",category:"Arithmetic",syntax:["log(x)","log(x, base)"],description:"Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",examples:["log(3.5)","a = log(2.4)","exp(a)","10 ^ 4","log(10000, 10)","log(10000) / log(10)","b = log(1024, 2)","2 ^ b"],seealso:["exp","log1p","log2","log10"]},log2:{name:"log2",category:"Arithmetic",syntax:["log2(x)"],description:"Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.",examples:["log2(0.03125)","log2(16)","log2(16) / log2(2)","pow(2, 4)"],seealso:["exp","log1p","log","log10"]},log1p:{name:"log1p",category:"Arithmetic",syntax:["log1p(x)","log1p(x, base)"],description:"Calculate the logarithm of a `value+1`",examples:["log1p(2.5)","exp(log1p(1.4))","pow(10, 4)","log1p(9999, 10)","log1p(9999) / log(10)"],seealso:["exp","log","log2","log10"]},log10:{name:"log10",category:"Arithmetic",syntax:["log10(x)"],description:"Compute the 10-base logarithm of a value.",examples:["log10(0.00001)","log10(10000)","10 ^ 4","log(10000) / log(10)","log(10000, 10)"],seealso:["exp","log"]},mod:{name:"mod",category:"Operators",syntax:["x % y","x mod y","mod(x, y)"],description:"Calculates the modulus, the remainder of an integer division.",examples:["7 % 3","11 % 2","10 mod 4","isOdd(x) = x % 2","isOdd(2)","isOdd(3)"],seealso:["divide"]},multiply:{name:"multiply",category:"Operators",syntax:["x * y","multiply(x, y)"],description:"multiply two values.",examples:["a = 2.1 * 3.4","a / 3.4","2 * 3 + 4","2 * (3 + 4)","3 * 2.1 km"],seealso:["divide"]},norm:{name:"norm",category:"Arithmetic",syntax:["norm(x)","norm(x, p)"],description:"Calculate the norm of a number, vector or matrix.",examples:["abs(-3.5)","norm(-3.5)","norm(3 - 4i)","norm([1, 2, -3], Infinity)","norm([1, 2, -3], -Infinity)","norm([3, 4], 2)","norm([[1, 2], [3, 4]], 1)",'norm([[1, 2], [3, 4]], "inf")','norm([[1, 2], [3, 4]], "fro")']},nthRoot:{name:"nthRoot",category:"Arithmetic",syntax:["nthRoot(a)","nthRoot(a, root)"],description:'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',examples:["4 ^ 3","nthRoot(64, 3)","nthRoot(9, 2)","sqrt(9)"],seealso:["nthRoots","pow","sqrt"]},nthRoots:{name:"nthRoots",category:"Arithmetic",syntax:["nthRoots(A)","nthRoots(A, root)"],description:'Calculate the nth roots of a value. An nth root of a positive real number A, is a positive real solution of the equation "x^root = A". This function returns an array of complex values.',examples:["nthRoots(1)","nthRoots(1, 3)"],seealso:["sqrt","pow","nthRoot"]},pow:{name:"pow",category:"Operators",syntax:["x ^ y","pow(x, y)"],description:"Calculates the power of x to y, x^y.",examples:["2^3","2*2*2","1 + e ^ (pi * i)","pow([[1, 2], [4, 3]], 2)","pow([[1, 2], [4, 3]], -1)"],seealso:["multiply","nthRoot","nthRoots","sqrt"]},round:{name:"round",category:"Arithmetic",syntax:["round(x)","round(x, n)","round(unit, valuelessUnit)","round(unit, n, valuelessUnit)"],description:"round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",examples:["round(3.2)","round(3.8)","round(-4.2)","round(-4.8)","round(pi, 3)","round(123.45678, 2)","round(3.241cm, 2, cm)","round([3.2, 3.8, -4.7])"],seealso:["ceil","floor","fix"]},sign:{name:"sign",category:"Arithmetic",syntax:["sign(x)"],description:"Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",examples:["sign(3.5)","sign(-4.2)","sign(0)"],seealso:["abs"]},sqrt:{name:"sqrt",category:"Arithmetic",syntax:["sqrt(x)"],description:"Compute the square root value. If x = y * y, then y is the square root of x.",examples:["sqrt(25)","5 * 5","sqrt(-1)"],seealso:["square","sqrtm","multiply","nthRoot","nthRoots","pow"]},sqrtm:{name:"sqrtm",category:"Arithmetic",syntax:["sqrtm(x)"],description:"Calculate the principal square root of a square matrix. The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.",examples:["sqrtm([[33, 24], [48, 57]])"],seealso:["sqrt","abs","square","multiply"]},square:{name:"square",category:"Arithmetic",syntax:["square(x)"],description:"Compute the square of a value. The square of x is x * x.",examples:["square(3)","sqrt(9)","3^2","3 * 3"],seealso:["multiply","pow","sqrt","cube"]},subtract:{name:"subtract",category:"Operators",syntax:["x - y","subtract(x, y)"],description:"subtract two values.",examples:["a = 5.3 - 2","a + 2","2/3 - 1/6","2 * 3 - 3","2.1 km - 500m"],seealso:["add"]},unaryMinus:{name:"unaryMinus",category:"Operators",syntax:["-x","unaryMinus(x)"],description:"Inverse the sign of a value. Converts booleans and strings to numbers.",examples:["-4.5","-(-5.6)",'-"22"'],seealso:["add","subtract","unaryPlus"]},unaryPlus:{name:"unaryPlus",category:"Operators",syntax:["+x","unaryPlus(x)"],description:"Converts booleans and strings to numbers.",examples:["+true",'+"2"'],seealso:["add","subtract","unaryMinus"]},xgcd:{name:"xgcd",category:"Arithmetic",syntax:["xgcd(a, b)"],description:"Calculate the extended greatest common divisor for two values. The result is an array [d, x, y] with 3 entries, where d is the greatest common divisor, and d = x * a + y * b.",examples:["xgcd(8, 12)","gcd(8, 12)","xgcd(36163, 21199)"],seealso:["gcd","lcm"]},invmod:{name:"invmod",category:"Arithmetic",syntax:["invmod(a, b)"],description:"Calculate the (modular) multiplicative inverse of a modulo b. Solution to the equation ax ≣ 1 (mod b)",examples:["invmod(8, 12)","invmod(7, 13)","invmod(15151, 15122)"],seealso:["gcd","xgcd"]},bitAnd:{name:"bitAnd",category:"Bitwise",syntax:["x & y","bitAnd(x, y)"],description:"Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",examples:["5 & 3","bitAnd(53, 131)","[1, 12, 31] & 42"],seealso:["bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]},bitNot:{name:"bitNot",category:"Bitwise",syntax:["~x","bitNot(x)"],description:"Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",examples:["~1","~2","bitNot([2, -3, 4])"],seealso:["bitAnd","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]},bitOr:{name:"bitOr",category:"Bitwise",syntax:["x | y","bitOr(x, y)"],description:"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",examples:["5 | 3","bitOr([1, 2, 3], 4)"],seealso:["bitAnd","bitNot","bitXor","leftShift","rightArithShift","rightLogShift"]},bitXor:{name:"bitXor",category:"Bitwise",syntax:["bitXor(x, y)"],description:"Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",examples:["bitOr(1, 2)","bitXor([2, 3, 4], 4)"],seealso:["bitAnd","bitNot","bitOr","leftShift","rightArithShift","rightLogShift"]},leftShift:{name:"leftShift",category:"Bitwise",syntax:["x << y","leftShift(x, y)"],description:"Bitwise left logical shift of a value x by y number of bits.",examples:["4 << 1","8 >> 1"],seealso:["bitAnd","bitNot","bitOr","bitXor","rightArithShift","rightLogShift"]},rightArithShift:{name:"rightArithShift",category:"Bitwise",syntax:["x >> y","rightArithShift(x, y)"],description:"Bitwise right arithmetic shift of a value x by y number of bits.",examples:["8 >> 1","4 << 1","-12 >> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightLogShift"]},rightLogShift:{name:"rightLogShift",category:"Bitwise",syntax:["x >>> y","rightLogShift(x, y)"],description:"Bitwise right logical shift of a value x by y number of bits.",examples:["8 >>> 1","4 << 1","-12 >>> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift"]},bellNumbers:{name:"bellNumbers",category:"Combinatorics",syntax:["bellNumbers(n)"],description:"The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["bellNumbers(3)","bellNumbers(8)"],seealso:["stirlingS2"]},catalan:{name:"catalan",category:"Combinatorics",syntax:["catalan(n)"],description:"The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["catalan(3)","catalan(8)"],seealso:["bellNumbers"]},composition:{name:"composition",category:"Combinatorics",syntax:["composition(n, k)"],description:"The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",examples:["composition(5, 3)"],seealso:["combinations"]},stirlingS2:{name:"stirlingS2",category:"Combinatorics",syntax:["stirlingS2(n, k)"],description:"he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",examples:["stirlingS2(5, 3)"],seealso:["bellNumbers"]},config:{name:"config",category:"Core",syntax:["config()","config(options)"],description:"Get configuration or change configuration.",examples:["config()","1/3 + 1/4",'config({number: "Fraction"})',"1/3 + 1/4"],seealso:[]},import:{name:"import",category:"Core",syntax:["import(functions)","import(functions, options)"],description:"Import functions or constants from an object.",examples:["import({myFn: f(x)=x^2, myConstant: 32 })","myFn(2)","myConstant"],seealso:[]},typed:{name:"typed",category:"Core",syntax:["typed(signatures)","typed(name, signatures)"],description:"Create a typed function.",examples:['double = typed({ "number": f(x)=x+x, "string": f(x)=concat(x,x) })',"double(2)",'double("hello")'],seealso:[]},arg:{name:"arg",category:"Complex",syntax:["arg(x)"],description:"Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",examples:["arg(2 + 2i)","atan2(3, 2)","arg(2 + 3i)"],seealso:["re","im","conj","abs"]},conj:{name:"conj",category:"Complex",syntax:["conj(x)"],description:"Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",examples:["conj(2 + 3i)","conj(2 - 3i)","conj(-5.2i)"],seealso:["re","im","abs","arg"]},re:{name:"re",category:"Complex",syntax:["re(x)"],description:"Get the real part of a complex number.",examples:["re(2 + 3i)","im(2 + 3i)","re(-5.2i)","re(2.4)"],seealso:["im","conj","abs","arg"]},im:{name:"im",category:"Complex",syntax:["im(x)"],description:"Get the imaginary part of a complex number.",examples:["im(2 + 3i)","re(2 + 3i)","im(-5.2i)","im(2.4)"],seealso:["re","conj","abs","arg"]},evaluate:{name:"evaluate",category:"Expression",syntax:["evaluate(expression)","evaluate(expression, scope)","evaluate([expr1, expr2, expr3, ...])","evaluate([expr1, expr2, expr3, ...], scope)"],description:"Evaluate an expression or an array with expressions.",examples:['evaluate("2 + 3")','evaluate("sqrt(16)")','evaluate("2 inch to cm")','evaluate("sin(x * pi)", { "x": 1/2 })','evaluate(["width=2", "height=4","width*height"])'],seealso:[]},help:{name:"help",category:"Expression",syntax:["help(object)","help(string)"],description:"Display documentation on a function or data type.",examples:["help(sqrt)",'help("complex")'],seealso:[]},distance:{name:"distance",category:"Geometry",syntax:["distance([x1, y1], [x2, y2])","distance([[x1, y1], [x2, y2]])"],description:"Calculates the Euclidean distance between two points.",examples:["distance([0,0], [4,4])","distance([[0,0], [4,4]])"],seealso:[]},intersect:{name:"intersect",category:"Geometry",syntax:["intersect(expr1, expr2, expr3, expr4)","intersect(expr1, expr2, expr3)"],description:"Computes the intersection point of lines and/or planes.",examples:["intersect([0, 0], [10, 10], [10, 0], [0, 10])","intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])"],seealso:[]},and:{name:"and",category:"Logical",syntax:["x and y","and(x, y)"],description:"Logical and. Test whether two values are both defined with a nonzero/nonempty value.",examples:["true and false","true and true","2 and 4"],seealso:["not","or","xor"]},not:{name:"not",category:"Logical",syntax:["not x","not(x)"],description:"Logical not. Flips the boolean value of given argument.",examples:["not true","not false","not 2","not 0"],seealso:["and","or","xor"]},or:{name:"or",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical or. Test if at least one value is defined with a nonzero/nonempty value.",examples:["true or false","false or false","0 or 4"],seealso:["not","and","xor"]},xor:{name:"xor",category:"Logical",syntax:["x xor y","xor(x, y)"],description:"Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",examples:["true xor false","false xor false","true xor true","0 xor 4"],seealso:["not","and","or"]},concat:{name:"concat",category:"Matrix",syntax:["concat(A, B, C, ...)","concat(A, B, C, ..., dim)"],description:"Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",examples:["A = [1, 2; 5, 6]","B = [3, 4; 7, 8]","concat(A, B)","concat(A, B, 1)","concat(A, B, 2)"],seealso:["det","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},count:{name:"count",category:"Matrix",syntax:["count(x)"],description:"Count the number of elements of a matrix, array or string.",examples:["a = [1, 2; 3, 4; 5, 6]","count(a)","size(a)",'count("hello world")'],seealso:["size"]},cross:{name:"cross",category:"Matrix",syntax:["cross(A, B)"],description:"Calculate the cross product for two vectors in three dimensional space.",examples:["cross([1, 1, 0],  [0, 1, 1])","cross([3, -3, 1], [4, 9, 2])","cross([2, 3, 4],  [5, 6, 7])"],seealso:["multiply","dot"]},column:{name:"column",category:"Matrix",syntax:["column(x, index)"],description:"Return a column from a matrix or array.",examples:["A = [[1, 2], [3, 4]]","column(A, 1)","column(A, 2)"],seealso:["row","matrixFromColumns"]},ctranspose:{name:"ctranspose",category:"Matrix",syntax:["x'","ctranspose(x)"],description:"Complex Conjugate and Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","ctranspose(a)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","zeros"]},det:{name:"det",category:"Matrix",syntax:["det(x)"],description:"Calculate the determinant of a matrix",examples:["det([1, 2; 3, 4])","det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],seealso:["concat","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},diag:{name:"diag",category:"Matrix",syntax:["diag(x)","diag(x, k)"],description:"Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",examples:["diag(1:3)","diag(1:3, 1)","a = [1, 2, 3; 4, 5, 6; 7, 8, 9]","diag(a)"],seealso:["concat","det","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},diff:{name:"diff",category:"Matrix",syntax:["diff(arr)","diff(arr, dim)"],description:["Create a new matrix or array with the difference of the passed matrix or array.","Dim parameter is optional and used to indicant the dimension of the array/matrix to apply the difference","If no dimension parameter is passed it is assumed as dimension 0","Dimension is zero-based in javascript and one-based in the parser","Arrays must be 'rectangular' meaning arrays like [1, 2]","If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays"],examples:["A = [1, 2, 4, 7, 0]","diff(A)","diff(A, 1)","B = [[1, 2], [3, 4]]","diff(B)","diff(B, 1)","diff(B, 2)","diff(B, bignumber(2))","diff([[1, 2], matrix([3, 4])], 2)"],seealso:["subtract","partitionSelect"]},dot:{name:"dot",category:"Matrix",syntax:["dot(A, B)","A * B"],description:"Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",examples:["dot([2, 4, 1], [2, 2, 3])","[2, 4, 1] * [2, 2, 3]"],seealso:["multiply","cross"]},getMatrixDataType:{name:"getMatrixDataType",category:"Matrix",syntax:["getMatrixDataType(x)"],description:'Find the data type of all elements in a matrix or array, for example "number" if all items are a number and "Complex" if all values are complex numbers. If a matrix contains more than one data type, it will return "mixed".',examples:["getMatrixDataType([1, 2, 3])","getMatrixDataType([[5 cm], [2 inch]])",'getMatrixDataType([1, "text"])',"getMatrixDataType([1, bignumber(4)])"],seealso:["matrix","sparse","typeOf"]},identity:{name:"identity",category:"Matrix",syntax:["identity(n)","identity(m, n)","identity([m, n])"],description:"Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",examples:["identity(3)","identity(3, 5)","a = [1, 2, 3; 4, 5, 6]","identity(size(a))"],seealso:["concat","det","diag","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},filter:{name:"filter",category:"Matrix",syntax:["filter(x, test)"],description:"Filter items in a matrix.",examples:["isPositive(x) = x > 0","filter([6, -2, -1, 4, 3], isPositive)","filter([6, -2, 0, 1, 0], x != 0)"],seealso:["sort","map","forEach"]},flatten:{name:"flatten",category:"Matrix",syntax:["flatten(x)"],description:"Flatten a multi dimensional matrix into a single dimensional matrix.",examples:["a = [1, 2, 3; 4, 5, 6]","size(a)","b = flatten(a)","size(b)"],seealso:["concat","resize","size","squeeze"]},forEach:{name:"forEach",category:"Matrix",syntax:["forEach(x, callback)"],description:"Iterates over all elements of a matrix/array, and executes the given callback function.",examples:["numberOfPets = {}","addPet(n) = numberOfPets[n] = (numberOfPets[n] ? numberOfPets[n]:0 ) + 1;",'forEach(["Dog","Cat","Cat"], addPet)',"numberOfPets"],seealso:["map","sort","filter"]},inv:{name:"inv",category:"Matrix",syntax:["inv(x)"],description:"Calculate the inverse of a matrix",examples:["inv([1, 2; 3, 4])","inv(4)","1 / 4"],seealso:["concat","det","diag","identity","ones","range","size","squeeze","subset","trace","transpose","zeros"]},pinv:{name:"pinv",category:"Matrix",syntax:["pinv(x)"],description:"Calculate the Moore–Penrose inverse of a matrix",examples:["pinv([1, 2; 3, 4])","pinv([[1, 0], [0, 1], [0, 1]])","pinv(4)"],seealso:["inv"]},eigs:{name:"eigs",category:"Matrix",syntax:["eigs(x)"],description:"Calculate the eigenvalues and optionally eigenvectors of a square matrix",examples:["eigs([[5, 2.3], [2.3, 1]])","eigs([[1, 2, 3], [4, 5, 6], [7, 8, 9]], { precision: 1e-6, eigenvectors: false })"],seealso:["inv"]},kron:{name:"kron",category:"Matrix",syntax:["kron(x, y)"],description:"Calculates the kronecker product of 2 matrices or vectors.",examples:["kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])","kron([1,1], [2,3,4])"],seealso:["multiply","dot","cross"]},matrixFromFunction:{name:"matrixFromFunction",category:"Matrix",syntax:["matrixFromFunction(size, fn)","matrixFromFunction(size, fn, format)","matrixFromFunction(size, fn, format, datatype)","matrixFromFunction(size, format, fn)","matrixFromFunction(size, format, datatype, fn)"],description:"Create a matrix by evaluating a generating function at each index.",examples:["f(I) = I[1] - I[2]","matrixFromFunction([3,3], f)","g(I) = I[1] - I[2] == 1 ? 4 : 0",'matrixFromFunction([100, 100], "sparse", g)',"matrixFromFunction([5], random)"],seealso:["matrix","matrixFromRows","matrixFromColumns","zeros"]},matrixFromRows:{name:"matrixFromRows",category:"Matrix",syntax:["matrixFromRows(...arr)","matrixFromRows(row1, row2)","matrixFromRows(row1, row2, row3)"],description:"Create a dense matrix from vectors as individual rows.",examples:["matrixFromRows([1, 2, 3], [[4],[5],[6]])"],seealso:["matrix","matrixFromColumns","matrixFromFunction","zeros"]},matrixFromColumns:{name:"matrixFromColumns",category:"Matrix",syntax:["matrixFromColumns(...arr)","matrixFromColumns(row1, row2)","matrixFromColumns(row1, row2, row3)"],description:"Create a dense matrix from vectors as individual columns.",examples:["matrixFromColumns([1, 2, 3], [[4],[5],[6]])"],seealso:["matrix","matrixFromRows","matrixFromFunction","zeros"]},map:{name:"map",category:"Matrix",syntax:["map(x, callback)"],description:"Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",examples:["map([1, 2, 3], square)"],seealso:["filter","forEach"]},ones:{name:"ones",category:"Matrix",syntax:["ones(m)","ones(m, n)","ones(m, n, p, ...)","ones([m])","ones([m, n])","ones([m, n, p, ...])"],description:"Create a matrix containing ones.",examples:["ones(3)","ones(3, 5)","ones([2,3]) * 4.5","a = [1, 2, 3; 4, 5, 6]","ones(size(a))"],seealso:["concat","det","diag","identity","inv","range","size","squeeze","subset","trace","transpose","zeros"]},partitionSelect:{name:"partitionSelect",category:"Matrix",syntax:["partitionSelect(x, k)","partitionSelect(x, k, compare)"],description:"Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",examples:["partitionSelect([5, 10, 1], 2)",'partitionSelect(["C", "B", "A", "D"], 1, compareText)',"arr = [5, 2, 1]","partitionSelect(arr, 0) # returns 1, arr is now: [1, 2, 5]","arr","partitionSelect(arr, 1, 'desc') # returns 2, arr is now: [5, 2, 1]","arr"],seealso:["sort"]},range:{name:"range",category:"Type",syntax:["start:end","start:step:end","range(start, end)","range(start, end, step)","range(string)"],description:"Create a range. Lower bound of the range is included, upper bound is excluded.",examples:["1:5","3:-1:-3","range(3, 7)","range(0, 12, 2)",'range("4:10")',"range(1m, 1m, 3m)","a = [1, 2, 3, 4; 5, 6, 7, 8]","a[1:2, 1:2]"],seealso:["concat","det","diag","identity","inv","ones","size","squeeze","subset","trace","transpose","zeros"]},resize:{name:"resize",category:"Matrix",syntax:["resize(x, size)","resize(x, size, defaultValue)"],description:"Resize a matrix.",examples:["resize([1,2,3,4,5], [3])","resize([1,2,3], [5])","resize([1,2,3], [5], -1)","resize(2, [2, 3])",'resize("hello", [8], "!")'],seealso:["size","subset","squeeze","reshape"]},reshape:{name:"reshape",category:"Matrix",syntax:["reshape(x, sizes)"],description:"Reshape a multi dimensional array to fit the specified dimensions.",examples:["reshape([1, 2, 3, 4, 5, 6], [2, 3])","reshape([[1, 2], [3, 4]], [1, 4])","reshape([[1, 2], [3, 4]], [4])","reshape([1, 2, 3, 4], [-1, 2])"],seealso:["size","squeeze","resize"]},rotate:{name:"rotate",category:"Matrix",syntax:["rotate(w, theta)","rotate(w, theta, v)"],description:"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",examples:["rotate([1, 0], pi / 2)",'rotate(matrix([1, 0]), unit("35deg"))','rotate([1, 0, 0], unit("90deg"), [0, 0, 1])','rotate(matrix([1, 0, 0]), unit("90deg"), matrix([0, 0, 1]))'],seealso:["matrix","rotationMatrix"]},rotationMatrix:{name:"rotationMatrix",category:"Matrix",syntax:["rotationMatrix(theta)","rotationMatrix(theta, v)","rotationMatrix(theta, v, format)"],description:"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",examples:["rotationMatrix(pi / 2)",'rotationMatrix(unit("45deg"), [0, 0, 1])','rotationMatrix(1, matrix([0, 0, 1]), "sparse")'],seealso:["cos","sin"]},row:{name:"row",category:"Matrix",syntax:["row(x, index)"],description:"Return a row from a matrix or array.",examples:["A = [[1, 2], [3, 4]]","row(A, 1)","row(A, 2)"],seealso:["column","matrixFromRows"]},size:{name:"size",category:"Matrix",syntax:["size(x)"],description:"Calculate the size of a matrix.",examples:["size(2.3)",'size("hello world")',"a = [1, 2; 3, 4; 5, 6]","size(a)","size(1:6)"],seealso:["concat","count","det","diag","identity","inv","ones","range","squeeze","subset","trace","transpose","zeros"]},sort:{name:"sort",category:"Matrix",syntax:["sort(x)","sort(x, compare)"],description:'Sort the items in a matrix. Compare can be a string "asc", "desc", "natural", or a custom sort function.',examples:["sort([5, 10, 1])",'sort(["C", "B", "A", "D"], "natural")',"sortByLength(a, b) = size(a)[1] - size(b)[1]",'sort(["Langdon", "Tom", "Sara"], sortByLength)','sort(["10", "1", "2"], "natural")'],seealso:["map","filter","forEach"]},squeeze:{name:"squeeze",category:"Matrix",syntax:["squeeze(x)"],description:"Remove inner and outer singleton dimensions from a matrix.",examples:["a = zeros(3,2,1)","size(squeeze(a))","b = zeros(1,1,3)","size(squeeze(b))"],seealso:["concat","det","diag","identity","inv","ones","range","size","subset","trace","transpose","zeros"]},subset:{name:"subset",category:"Matrix",syntax:["value(index)","value(index) = replacement","subset(value, [index])","subset(value, [index], replacement)"],description:"Get or set a subset of the entries of a matrix or characters of a string. Indexes are one-based. There should be one index specification for each dimension of the target. Each specification can be a single index, a list of indices, or a range in colon notation `l:u`. In a range, both the lower bound l and upper bound u are included; and if a bound is omitted it defaults to the most extreme valid value. The cartesian product of the indices specified in each dimension determines the target of the operation.",examples:["d = [1, 2; 3, 4]","e = []","e[1, 1:2] = [5, 6]","e[2, :] = [7, 8]","f = d * e","f[2, 1]","f[:, 1]","f[[1,2], [1,3]] = [9, 10; 11, 12]","f"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","trace","transpose","zeros"]},trace:{name:"trace",category:"Matrix",syntax:["trace(A)"],description:"Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",examples:["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]","trace(A)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","transpose","zeros"]},transpose:{name:"transpose",category:"Matrix",syntax:["x'","transpose(x)"],description:"Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","transpose(a)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","zeros"]},zeros:{name:"zeros",category:"Matrix",syntax:["zeros(m)","zeros(m, n)","zeros(m, n, p, ...)","zeros([m])","zeros([m, n])","zeros([m, n, p, ...])"],description:"Create a matrix containing zeros.",examples:["zeros(3)","zeros(3, 5)","a = [1, 2, 3; 4, 5, 6]","zeros(size(a))"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose"]},fft:{name:"fft",category:"Matrix",syntax:["fft(x)"],description:"Calculate N-dimensional fourier transform",examples:["fft([[1, 0], [1, 0]])"],seealso:["ifft"]},ifft:{name:"ifft",category:"Matrix",syntax:["ifft(x)"],description:"Calculate N-dimensional inverse fourier transform",examples:["ifft([[2, 2], [0, 0]])"],seealso:["fft"]},sylvester:{name:"sylvester",category:"Algebra",syntax:["sylvester(A,B,C)"],description:"Solves the real-valued Sylvester equation AX+XB=C for X",examples:["sylvester([[-1, -2], [1, 1]], [[-2, 1], [-1, 2]], [[-3, 2], [3, 0]])","A = [[-1, -2], [1, 1]]; B = [[2, -1], [1, -2]]; C = [[-3, 2], [3, 0]]","sylvester(A, B, C)"],seealso:["schur","lyap"]},schur:{name:"schur",category:"Algebra",syntax:["schur(A)"],description:"Performs a real Schur decomposition of the real matrix A = UTU'",examples:["schur([[1, 0], [-4, 3]])","A = [[1, 0], [-4, 3]]","schur(A)"],seealso:["lyap","sylvester"]},lyap:{name:"lyap",category:"Algebra",syntax:["lyap(A,Q)"],description:"Solves the Continuous-time Lyapunov equation AP+PA'+Q=0 for P",examples:["lyap([[-2, 0], [1, -4]], [[3, 1], [1, 3]])","A = [[-2, 0], [1, -4]]","Q = [[3, 1], [1, 3]]","lyap(A,Q)"],seealso:["schur","sylvester"]},solveODE:{name:"solveODE",category:"Numeric",syntax:["solveODE(func, tspan, y0)","solveODE(func, tspan, y0, options)"],description:"Numerical Integration of Ordinary Differential Equations.",examples:["f(t,y) = y","tspan = [0, 4]","solveODE(f, tspan, 1)","solveODE(f, tspan, [1, 2])",'solveODE(f, tspan, 1, { method:"RK23", maxStep:0.1 })'],seealso:["derivative","simplifyCore"]},combinations:{name:"combinations",category:"Probability",syntax:["combinations(n, k)"],description:"Compute the number of combinations of n items taken k at a time",examples:["combinations(7, 5)"],seealso:["combinationsWithRep","permutations","factorial"]},combinationsWithRep:{name:"combinationsWithRep",category:"Probability",syntax:["combinationsWithRep(n, k)"],description:"Compute the number of combinations of n items taken k at a time with replacements.",examples:["combinationsWithRep(7, 5)"],seealso:["combinations","permutations","factorial"]},factorial:{name:"factorial",category:"Probability",syntax:["n!","factorial(n)"],description:"Compute the factorial of a value",examples:["5!","5 * 4 * 3 * 2 * 1","3!"],seealso:["combinations","combinationsWithRep","permutations","gamma"]},gamma:{name:"gamma",category:"Probability",syntax:["gamma(n)"],description:"Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",examples:["gamma(4)","3!","gamma(1/2)","sqrt(pi)"],seealso:["factorial"]},kldivergence:{name:"kldivergence",category:"Probability",syntax:["kldivergence(x, y)"],description:"Calculate the Kullback-Leibler (KL) divergence  between two distributions.",examples:["kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],seealso:[]},lgamma:{name:"lgamma",category:"Probability",syntax:["lgamma(n)"],description:"Logarithm of the gamma function for real, positive numbers and complex numbers, using Lanczos approximation for numbers and Stirling series for complex numbers.",examples:["lgamma(4)","lgamma(1/2)","lgamma(i)","lgamma(complex(1.1, 2))"],seealso:["gamma"]},multinomial:{name:"multinomial",category:"Probability",syntax:["multinomial(A)"],description:"Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.",examples:["multinomial([1, 2, 1])"],seealso:["combinations","factorial"]},permutations:{name:"permutations",category:"Probability",syntax:["permutations(n)","permutations(n, k)"],description:"Compute the number of permutations of n items taken k at a time",examples:["permutations(5)","permutations(5, 3)"],seealso:["combinations","combinationsWithRep","factorial"]},pickRandom:{name:"pickRandom",category:"Probability",syntax:["pickRandom(array)","pickRandom(array, number)","pickRandom(array, weights)","pickRandom(array, number, weights)","pickRandom(array, weights, number)"],description:"Pick a random entry from a given array.",examples:["pickRandom(0:10)","pickRandom([1, 3, 1, 6])","pickRandom([1, 3, 1, 6], 2)","pickRandom([1, 3, 1, 6], [2, 3, 2, 1])","pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])","pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)"],seealso:["random","randomInt"]},random:{name:"random",category:"Probability",syntax:["random()","random(max)","random(min, max)","random(size)","random(size, max)","random(size, min, max)"],description:"Return a random number.",examples:["random()","random(10, 20)","random([2, 3])"],seealso:["pickRandom","randomInt"]},randomInt:{name:"randomInt",category:"Probability",syntax:["randomInt(max)","randomInt(min, max)","randomInt(size)","randomInt(size, max)","randomInt(size, min, max)"],description:"Return a random integer number",examples:["randomInt(10, 20)","randomInt([2, 3], 10)"],seealso:["pickRandom","random"]},compare:{name:"compare",category:"Relational",syntax:["compare(x, y)"],description:"Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:["compare(2, 3)","compare(3, 2)","compare(2, 2)","compare(5cm, 40mm)","compare(2, [1, 2, 3])"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compareNatural","compareText"]},compareNatural:{name:"compareNatural",category:"Relational",syntax:["compareNatural(x, y)"],description:"Compare two values of any type in a deterministic, natural way. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:["compareNatural(2, 3)","compareNatural(3, 2)","compareNatural(2, 2)","compareNatural(5cm, 40mm)",'compareNatural("2", "10")',"compareNatural(2 + 3i, 2 + 4i)","compareNatural([1, 2, 4], [1, 2, 3])","compareNatural([1, 5], [1, 2, 3])","compareNatural([1, 2], [1, 2])","compareNatural({a: 2}, {a: 4})"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare","compareText"]},compareText:{name:"compareText",category:"Relational",syntax:["compareText(x, y)"],description:"Compare two strings lexically. Comparison is case sensitive. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:['compareText("B", "A")','compareText("A", "B")','compareText("A", "A")','compareText("2", "10")','compare("2", "10")',"compare(2, 10)",'compareNatural("2", "10")','compareText("B", ["A", "B", "C"])'],seealso:["compare","compareNatural"]},deepEqual:{name:"deepEqual",category:"Relational",syntax:["deepEqual(x, y)"],description:"Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",examples:["deepEqual([1,3,4], [1,3,4])","deepEqual([1,3,4], [1,3])"],seealso:["equal","unequal","smaller","larger","smallerEq","largerEq","compare"]},equal:{name:"equal",category:"Relational",syntax:["x == y","equal(x, y)"],description:"Check equality of two values. Returns true if the values are equal, and false if not.",examples:["2+2 == 3","2+2 == 4","a = 3.2","b = 6-2.8","a == b","50cm == 0.5m"],seealso:["unequal","smaller","larger","smallerEq","largerEq","compare","deepEqual","equalText"]},equalText:{name:"equalText",category:"Relational",syntax:["equalText(x, y)"],description:"Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.",examples:['equalText("Hello", "Hello")','equalText("a", "A")','equal("2e3", "2000")','equalText("2e3", "2000")','equalText("B", ["A", "B", "C"])'],seealso:["compare","compareNatural","compareText","equal"]},larger:{name:"larger",category:"Relational",syntax:["x > y","larger(x, y)"],description:"Check if value x is larger than y. Returns true if x is larger than y, and false if not.",examples:["2 > 3","5 > 2*2","a = 3.3","b = 6-2.8","(a > b)","(b < a)","5 cm > 2 inch"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare"]},largerEq:{name:"largerEq",category:"Relational",syntax:["x >= y","largerEq(x, y)"],description:"Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",examples:["2 >= 1+1","2 > 1+1","a = 3.2","b = 6-2.8","(a >= b)"],seealso:["equal","unequal","smallerEq","smaller","compare"]},smaller:{name:"smaller",category:"Relational",syntax:["x < y","smaller(x, y)"],description:"Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 3","5 < 2*2","a = 3.3","b = 6-2.8","(a < b)","5 cm < 2 inch"],seealso:["equal","unequal","larger","smallerEq","largerEq","compare"]},smallerEq:{name:"smallerEq",category:"Relational",syntax:["x <= y","smallerEq(x, y)"],description:"Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",examples:["2 <= 1+1","2 < 1+1","a = 3.2","b = 6-2.8","(a <= b)"],seealso:["equal","unequal","larger","smaller","largerEq","compare"]},unequal:{name:"unequal",category:"Relational",syntax:["x != y","unequal(x, y)"],description:"Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",examples:["2+2 != 3","2+2 != 4","a = 3.2","b = 6-2.8","a != b","50cm != 0.5m","5 cm != 2 inch"],seealso:["equal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]},setCartesian:{name:"setCartesian",category:"Set",syntax:["setCartesian(set1, set2)"],description:"Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays and the values will be sorted in ascending order before the operation.",examples:["setCartesian([1, 2], [3, 4])"],seealso:["setUnion","setIntersect","setDifference","setPowerset"]},setDifference:{name:"setDifference",category:"Set",syntax:["setDifference(set1, set2)"],description:"Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setDifference([1, 2, 3, 4], [3, 4, 5, 6])","setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setIntersect","setSymDifference"]},setDistinct:{name:"setDistinct",category:"Set",syntax:["setDistinct(set)"],description:"Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setDistinct([1, 1, 1, 2, 2, 3])"],seealso:["setMultiplicity"]},setIntersect:{name:"setIntersect",category:"Set",syntax:["setIntersect(set1, set2)"],description:"Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setIntersect([1, 2, 3, 4], [3, 4, 5, 6])","setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setDifference"]},setIsSubset:{name:"setIsSubset",category:"Set",syntax:["setIsSubset(set1, set2)"],description:"Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setIsSubset([1, 2], [3, 4, 5, 6])","setIsSubset([3, 4], [3, 4, 5, 6])"],seealso:["setUnion","setIntersect","setDifference"]},setMultiplicity:{name:"setMultiplicity",category:"Set",syntax:["setMultiplicity(element, set)"],description:"Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setMultiplicity(1, [1, 2, 2, 4])","setMultiplicity(2, [1, 2, 2, 4])"],seealso:["setDistinct","setSize"]},setPowerset:{name:"setPowerset",category:"Set",syntax:["setPowerset(set)"],description:"Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setPowerset([1, 2, 3])"],seealso:["setCartesian"]},setSize:{name:"setSize",category:"Set",syntax:["setSize(set)","setSize(set, unique)"],description:'Count the number of elements of a (multi)set. When the second parameter "unique" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',examples:["setSize([1, 2, 2, 4])","setSize([1, 2, 2, 4], true)"],seealso:["setUnion","setIntersect","setDifference"]},setSymDifference:{name:"setSymDifference",category:"Set",syntax:["setSymDifference(set1, set2)"],description:"Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])","setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setIntersect","setDifference"]},setUnion:{name:"setUnion",category:"Set",syntax:["setUnion(set1, set2)"],description:"Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setUnion([1, 2, 3, 4], [3, 4, 5, 6])","setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setIntersect","setDifference"]},zpk2tf:{name:"zpk2tf",category:"Signal",syntax:["zpk2tf(z, p, k)"],description:"Compute the transfer function of a zero-pole-gain model.",examples:["zpk2tf([1, 2], [-1, -2], 1)","zpk2tf([1, 2], [-1, -2])","zpk2tf([1 - 3i, 2 + 2i], [-1, -2])"],seealso:[]},freqz:{name:"freqz",category:"Signal",syntax:["freqz(b, a)","freqz(b, a, w)"],description:"Calculates the frequency response of a filter given its numerator and denominator coefficients.",examples:["freqz([1, 2], [1, 2, 3])","freqz([1, 2], [1, 2, 3], [0, 1])","freqz([1, 2], [1, 2, 3], 512)"],seealso:[]},erf:{name:"erf",category:"Special",syntax:["erf(x)"],description:"Compute the erf function of a value using a rational Chebyshev approximations for different intervals of x",examples:["erf(0.2)","erf(-0.5)","erf(4)"],seealso:[]},zeta:{name:"zeta",category:"Special",syntax:["zeta(s)"],description:"Compute the Riemann Zeta Function using an infinite series and Riemanns Functional Equation for the entire complex plane",examples:["zeta(0.2)","zeta(-0.5)","zeta(4)"],seealso:[]},cumsum:{name:"cumsum",category:"Statistics",syntax:["cumsum(a, b, c, ...)","cumsum(A)"],description:"Compute the cumulative sum of all values.",examples:["cumsum(2, 3, 4, 1)","cumsum([2, 3, 4, 1])","cumsum([1, 2; 3, 4])","cumsum([1, 2; 3, 4], 1)","cumsum([1, 2; 3, 4], 2)"],seealso:["max","mean","median","min","prod","std","sum","variance"]},mad:{name:"mad",category:"Statistics",syntax:["mad(a, b, c, ...)","mad(A)"],description:"Compute the median absolute deviation of a matrix or a list with values. The median absolute deviation is defined as the median of the absolute deviations from the median.",examples:["mad(10, 20, 30)","mad([1, 2, 3])"],seealso:["mean","median","std","abs"]},max:{name:"max",category:"Statistics",syntax:["max(a, b, c, ...)","max(A)","max(A, dimension)"],description:"Compute the maximum value of a list of values.",examples:["max(2, 3, 4, 1)","max([2, 3, 4, 1])","max([2, 5; 4, 3])","max([2, 5; 4, 3], 1)","max([2, 5; 4, 3], 2)","max(2.7, 7.1, -4.5, 2.0, 4.1)","min(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["mean","median","min","prod","std","sum","variance"]},mean:{name:"mean",category:"Statistics",syntax:["mean(a, b, c, ...)","mean(A)","mean(A, dimension)"],description:"Compute the arithmetic mean of a list of values.",examples:["mean(2, 3, 4, 1)","mean([2, 3, 4, 1])","mean([2, 5; 4, 3])","mean([2, 5; 4, 3], 1)","mean([2, 5; 4, 3], 2)","mean([1.0, 2.7, 3.2, 4.0])"],seealso:["max","median","min","prod","std","sum","variance"]},median:{name:"median",category:"Statistics",syntax:["median(a, b, c, ...)","median(A)"],description:"Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",examples:["median(5, 2, 7)","median([3, -1, 5, 7])"],seealso:["max","mean","min","prod","std","sum","variance","quantileSeq"]},min:{name:"min",category:"Statistics",syntax:["min(a, b, c, ...)","min(A)","min(A, dimension)"],description:"Compute the minimum value of a list of values.",examples:["min(2, 3, 4, 1)","min([2, 3, 4, 1])","min([2, 5; 4, 3])","min([2, 5; 4, 3], 1)","min([2, 5; 4, 3], 2)","min(2.7, 7.1, -4.5, 2.0, 4.1)","max(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["max","mean","median","prod","std","sum","variance"]},mode:{name:"mode",category:"Statistics",syntax:["mode(a, b, c, ...)","mode(A)","mode(A, a, b, B, c, ...)"],description:"Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",examples:["mode(2, 1, 4, 3, 1)","mode([1, 2.7, 3.2, 4, 2.7])","mode(1, 4, 6, 1, 6)"],seealso:["max","mean","min","median","prod","std","sum","variance"]},prod:{name:"prod",category:"Statistics",syntax:["prod(a, b, c, ...)","prod(A)"],description:"Compute the product of all values.",examples:["prod(2, 3, 4)","prod([2, 3, 4])","prod([2, 5; 4, 3])"],seealso:["max","mean","min","median","min","std","sum","variance"]},quantileSeq:{name:"quantileSeq",category:"Statistics",syntax:["quantileSeq(A, prob[, sorted])","quantileSeq(A, [prob1, prob2, ...][, sorted])","quantileSeq(A, N[, sorted])"],description:"Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.",examples:["quantileSeq([3, -1, 5, 7], 0.5)","quantileSeq([3, -1, 5, 7], [1/3, 2/3])","quantileSeq([3, -1, 5, 7], 2)","quantileSeq([-1, 3, 5, 7], 0.5, true)"],seealso:["mean","median","min","max","prod","std","sum","variance"]},std:{name:"std",category:"Statistics",syntax:["std(a, b, c, ...)","std(A)","std(A, dimension)","std(A, normalization)","std(A, dimension, normalization)"],description:'Compute the standard deviation of all values, defined as std(A) = sqrt(variance(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["std(2, 4, 6)","std([2, 4, 6, 8])",'std([2, 4, 6, 8], "uncorrected")','std([2, 4, 6, 8], "biased")',"std([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","prod","sum","variance"]},sum:{name:"sum",category:"Statistics",syntax:["sum(a, b, c, ...)","sum(A)","sum(A, dimension)"],description:"Compute the sum of all values.",examples:["sum(2, 3, 4, 1)","sum([2, 3, 4, 1])","sum([2, 5; 4, 3])"],seealso:["max","mean","median","min","prod","std","sum","variance"]},variance:{name:"variance",category:"Statistics",syntax:["variance(a, b, c, ...)","variance(A)","variance(A, dimension)","variance(A, normalization)","variance(A, dimension, normalization)"],description:'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["variance(2, 4, 6)","variance([2, 4, 6, 8])",'variance([2, 4, 6, 8], "uncorrected")','variance([2, 4, 6, 8], "biased")',"variance([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","std","sum"]},corr:{name:"corr",category:"Statistics",syntax:["corr(A,B)"],description:"Compute the correlation coefficient of a two list with values, For matrices, the matrix correlation coefficient is calculated.",examples:["corr([2, 4, 6, 8],[1, 2, 3, 6])","corr(matrix([[1, 2.2, 3, 4.8, 5], [1, 2, 3, 4, 5]]), matrix([[4, 5.3, 6.6, 7, 8], [1, 2, 3, 4, 5]]))"],seealso:["max","mean","min","median","min","prod","std","sum"]},acos:{name:"acos",category:"Trigonometry",syntax:["acos(x)"],description:"Compute the inverse cosine of a value in radians.",examples:["acos(0.5)","acos(cos(2.3))"],seealso:["cos","atan","asin"]},acosh:{name:"acosh",category:"Trigonometry",syntax:["acosh(x)"],description:"Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",examples:["acosh(1.5)"],seealso:["cosh","asinh","atanh"]},acot:{name:"acot",category:"Trigonometry",syntax:["acot(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acot(0.5)","acot(cot(0.5))","acot(2)"],seealso:["cot","atan"]},acoth:{name:"acoth",category:"Trigonometry",syntax:["acoth(x)"],description:"Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",examples:["acoth(2)","acoth(0.5)"],seealso:["acsch","asech"]},acsc:{name:"acsc",category:"Trigonometry",syntax:["acsc(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acsc(2)","acsc(csc(0.5))","acsc(0.5)"],seealso:["csc","asin","asec"]},acsch:{name:"acsch",category:"Trigonometry",syntax:["acsch(x)"],description:"Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",examples:["acsch(0.5)"],seealso:["asech","acoth"]},asec:{name:"asec",category:"Trigonometry",syntax:["asec(x)"],description:"Calculate the inverse secant of a value.",examples:["asec(0.5)","asec(sec(0.5))","asec(2)"],seealso:["acos","acot","acsc"]},asech:{name:"asech",category:"Trigonometry",syntax:["asech(x)"],description:"Calculate the inverse secant of a value.",examples:["asech(0.5)"],seealso:["acsch","acoth"]},asin:{name:"asin",category:"Trigonometry",syntax:["asin(x)"],description:"Compute the inverse sine of a value in radians.",examples:["asin(0.5)","asin(sin(0.5))"],seealso:["sin","acos","atan"]},asinh:{name:"asinh",category:"Trigonometry",syntax:["asinh(x)"],description:"Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",examples:["asinh(0.5)"],seealso:["acosh","atanh"]},atan:{name:"atan",category:"Trigonometry",syntax:["atan(x)"],description:"Compute the inverse tangent of a value in radians.",examples:["atan(0.5)","atan(tan(0.5))"],seealso:["tan","acos","asin"]},atanh:{name:"atanh",category:"Trigonometry",syntax:["atanh(x)"],description:"Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",examples:["atanh(0.5)"],seealso:["acosh","asinh"]},atan2:{name:"atan2",category:"Trigonometry",syntax:["atan2(y, x)"],description:"Computes the principal value of the arc tangent of y/x in radians.",examples:["atan2(2, 2) / pi","angle = 60 deg in rad","x = cos(angle)","y = sin(angle)","atan2(y, x)"],seealso:["sin","cos","tan"]},cos:{name:"cos",category:"Trigonometry",syntax:["cos(x)"],description:"Compute the cosine of x in radians.",examples:["cos(2)","cos(pi / 4) ^ 2","cos(180 deg)","cos(60 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["acos","sin","tan"]},cosh:{name:"cosh",category:"Trigonometry",syntax:["cosh(x)"],description:"Compute the hyperbolic cosine of x in radians.",examples:["cosh(0.5)"],seealso:["sinh","tanh","coth"]},cot:{name:"cot",category:"Trigonometry",syntax:["cot(x)"],description:"Compute the cotangent of x in radians. Defined as 1/tan(x)",examples:["cot(2)","1 / tan(2)"],seealso:["sec","csc","tan"]},coth:{name:"coth",category:"Trigonometry",syntax:["coth(x)"],description:"Compute the hyperbolic cotangent of x in radians.",examples:["coth(2)","1 / tanh(2)"],seealso:["sech","csch","tanh"]},csc:{name:"csc",category:"Trigonometry",syntax:["csc(x)"],description:"Compute the cosecant of x in radians. Defined as 1/sin(x)",examples:["csc(2)","1 / sin(2)"],seealso:["sec","cot","sin"]},csch:{name:"csch",category:"Trigonometry",syntax:["csch(x)"],description:"Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",examples:["csch(2)","1 / sinh(2)"],seealso:["sech","coth","sinh"]},sec:{name:"sec",category:"Trigonometry",syntax:["sec(x)"],description:"Compute the secant of x in radians. Defined as 1/cos(x)",examples:["sec(2)","1 / cos(2)"],seealso:["cot","csc","cos"]},sech:{name:"sech",category:"Trigonometry",syntax:["sech(x)"],description:"Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",examples:["sech(2)","1 / cosh(2)"],seealso:["coth","csch","cosh"]},sin:{name:"sin",category:"Trigonometry",syntax:["sin(x)"],description:"Compute the sine of x in radians.",examples:["sin(2)","sin(pi / 4) ^ 2","sin(90 deg)","sin(30 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["asin","cos","tan"]},sinh:{name:"sinh",category:"Trigonometry",syntax:["sinh(x)"],description:"Compute the hyperbolic sine of x in radians.",examples:["sinh(0.5)"],seealso:["cosh","tanh"]},tan:{name:"tan",category:"Trigonometry",syntax:["tan(x)"],description:"Compute the tangent of x in radians.",examples:["tan(0.5)","sin(0.5) / cos(0.5)","tan(pi / 4)","tan(45 deg)"],seealso:["atan","sin","cos"]},tanh:{name:"tanh",category:"Trigonometry",syntax:["tanh(x)"],description:"Compute the hyperbolic tangent of x in radians.",examples:["tanh(0.5)","sinh(0.5) / cosh(0.5)"],seealso:["sinh","cosh"]},to:{name:"to",category:"Units",syntax:["x to unit","to(x, unit)"],description:"Change the unit of a value.",examples:["5 inch to cm","3.2kg to g","16 bytes in bits"],seealso:[]},clone:{name:"clone",category:"Utils",syntax:["clone(x)"],description:"Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",examples:["clone(3.5)","clone(2 - 4i)","clone(45 deg)","clone([1, 2; 3, 4])",'clone("hello world")'],seealso:[]},format:{name:"format",category:"Utils",syntax:["format(value)","format(value, precision)"],description:"Format a value of any type as string.",examples:["format(2.3)","format(3 - 4i)","format([])","format(pi, 3)"],seealso:["print"]},bin:{name:"bin",category:"Utils",syntax:["bin(value)"],description:"Format a number as binary",examples:["bin(2)"],seealso:["oct","hex"]},oct:{name:"oct",category:"Utils",syntax:["oct(value)"],description:"Format a number as octal",examples:["oct(56)"],seealso:["bin","hex"]},hex:{name:"hex",category:"Utils",syntax:["hex(value)"],description:"Format a number as hexadecimal",examples:["hex(240)"],seealso:["bin","oct"]},isNaN:{name:"isNaN",category:"Utils",syntax:["isNaN(x)"],description:"Test whether a value is NaN (not a number)",examples:["isNaN(2)","isNaN(0 / 0)","isNaN(NaN)","isNaN(Infinity)"],seealso:["isNegative","isNumeric","isPositive","isZero"]},isInteger:{name:"isInteger",category:"Utils",syntax:["isInteger(x)"],description:"Test whether a value is an integer number.",examples:["isInteger(2)","isInteger(3.5)","isInteger([3, 0.5, -2])"],seealso:["isNegative","isNumeric","isPositive","isZero"]},isNegative:{name:"isNegative",category:"Utils",syntax:["isNegative(x)"],description:"Test whether a value is negative: smaller than zero.",examples:["isNegative(2)","isNegative(0)","isNegative(-4)","isNegative([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isPositive","isZero"]},isNumeric:{name:"isNumeric",category:"Utils",syntax:["isNumeric(x)"],description:"Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",examples:["isNumeric(2)",'isNumeric("2")','hasNumericValue("2")',"isNumeric(0)","isNumeric(bignumber(500))","isNumeric(fraction(0.125))","isNumeric(2 + 3i)",'isNumeric([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive","isNaN","hasNumericValue"]},hasNumericValue:{name:"hasNumericValue",category:"Utils",syntax:["hasNumericValue(x)"],description:"Test whether a value is an numeric value. In case of a string, true is returned if the string contains a numeric value.",examples:["hasNumericValue(2)",'hasNumericValue("2")','isNumeric("2")',"hasNumericValue(0)","hasNumericValue(bignumber(500))","hasNumericValue(fraction(0.125))","hasNumericValue(2 + 3i)",'hasNumericValue([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive","isNaN","isNumeric"]},isPositive:{name:"isPositive",category:"Utils",syntax:["isPositive(x)"],description:"Test whether a value is positive: larger than zero.",examples:["isPositive(2)","isPositive(0)","isPositive(-4)","isPositive([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isNegative","isZero"]},isPrime:{name:"isPrime",category:"Utils",syntax:["isPrime(x)"],description:"Test whether a value is prime: has no divisors other than itself and one.",examples:["isPrime(3)","isPrime(-2)","isPrime([2, 17, 100])"],seealso:["isInteger","isNumeric","isNegative","isZero"]},isZero:{name:"isZero",category:"Utils",syntax:["isZero(x)"],description:"Test whether a value is zero.",examples:["isZero(2)","isZero(0)","isZero(-4)","isZero([3, 0, -2, 0])"],seealso:["isInteger","isNumeric","isNegative","isPositive"]},print:{name:"print",category:"Utils",syntax:["print(template, values)","print(template, values, precision)"],description:"Interpolate values into a string template.",examples:['print("Lucy is $age years old", {age: 5})','print("The value of pi is $pi", {pi: pi}, 3)','print("Hello, $user.name!", {user: {name: "John"}})','print("Values: $1, $2, $3", [6, 9, 4])'],seealso:["format"]},typeOf:{name:"typeOf",category:"Utils",syntax:["typeOf(x)"],description:"Get the type of a variable.",examples:["typeOf(3.5)","typeOf(2 - 4i)","typeOf(45 deg)",'typeOf("hello world")'],seealso:["getMatrixDataType"]},numeric:{name:"numeric",category:"Utils",syntax:["numeric(x)"],description:"Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.",examples:['numeric("4")','numeric("4", "number")','numeric("4", "BigNumber")','numeric("4", "Fraction")','numeric(4, "Fraction")','numeric(fraction(2, 5), "number")'],seealso:["number","fraction","bignumber","string","format"]}},eB="help",eH=(0,l.d5)(eB,["typed","mathWithTransform","Help"],e=>{var{typed:t,mathWithTransform:n,Help:r}=e;return t(eB,{any:function(e){var t,a=e;if("string"!=typeof e){for(t in n)if((0,o.nr)(n,t)&&e===n[t]){a=t;break}}var i=(0,m.YF)(eG,a);if(!i)throw Error('No documentation found on "'+("function"==typeof a?a.name:a)+'"');return new r(i)}})}),eW=n(2992);function eJ(e,t,n){var r=e.filter(function(e){return(0,i.FG)(e)&&!(e.name in t)&&!n.has(e.name)})[0];if(!r)throw Error('No undefined variable found in inline expression "'+e+'"');var a=r.name,s=new Map,o=new c.A3(n,s,new Set([a])),l=e.compile();return function(e){return s.set(a,e),l.evaluate(o)}}var eZ=(0,l.d5)("filter",["typed"],e=>{var{typed:t}=e;function n(e,t,n){var a,s;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(s=(0,i.FG)(e[1])||(0,i.l7)(e[1])?e[1].compile().evaluate(n):eJ(e[1],t,n)),r(a,s)}n.rawArgs=!0;var r=t("filter",{"Array, function":eV,"Matrix, function":function(e,t){return e.create(eV(e.toArray(),t))},"Array, RegExp":g.U_,"Matrix, RegExp":function(e,t){return e.create((0,g.U_)(e.toArray(),t))}});return n},{isTransformFunction:!0});function eV(e,t){return(0,g.hX)(e,function(e,n,r){return(0,eW.i)(t,e,[n+1],r,"filter")})}var eQ=(0,l.d5)("forEach",["typed"],e=>{var{typed:t}=e;function n(e,t,n){var a,s;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(s=(0,i.FG)(e[1])||(0,i.l7)(e[1])?e[1].compile().evaluate(n):eJ(e[1],t,n)),r(a,s)}n.rawArgs=!0;var r=t("forEach",{"Array | Matrix, function":function(e,t){!function n(r,a){if(!Array.isArray(r))return(0,eW.i)(t,r,a,e,"forEach");(0,g.Ed)(r,function(e,t){n(e,a.concat(t+1))})}(e.valueOf(),[])}});return n},{isTransformFunction:!0}),eX=(0,l.d5)("map",["typed"],e=>{var{typed:t}=e;function n(e,t,n){var a,s;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(s=(0,i.FG)(e[1])||(0,i.l7)(e[1])?e[1].compile().evaluate(n):eJ(e[1],t,n)),r(a,s)}n.rawArgs=!0;var r=t("map",{"Array, function":function(e,t){return eY(e,t,e)},"Matrix, function":function(e,t){return e.create(eY(e.valueOf(),t,e))}});return n},{isTransformFunction:!0});function eY(e,t,n){return function e(r,a){return Array.isArray(r)?(0,g.UI)(r,function(t,n){return e(t,a.concat(n+1))}):(0,eW.i)(t,r,a,n,"map")}(e,[])}var eK=n(131),e0=(0,l.d5)("apply",["typed","isInteger"],e=>{var{typed:t,isInteger:n}=e,r=(0,eK.j)({typed:t,isInteger:n});return t("apply",{"...any":function(e){var t=e[1];(0,i.hj)(t)?e[1]=t-1:(0,i.l9)(t)&&(e[1]=t.minus(1));try{return r.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),e1=n(1845),e2=(0,l.d5)("or",["typed","matrix","equalScalar","DenseMatrix","concat"],e=>{var{typed:t,matrix:n,equalScalar:r,DenseMatrix:a,concat:s}=e,o=(0,e1.Z)({typed:t,matrix:n,equalScalar:r,DenseMatrix:a,concat:s});function l(e,t,n){var r=e[0].compile().evaluate(n);return!!(!(0,i.uZ)(r)&&o(r,!1))||o(r,e[1].compile().evaluate(n))}return l.rawArgs=!0,l},{isTransformFunction:!0}),e3=n(6949),e4=(0,l.d5)("and",["typed","matrix","zeros","add","equalScalar","not","concat"],e=>{var{typed:t,matrix:n,equalScalar:r,zeros:a,not:s,concat:o}=e,l=(0,e3.I)({typed:t,matrix:n,equalScalar:r,zeros:a,not:s,concat:o});function c(e,t,n){var r=e[0].compile().evaluate(n);return!!((0,i.uZ)(r)||l(r,!0))&&l(r,e[1].compile().evaluate(n))}return c.rawArgs=!0,c},{isTransformFunction:!0}),e5=n(9002),e6=(0,l.d5)("concat",["typed","matrix","isInteger"],e=>{var{typed:t,matrix:n,isInteger:r}=e,a=(0,e5.k)({typed:t,matrix:n,isInteger:r});return t("concat",{"...any":function(e){var t=e.length-1,n=e[t];(0,i.hj)(n)?e[t]=n-1:(0,i.l9)(n)&&(e[t]=n.minus(1));try{return a.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),e7=n(3117);function e8(e){if(2===e.length&&(0,i.uZ)(e[0])){var t=(e=e.slice())[1];(0,i.hj)(t)?e[1]=t-1:(0,i.l9)(t)&&(e[1]=t.minus(1))}return e}var e9=(0,l.d5)("max",["typed","config","numeric","larger"],e=>{var{typed:t,config:n,numeric:r,larger:a}=e,i=(0,e7.J)({typed:t,config:n,numeric:r,larger:a});return t("max",{"...any":function(e){e=e8(e);try{return i.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),te=n(8289),tt=n(732),tn="print",tr=(0,l.d5)(tn,["typed","matrix","zeros","add"],e=>{var{typed:t,matrix:n,zeros:r,add:a}=e,i=(0,te.P)({typed:t,matrix:n,zeros:r,add:a});return t(tn,{"string, Object | Array":function(e,t){return i(s(e),t)},"string, Object | Array, number | Object":function(e,t,n){return i(s(e),t,n)}});function s(e){return e.replace(tt.k,e=>"$"+e.slice(1).split(".").map(function(e){return!isNaN(e)&&e.length>0?parseInt(e)-1:e}).join("."))}},{isTransformFunction:!0}),ta=n(2614),ti=(0,l.d5)("bitAnd",["typed","matrix","zeros","add","equalScalar","not","concat"],e=>{var{typed:t,matrix:n,equalScalar:r,zeros:a,not:s,concat:o}=e,l=(0,ta.i)({typed:t,matrix:n,equalScalar:r,zeros:a,not:s,concat:o});function c(e,t,n){var r=e[0].compile().evaluate(n);if(!(0,i.uZ)(r)){if(isNaN(r))return NaN;if(0===r||!1===r)return 0}return l(r,e[1].compile().evaluate(n))}return c.rawArgs=!0,c},{isTransformFunction:!0}),ts=n(3294),to="diff",tl=(0,l.d5)(to,["typed","matrix","subtract","number","bignumber"],e=>{var{typed:t,matrix:n,subtract:r,number:a,bignumber:i}=e,s=(0,ts.J)({typed:t,matrix:n,subtract:r,number:a,bignumber:i});return t(to,{"...any":function(e){e=e8(e);try{return s.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),tc=n(7543),tu=(0,l.d5)("min",["typed","config","numeric","smaller"],e=>{var{typed:t,config:n,numeric:r,smaller:a}=e,i=(0,tc.D)({typed:t,config:n,numeric:r,smaller:a});return t("min",{"...any":function(e){e=e8(e);try{return i.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),tp=n(7061),tm=(0,l.d5)("subset",["typed","matrix","zeros","add"],e=>{var{typed:t,matrix:n,zeros:r,add:a}=e,i=(0,tp.q)({typed:t,matrix:n,zeros:r,add:a});return t("subset",{"...any":function(e){try{return i.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),td=n(145),th=(0,l.d5)("bitOr",["typed","matrix","equalScalar","DenseMatrix","concat"],e=>{var{typed:t,matrix:n,equalScalar:r,DenseMatrix:a,concat:s}=e,o=(0,td.j)({typed:t,matrix:n,equalScalar:r,DenseMatrix:a,concat:s});function l(e,t,n){var r=e[0].compile().evaluate(n);if(!(0,i.uZ)(r)){if(isNaN(r))return NaN;if(-1===r)return -1;if(!0===r)return 1}return o(r,e[1].compile().evaluate(n))}return l.rawArgs=!0,l},{isTransformFunction:!0}),tf=n(6363),tg="cumsum",tx=(0,l.d5)(tg,["typed","add","unaryPlus"],e=>{var{typed:t,add:n,unaryPlus:r}=e,a=(0,tf.o)({typed:t,add:n,unaryPlus:r});return t(tg,{"...any":function(e){if(2===e.length&&(0,i.uZ)(e[0])){var t=e[1];(0,i.hj)(t)?e[1]=t-1:(0,i.l9)(t)&&(e[1]=t.minus(1))}try{return a.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),ty=(0,l.d5)("index",["Index","getMatrixDataType"],e=>{var{Index:t,getMatrixDataType:n}=e;return function(){for(var e=[],r=0,a=arguments.length;r<a;r++){var s=arguments[r];if((0,i.bR)(s))s.start--,s.end-=s.step>0?0:2;else if(s&&!0===s.isSet)s=s.map(function(e){return e-1});else if((0,i.kJ)(s)||(0,i.SW)(s))"boolean"!==n(s)&&(s=s.map(function(e){return e-1}));else if((0,i.hj)(s))s--;else if((0,i.l9)(s))s=s.toNumber()-1;else if("string"==typeof s);else throw TypeError("Dimension must be an Array, Matrix, number, string, or Range");e[r]=s}var o=new t;return t.apply(o,e),o}},{isTransformFunction:!0}),tv=n(2296),tb=(0,l.d5)("sum",["typed","config","add","numeric"],e=>{var{typed:t,config:n,add:r,numeric:a}=e,i=(0,tv.O)({typed:t,config:n,add:r,numeric:a});return t("sum",{"...any":function(e){e=e8(e);try{return i.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),tw=n(451),tN=(0,l.d5)("range",["typed","config","?matrix","?bignumber","smaller","smallerEq","larger","largerEq","add","isPositive"],e=>{var{typed:t,config:n,matrix:r,bignumber:a,smaller:i,smallerEq:s,larger:o,largerEq:l,add:c,isPositive:u}=e,p=(0,tw.M)({typed:t,config:n,matrix:r,bignumber:a,smaller:i,smallerEq:s,larger:o,largerEq:l,add:c,isPositive:u});return t("range",{"...any":function(e){var t=e.length-1;return"boolean"!=typeof e[t]&&e.push(!0),p.apply(null,e)}})},{isTransformFunction:!0}),tk=n(8481),tC=(0,l.d5)("row",["typed","Index","matrix","range"],e=>{var{typed:t,Index:n,matrix:r,range:a}=e,s=(0,tk.v)({typed:t,Index:n,matrix:r,range:a});return t("row",{"...any":function(e){var t=e.length-1,n=e[t];(0,i.hj)(n)&&(e[t]=n-1);try{return s.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),tS=n(5052),tT=(0,l.d5)("column",["typed","Index","matrix","range"],e=>{var{typed:t,Index:n,matrix:r,range:a}=e,s=(0,tS.w)({typed:t,Index:n,matrix:r,range:a});return t("column",{"...any":function(e){var t=e.length-1,n=e[t];(0,i.hj)(n)&&(e[t]=n-1);try{return s.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),tO=n(5222),tA=(0,l.d5)("mean",["typed","add","divide"],e=>{var{typed:t,add:n,divide:r}=e,a=(0,tO.Q)({typed:t,add:n,divide:r});return t("mean",{"...any":function(e){e=e8(e);try{return a.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),tE=n(253),tq=(0,l.d5)("quantileSeq",["typed","bignumber","add","subtract","divide","multiply","partitionSelect","compare","isInteger","smaller","smallerEq","larger"],e=>{var{typed:t,bignumber:n,add:r,subtract:a,divide:i,multiply:s,partitionSelect:o,compare:l,isInteger:c,smaller:u,smallerEq:p,larger:m}=e,d=(0,tE.y)({typed:t,bignumber:n,add:r,subtract:a,divide:i,multiply:s,partitionSelect:o,compare:l,isInteger:c,smaller:u,smallerEq:p,larger:m});return t("quantileSeq",{"Array | Matrix, number | BigNumber":d,"Array | Matrix, number | BigNumber, number":(e,t,n)=>d(e,t,h(n)),"Array | Matrix, number | BigNumber, boolean":d,"Array | Matrix, number | BigNumber, boolean, number":(e,t,n,r)=>d(e,t,n,h(r)),"Array | Matrix, Array | Matrix":d,"Array | Matrix, Array | Matrix, number":(e,t,n)=>d(e,t,h(n)),"Array | Matrix, Array | Matrix, boolean":d,"Array | Matrix, Array | Matrix, boolean, number":(e,t,n,r)=>d(e,t,n,h(r))});function h(e){return e8([[],e])[1]}},{isTransformFunction:!0}),tM=n(2023),tz="variance",tj=(0,l.d5)(tz,["typed","add","subtract","multiply","divide","apply","isNaN"],e=>{var{typed:t,add:n,subtract:r,multiply:a,divide:i,apply:s,isNaN:o}=e,l=(0,tM.F)({typed:t,add:n,subtract:r,multiply:a,divide:i,apply:s,isNaN:o});return t(tz,{"...any":function(e){e=e8(e);try{return l.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),tI=n(1404),tF=(0,l.d5)("std",["typed","map","sqrt","variance"],e=>{var{typed:t,map:n,sqrt:r,variance:a}=e,i=(0,tI.X)({typed:t,map:n,sqrt:r,variance:a});return t("std",{"...any":function(e){e=e8(e);try{return i.apply(null,e)}catch(e){throw et(e)}}})},{isTransformFunction:!0}),tP=n(8183),tR={},tD={},t$={},tL=u({mathWithTransform:tD}),tU=f({Node:tL}),t_=M({Node:tL}),tG=j({Node:tL}),tB=F({Node:tL}),tH=R({Node:tL}),tW=$({Node:tL,ResultSet:tP.Z0z}),tJ=U({Node:tL}),tZ=G({Node:tL}),tV=H({Node:tL}),tQ=W({classes:t$}),tX=J({math:tR,typed:tP.Gzl}),tY=V({Node:tL,typed:tP.Gzl}),tK=X({Chain:tX,typed:tP.Gzl}),t0=K({Node:tL,size:tP.dpJ}),t1=ea({Node:tL,subset:tP.P9L}),t2=es({matrix:tP.pIu,Node:tL,subset:tP.P9L}),t3=eo({Unit:tP.fbc,Node:tL,math:tR}),t4=ec({Node:tL,SymbolNode:t3,math:tR}),t5=em({AccessorNode:t1,ArrayNode:tH,AssignmentNode:t2,BlockNode:tW,ConditionalNode:tJ,ConstantNode:tZ,FunctionAssignmentNode:tY,FunctionNode:t4,IndexNode:t0,ObjectNode:tU,OperatorNode:t_,ParenthesisNode:tG,RangeNode:tV,RelationalNode:tB,SymbolNode:t3,config:a.v,numeric:tP.uRn,typed:tP.Gzl}),t6=ed({ConstantNode:tZ,FunctionNode:t4,OperatorNode:t_,ParenthesisNode:tG,parse:t5,typed:tP.Gzl}),t7=ey({bignumber:tP.edS,fraction:tP.Pj$,AccessorNode:t1,ArrayNode:tH,ConstantNode:tZ,FunctionNode:t4,IndexNode:t0,ObjectNode:tU,OperatorNode:t_,SymbolNode:t3,config:a.v,mathWithTransform:tD,matrix:tP.pIu,typed:tP.Gzl}),t8=eb({parse:t5,typed:tP.Gzl}),t9=eN({AccessorNode:t1,ArrayNode:tH,ConstantNode:tZ,FunctionNode:t4,IndexNode:t0,ObjectNode:tU,OperatorNode:t_,ParenthesisNode:tG,SymbolNode:t3,add:tP.IHx,divide:tP.csF,equal:tP.DgJ,isZero:tP.Fr9,multiply:tP.JpY,parse:t5,pow:tP.sQ3,subtract:tP.$XF,typed:tP.Gzl}),ne=eC({parse:t5,typed:tP.Gzl}),nt=eS({evaluate:ne}),nn=eT({evaluate:ne}),nr=eE({bignumber:tP.edS,fraction:tP.Pj$,AccessorNode:t1,ArrayNode:tH,ConstantNode:tZ,FunctionNode:t4,IndexNode:t0,ObjectNode:tU,OperatorNode:t_,ParenthesisNode:tG,SymbolNode:t3,add:tP.IHx,config:a.v,divide:tP.csF,equal:tP.DgJ,isZero:tP.Fr9,mathWithTransform:tD,matrix:tP.pIu,multiply:tP.JpY,parse:t5,pow:tP.sQ3,resolve:t6,simplifyConstant:t7,simplifyCore:t9,subtract:tP.$XF,typed:tP.Gzl}),na=eM({OperatorNode:t_,parse:t5,simplify:nr,typed:tP.Gzl}),ni=ej({parse:t5,typed:tP.Gzl}),ns=eF({Parser:nn,typed:tP.Gzl}),no=eD({bignumber:tP.edS,fraction:tP.Pj$,AccessorNode:t1,ArrayNode:tH,ConstantNode:tZ,FunctionNode:t4,IndexNode:t0,ObjectNode:tU,OperatorNode:t_,ParenthesisNode:tG,SymbolNode:t3,add:tP.IHx,config:a.v,divide:tP.csF,equal:tP.DgJ,isZero:tP.Fr9,mathWithTransform:tD,matrix:tP.pIu,multiply:tP.JpY,parse:t5,pow:tP.sQ3,simplify:nr,simplifyConstant:t7,simplifyCore:t9,subtract:tP.$XF,typed:tP.Gzl}),nl=eL({ConstantNode:tZ,FunctionNode:t4,OperatorNode:t_,ParenthesisNode:tG,SymbolNode:t3,config:a.v,equal:tP.DgJ,isZero:tP.Fr9,numeric:tP.uRn,parse:t5,simplify:nr,typed:tP.Gzl}),nc=eH({Help:nt,mathWithTransform:tD,typed:tP.Gzl});(0,r.Z)(tR,{e:tP.e,false:tP.WJv,fineStructure:tP.Oyo,i:tP.i,Infinity:tP.OvO,LN10:tP.cw7,LOG10E:tP.doM,NaN:tP.xOA,null:tP.OSG,phi:tP.Skb,SQRT1_2:tP.PNl,sackurTetrode:tP.KO_,tau:tP.BZ_,true:tP.wcc,E:tP.e,version:tP.i83,efimovFactor:tP.dvW,LN2:tP.bZs,pi:tP.pi,replacer:tP.PHU,reviver:tQ,SQRT2:tP.vNo,typed:tP.Gzl,unaryPlus:tP.uKN,PI:tP.pi,weakMixingAngle:tP.Uud,abs:tP.WnP,acos:tP.Khb,acot:tP.C6L,acsc:tP.rcO,addScalar:tP.scv,arg:tP.R91,asech:tP.lo8,asinh:tP.VfV,atan:tP.z4N,atanh:tP.C80,bignumber:tP.edS,bitNot:tP.Pfe,boolean:tP.O72,clone:tP.d9v,combinations:tP.BjO,complex:tP.PYB,conj:tP.ruJ,cos:tP.mCk,cot:tP.oHe,csc:tP.QBQ,cube:tP.kOm,equalScalar:tP.kuq,erf:tP.qNN,exp:tP.Qqt,expm1:tP.t$B,filter:tP.hXT,forEach:tP.Ed_,format:tP.WUZ,getMatrixDataType:tP.mOi,hex:tP.$v1,im:tP.im,isInteger:tP.UaK,isNegative:tP.nMy,isPositive:tP.xPR,isZero:tP.Fr9,LOG2E:tP.wwJ,lgamma:tP.KF1,log10:tP.mvw,log2:tP.k3Q,map:tP.UID,multiplyScalar:tP.cfl,not:tP.ffD,number:tP.Rxh,oct:tP.jfK,pickRandom:tP.sDj,print:tP.S0v,random:tP.MXc,re:tP.re,sec:tP.BEc,sign:tP.Xxe,sin:tP.O$l,splitUnit:tP.jLI,square:tP.h62,string:tP.Z_8,subtractScalar:tP.Hxc,tan:tP.ORZ,typeOf:tP.kM2,acosh:tP.__u,acsch:tP.KLC,apply:tP.nnj,asec:tP.PUJ,bin:tP.Ly_,chain:tK,combinationsWithRep:tP.d4C,cosh:tP.f9Y,csch:tP.RhL,isNaN:tP.i2d,isPrime:tP.e47,randomInt:tP.Iyf,sech:tP.Fbd,sinh:tP.R_K,sparse:tP.rVs,sqrt:tP._b3,tanh:tP.AEp,unaryMinus:tP.T8F,acoth:tP.trc,coth:tP.h6M,fraction:tP.Pj$,isNumeric:tP.kEn,matrix:tP.pIu,matrixFromFunction:tP.ZcA,mode:tP.xJM,numeric:tP.uRn,prod:tP.WVs,reshape:tP.XLQ,size:tP.dpJ,squeeze:tP.L9e,transpose:tP.p4s,xgcd:tP.NpV,zeros:tP.lls,asin:tP.ZRM,cbrt:tP.eKn,concat:tP.zoF,count:tP.QXW,ctranspose:tP.NZC,diag:tP.Ka3,divideScalar:tP.QgA,dotDivide:tP.yVo,equal:tP.DgJ,flatten:tP.xHg,hasNumericValue:tP.Hdk,identity:tP.yRu,kron:tP.JvE,largerEq:tP.Cr4,leftShift:tP.w57,lsolve:tP.wtJ,matrixFromColumns:tP.ndY,nthRoot:tP.C7f,ones:tP.iUs,qr:tP.qr,resize:tP.SIr,rightArithShift:tP.nq0,round:tP.NMM,smaller:tP.Nyh,subtract:tP.$XF,to:tP.to,unequal:tP.KPr,usolve:tP.LDk,xor:tP.dlQ,add:tP.IHx,atan2:tP.fvJ,bitAnd:tP.hx9,bitOr:tP.wKT,bitXor:tP.nNS,catalan:tP.tjo,compare:tP.quX,compareText:tP.cdM,cumsum:tP.zbp,deepEqual:tP.vZr,diff:tP.Hgg,distance:tP.TE$,dot:tP.AKD,equalText:tP.eZD,floor:tP.GWj,gcd:tP.thl,hypot:tP._mT,larger:tP.TWx,log:tP.cM7,lsolveAll:tP.ER9,matrixFromRows:tP.lPE,min:tP.VV$,mod:tP.wQq,multiply:tP.JpY,nthRoots:tP.$$R,or:tP.or,partitionSelect:tP.JeQ,rightLogShift:tP.LdX,slu:tP.cEy,subset:tP.P9L,sum:tP.Smz,trace:tP.g49,usolveAll:tP.bJ2,zpk2tf:tP.kjZ,ceil:tP.mDi,compareNatural:tP.rn1,composition:tP.ift,cross:tP.kCc,det:tP.Q8I,dotMultiply:tP.iOk,fix:tP.zG0,index:tP.KzB,intersect:tP.wfr,invmod:tP.QNt,lcm:tP.uqG,log1p:tP.Krr,max:tP.Fp7,setCartesian:tP.$ZK,setDistinct:tP.Z41,setIsSubset:tP.TT1,setPowerset:tP.ljT,smallerEq:tP.Sq_,sort:tP.DYV,and:tP.xDy,range:tP.w6H,row:tP.O7B,setDifference:tP.TVT,setMultiplicity:tP.oNG,setSymDifference:tP.V4s,column:tP.$QP,inv:tP.JBn,lup:tP.xly,pinv:tP.mvk,pow:tP.sQ3,setIntersect:tP.ff9,setUnion:tP.uyX,sqrtm:tP.jXX,vacuumImpedance:tP.tnB,wienDisplacement:tP.bGh,atomicMass:tP.uzo,bohrMagneton:tP.Cl$,boltzmann:tP.Rhk,conductanceQuantum:tP.xk2,coulomb:tP.JPg,deuteronMass:tP.dEt,dotPow:tP.qgo,electricConstant:tP.dXo,elementaryCharge:tP.iMQ,expm:tP.Ege,faraday:tP.Am2,fft:tP.kp_,gamma:tP.yiU,gravitationConstant:tP.H9q,hartreeEnergy:tP.HQL,ifft:tP.Sxn,klitzing:tP.$$$,loschmidt:tP.PUn,magneticConstant:tP.$nU,molarMass:tP.ak$,molarPlanckConstant:tP.kEb,neutronMass:tP.li8,nuclearMagneton:tP._A2,planckCharge:tP.JaK,planckLength:tP.gil,planckTemperature:tP.XAT,protonMass:tP.CxM,quantumOfCirculation:tP.TYM,reducedPlanckConstant:tP.vAu,rydberg:tP.rMB,secondRadiation:tP.ahj,speedOfLight:tP.bl5,stefanBoltzmann:tP.yO5,thomsonCrossSection:tP.bej,avogadro:tP._vz,bohrRadius:tP.tUn,createUnit:tP.JP7,divide:tP.csF,electronMass:tP._G2,factorial:tP.bLN,firstRadiation:tP.Vvs,gravity:tP.QXX,inverseConductanceQuantum:tP.WSk,lusolve:tP.DU,magneticFluxQuantum:tP.oLv,molarMassC12:tP.esS,multinomial:tP.SJ_,parse:t5,permutations:tP.DW7,planckMass:tP.kc5,polynomialRoot:tP.Qg6,resolve:t6,setSize:tP.yk3,simplifyConstant:t7,solveODE:tP.bBp,stirlingS2:tP.bAb,unit:tP.bfT,bellNumbers:tP.O7j,compile:t8,eigs:tP.Gq_,fermiCoupling:tP.cIy,gasConstant:tP.eOQ,kldivergence:tP.mYz,mean:tP.J69,molarVolume:tP.n4B,planckConstant:tP.whQ,quantileSeq:tP.pAO,simplifyCore:t9,variance:tP.CAK,classicalElectronRadius:tP._fe,evaluate:ne,median:tP.C2o,simplify:nr,symbolicEqual:na,corr:tP.O1K,freqz:tP.Ltn,leafCount:ni,mad:tP.UFs,parser:ns,rationalize:no,std:tP.qoR,zeta:tP.Xcd,derivative:nl,norm:tP.KOy,rotationMatrix:tP.k8z,help:nc,planckTime:tP.oTb,schur:tP.U5j,rotate:tP.U1s,sylvester:tP.rew,lyap:tP.t6m,config:a.v}),(0,r.Z)(tD,tR,{filter:eZ({typed:tP.Gzl}),forEach:eQ({typed:tP.Gzl}),map:eX({typed:tP.Gzl}),apply:e0({isInteger:tP.UaK,typed:tP.Gzl}),or:e2({DenseMatrix:tP.JfM,concat:tP.zoF,equalScalar:tP.kuq,matrix:tP.pIu,typed:tP.Gzl}),and:e4({add:tP.IHx,concat:tP.zoF,equalScalar:tP.kuq,matrix:tP.pIu,not:tP.ffD,typed:tP.Gzl,zeros:tP.lls}),concat:e6({isInteger:tP.UaK,matrix:tP.pIu,typed:tP.Gzl}),max:e9({config:a.v,larger:tP.TWx,numeric:tP.uRn,typed:tP.Gzl}),print:tr({add:tP.IHx,matrix:tP.pIu,typed:tP.Gzl,zeros:tP.lls}),bitAnd:ti({add:tP.IHx,concat:tP.zoF,equalScalar:tP.kuq,matrix:tP.pIu,not:tP.ffD,typed:tP.Gzl,zeros:tP.lls}),diff:tl({bignumber:tP.edS,matrix:tP.pIu,number:tP.Rxh,subtract:tP.$XF,typed:tP.Gzl}),min:tu({config:a.v,numeric:tP.uRn,smaller:tP.Nyh,typed:tP.Gzl}),subset:tm({add:tP.IHx,matrix:tP.pIu,typed:tP.Gzl,zeros:tP.lls}),bitOr:th({DenseMatrix:tP.JfM,concat:tP.zoF,equalScalar:tP.kuq,matrix:tP.pIu,typed:tP.Gzl}),cumsum:tx({add:tP.IHx,typed:tP.Gzl,unaryPlus:tP.uKN}),index:ty({Index:tP.gmE,getMatrixDataType:tP.mOi}),sum:tb({add:tP.IHx,config:a.v,numeric:tP.uRn,typed:tP.Gzl}),range:tN({bignumber:tP.edS,matrix:tP.pIu,add:tP.IHx,config:a.v,isPositive:tP.xPR,larger:tP.TWx,largerEq:tP.Cr4,smaller:tP.Nyh,smallerEq:tP.Sq_,typed:tP.Gzl}),row:tC({Index:tP.gmE,matrix:tP.pIu,range:tP.w6H,typed:tP.Gzl}),column:tT({Index:tP.gmE,matrix:tP.pIu,range:tP.w6H,typed:tP.Gzl}),mean:tA({add:tP.IHx,divide:tP.csF,typed:tP.Gzl}),quantileSeq:tq({add:tP.IHx,bignumber:tP.edS,compare:tP.quX,divide:tP.csF,isInteger:tP.UaK,larger:tP.TWx,multiply:tP.JpY,partitionSelect:tP.JeQ,smaller:tP.Nyh,smallerEq:tP.Sq_,subtract:tP.$XF,typed:tP.Gzl}),variance:tj({add:tP.IHx,apply:tP.nnj,divide:tP.csF,isNaN:tP.i2d,multiply:tP.JpY,subtract:tP.$XF,typed:tP.Gzl}),std:tF({map:tP.UID,sqrt:tP._b3,typed:tP.Gzl,variance:tP.CAK})}),(0,r.Z)(t$,{BigNumber:tP.O$v,Complex:tP.Zz9,Fraction:tP.iAi,Matrix:tP.y3G,Node:tL,ObjectNode:tU,OperatorNode:t_,ParenthesisNode:tG,Range:tP.e6w,RelationalNode:tB,ResultSet:tP.Z0z,ArrayNode:tH,BlockNode:tW,ConditionalNode:tJ,ConstantNode:tZ,DenseMatrix:tP.JfM,RangeNode:tV,Chain:tX,FunctionAssignmentNode:tY,SparseMatrix:tP.A7i,IndexNode:t0,ImmutableDenseMatrix:tP.MUK,Index:tP.gmE,AccessorNode:t1,AssignmentNode:t2,FibonacciHeap:tP.Q3n,Spa:tP.HJh,Unit:tP.fbc,SymbolNode:t3,FunctionNode:t4,Help:nt,Parser:nn}),tX.createProxy(tR)}}]);